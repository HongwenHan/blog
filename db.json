{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/images/add_domain.png","path":"images/add_domain.png","modified":0,"renderable":0},{"_id":"source/images/add_ssl.png","path":"images/add_ssl.png","modified":0,"renderable":0},{"_id":"source/images/continue_project.png","path":"images/continue_project.png","modified":0,"renderable":0},{"_id":"source/images/create_new_site.png","path":"images/create_new_site.png","modified":0,"renderable":0},{"_id":"source/images/deploy_site.png","path":"images/deploy_site.png","modified":0,"renderable":0},{"_id":"source/images/domain_deal.png","path":"images/domain_deal.png","modified":0,"renderable":0},{"_id":"source/images/domain_success_own.png","path":"images/domain_success_own.png","modified":0,"renderable":0},{"_id":"source/images/netlify_signup.png","path":"images/netlify_signup.png","modified":0,"renderable":0},{"_id":"source/images/change_site_name.png","path":"images/change_site_name.png","modified":0,"renderable":0},{"_id":"source/images/custom_domain.png","path":"images/custom_domain.png","modified":0,"renderable":0},{"_id":"themes/bmw/source/css/base.css","path":"css/base.css","modified":0,"renderable":1},{"_id":"themes/bmw/source/css/base.css.map","path":"css/base.css.map","modified":0,"renderable":1},{"_id":"themes/bmw/source/css/github-markdown.css","path":"css/github-markdown.css","modified":0,"renderable":1},{"_id":"themes/bmw/source/css/highlight.css","path":"css/highlight.css","modified":0,"renderable":1},{"_id":"themes/bmw/source/icon/demo_fontclass.html","path":"icon/demo_fontclass.html","modified":0,"renderable":1},{"_id":"themes/bmw/source/css/prism.css","path":"css/prism.css","modified":0,"renderable":1},{"_id":"themes/bmw/source/icon/iconfont.css","path":"icon/iconfont.css","modified":0,"renderable":1},{"_id":"themes/bmw/source/icon/iconfont.eot","path":"icon/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/bmw/source/icon/iconfont.js","path":"icon/iconfont.js","modified":0,"renderable":1},{"_id":"themes/bmw/source/icon/iconfont.svg","path":"icon/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/bmw/source/icon/iconfont.ttf","path":"icon/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/bmw/source/js/util.js","path":"js/util.js","modified":0,"renderable":1},{"_id":"themes/bmw/source/icon/iconfont.woff","path":"icon/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/bmw/source/scss/article.scss","path":"scss/article.scss","modified":0,"renderable":1},{"_id":"themes/bmw/source/scss/animation.scss","path":"scss/animation.scss","modified":0,"renderable":1},{"_id":"themes/bmw/source/scss/base.scss","path":"scss/base.scss","modified":0,"renderable":1},{"_id":"themes/bmw/source/scss/vcomments.scss","path":"scss/vcomments.scss","modified":0,"renderable":1},{"_id":"themes/bmw/source/images/alihb.png","path":"images/alihb.png","modified":0,"renderable":1},{"_id":"themes/bmw/source/scss/mathjax.scss","path":"scss/mathjax.scss","modified":0,"renderable":1},{"_id":"themes/bmw/source/images/alipay.png","path":"images/alipay.png","modified":0,"renderable":1},{"_id":"themes/bmw/source/images/favicon.ico","path":"images/favicon.ico","modified":0,"renderable":1},{"_id":"themes/bmw/source/images/godbmw.jpeg","path":"images/godbmw.jpeg","modified":0,"renderable":1},{"_id":"themes/bmw/source/images/hhongwen.jpg","path":"images/hhongwen.jpg","modified":0,"renderable":1},{"_id":"themes/bmw/source/images/loveinliuy.png","path":"images/loveinliuy.png","modified":0,"renderable":1},{"_id":"themes/bmw/source/images/smile.png","path":"images/smile.png","modified":0,"renderable":1},{"_id":"themes/bmw/source/images/touch-icon.png","path":"images/touch-icon.png","modified":0,"renderable":1},{"_id":"themes/bmw/source/images/wechat.png","path":"images/wechat.png","modified":0,"renderable":1},{"_id":"themes/bmw/source/stylus/highlight.styl","path":"stylus/highlight.styl","modified":0,"renderable":1},{"_id":"themes/bmw/source/js/valine.min.js","path":"js/valine.min.js","modified":0,"renderable":1},{"_id":"themes/bmw/source/scss/layout/about.scss","path":"scss/layout/about.scss","modified":0,"renderable":1},{"_id":"themes/bmw/source/scss/layout/category.scss","path":"scss/layout/category.scss","modified":0,"renderable":1},{"_id":"themes/bmw/source/scss/layout/friend.scss","path":"scss/layout/friend.scss","modified":0,"renderable":1},{"_id":"themes/bmw/source/scss/layout/home.scss","path":"scss/layout/home.scss","modified":0,"renderable":1},{"_id":"themes/bmw/source/scss/layout/index.scss","path":"scss/layout/index.scss","modified":0,"renderable":1},{"_id":"themes/bmw/source/scss/layout/post.scss","path":"scss/layout/post.scss","modified":0,"renderable":1},{"_id":"themes/bmw/source/scss/layout/tag.scss","path":"scss/layout/tag.scss","modified":0,"renderable":1},{"_id":"themes/bmw/source/scss/partial/footer.scss","path":"scss/partial/footer.scss","modified":0,"renderable":1},{"_id":"themes/bmw/source/scss/partial/navigation.scss","path":"scss/partial/navigation.scss","modified":0,"renderable":1},{"_id":"themes/bmw/source/scss/partial/reward.scss","path":"scss/partial/reward.scss","modified":0,"renderable":1},{"_id":"themes/bmw/source/scss/partial/timeline.scss","path":"scss/partial/timeline.scss","modified":0,"renderable":1},{"_id":"source/images/running.png","path":"images/running.png","modified":0,"renderable":0},{"_id":"source/images/despair.png","path":"images/despair.png","modified":0,"renderable":0},{"_id":"source/images/happyness.png","path":"images/happyness.png","modified":0,"renderable":0},{"_id":"themes/bmw/source/js/echo.js","path":"js/echo.js","modified":1,"renderable":1},{"_id":"themes/bmw/source/images/blank.gif","path":"images/blank.gif","modified":1,"renderable":1},{"_id":"themes/bmw/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1}],"Cache":[{"_id":"themes/bmw/.gitignore","hash":"f94054f0d11037f462659903f2f87d680b71a855","modified":1544667475378},{"_id":"themes/bmw/README.md","hash":"f9f59d7ec06a60e8320f27505308d80ae80f29d9","modified":1544667475379},{"_id":"themes/bmw/_config.yml","hash":"8bf47fde5253ced0415a7df0c1ff3e3d6d12e4d0","modified":1545379065967},{"_id":"themes/bmw/LICENSE","hash":"6b94affcc30b97ab0889de7e3908ae6cd4a20463","modified":1544667475378},{"_id":"themes/bmw/demo._config.yml","hash":"ecf6de9435fb45e45ba89d71814190674978fcb1","modified":1544667475380},{"_id":"source/_drafts/Git使用小结（一）.md","hash":"19e801dcbe0db3472d289e1eedcf73f0f70f9f1e","modified":1545296720563},{"_id":"source/_drafts/Neo4j使用小结（一）.md","hash":"1536a89f593427f4b670d167d84d24ef39678119","modified":1545364238356},{"_id":"source/_posts/Centos7安装MongoDB4-0.md","hash":"f6530dd03a8d3132a75b3fa8bce7cf336bfd9c56","modified":1545810480969},{"_id":"source/_posts/Centos7安装Python3-7.md","hash":"1986001b24880acb8ee6272d26b96d36bbd2d965","modified":1545810522525},{"_id":"source/_posts/Linux下安装JDK.md","hash":"5a06d69dae7badddd271fa9c65ee64e40a0fa5f1","modified":1545015099270},{"_id":"source/_posts/Hexo+GitHub+Netlify搭建属于自己的博客网站.md","hash":"d1238c01aa97ab892a824570f94c54b08e8767b2","modified":1545014944196},{"_id":"source/_posts/Maven将jar倒入本地maven仓库.md","hash":"c258c9cc0f9ae101a31e7ef6acd172ac736da07b","modified":1545015153379},{"_id":"source/_posts/Linux链接网络.md","hash":"d3b07ef4e1a2add2370b7736e28605bfec16d2a4","modified":1545015124066},{"_id":"source/_posts/hello-world.md","hash":"b0efbfcdc4f25cc38cd02133aaee00ef57122a81","modified":1545014963534},{"_id":"source/_posts/当幸福来敲门 The Pursuit of Happyness.md","hash":"b860d34fea4a96d5bfb45c9cf5aa47697bc61ab8","modified":1545218198548},{"_id":"source/_posts/我的第一个博客.md","hash":"40b714cdd4e87f462a4d2c26c5831ce52325b964","modified":1545015513909},{"_id":"source/about/index.md","hash":"cfb461d233e0d4dffe18b072a3afc2117ddff3b4","modified":1545015269378},{"_id":"source/categories/index.md","hash":"97992c17a9f0ace2ed4ff930dd799c9f0ad47c1f","modified":1544670049321},{"_id":"source/friends/index.md","hash":"4bceda45f5a1e529c3932c01af94fde5eef48280","modified":1544697155065},{"_id":"source/images/add_domain.png","hash":"d544e78a14d521b154249909d2eaee23ff4ffbf8","modified":1545013992862},{"_id":"source/images/add_ssl.png","hash":"da8bbd9b9b825e937e49a9aa94fd996c62796ef0","modified":1545013992863},{"_id":"source/images/continue_project.png","hash":"d292ee16aad3c6f9b97194f938ad15cf43510b51","modified":1545013992865},{"_id":"source/images/create_new_site.png","hash":"032297e8ad280bafcd4150aa10051b1f588f3d72","modified":1545013992866},{"_id":"source/images/deploy_site.png","hash":"83df813c7ce1f0740f0fa802e2fd1c2fc857d833","modified":1545013992868},{"_id":"source/images/domain_deal.png","hash":"89d34fc9abb274301dc39c63f71344466d081a29","modified":1545013992868},{"_id":"source/images/domain_success_own.png","hash":"4e0a7ec67ce6fd6f7ec45e71a5220bae513d8b04","modified":1545013992869},{"_id":"source/images/netlify_signup.png","hash":"366a8c54551f125dabd48a20274af096f0a48dc5","modified":1545013992869},{"_id":"source/tags/index.md","hash":"6f435e0c4413d35e77ed8be1f81be258bc083fae","modified":1544669901454},{"_id":"themes/bmw/layout/archive.ejs","hash":"2ad7c6bf3a1a2faca580d6702606ca0ab220543f","modified":1544667475385},{"_id":"themes/bmw/layout/category.ejs","hash":"2ad7c6bf3a1a2faca580d6702606ca0ab220543f","modified":1544667475385},{"_id":"themes/bmw/layout/index.ejs","hash":"fb1ddc6e6d3972a75792b6e6b414f743e09903f7","modified":1545013992871},{"_id":"themes/bmw/layout/layout.ejs","hash":"fba22fd5c1105a53c13e96966b827d0f14155e84","modified":1544667475387},{"_id":"themes/bmw/layout/post.ejs","hash":"826f834451b99147d8986969c1f2a8402871fb84","modified":1545102082924},{"_id":"themes/bmw/layout/tag.ejs","hash":"2ad7c6bf3a1a2faca580d6702606ca0ab220543f","modified":1544667475388},{"_id":"source/images/change_site_name.png","hash":"2e77922053a7ed79a6a789dbd0f6046b1d2efa24","modified":1545013992865},{"_id":"source/images/custom_domain.png","hash":"152a4240e364272b1bc2c77e925495c1dec25746","modified":1545013992867},{"_id":"themes/bmw/layout/_partial/comment.ejs","hash":"42d1004d4a565edadea4011bc96ab7b596ef086f","modified":1544667475380},{"_id":"themes/bmw/layout/_partial/fancybox.ejs","hash":"a592090cf1ca297557025b34fe6e42b2351a8c8f","modified":1544667475381},{"_id":"themes/bmw/layout/_partial/footer.ejs","hash":"8769b608c142663bf832e1767bc0a7c76307ab30","modified":1545013992871},{"_id":"themes/bmw/layout/_partial/header.ejs","hash":"62b60c9245aeb80f8e9168c3e84521a331d56f0f","modified":1545794525215},{"_id":"themes/bmw/layout/_partial/mathjax.ejs","hash":"7eda63f9521cd46791cf194c1e5a836c06eece6f","modified":1544667475383},{"_id":"themes/bmw/layout/_partial/navigation.ejs","hash":"ccb8a83cebdee37fb20e823c0fd0dee1a50473d8","modified":1544690339934},{"_id":"themes/bmw/layout/_partial/player.ejs","hash":"cb775da5566902d99822ab35650ca75bdda19110","modified":1544667475383},{"_id":"themes/bmw/layout/_partial/reward.ejs","hash":"bde589e87662ab36c501482ab82f2936cf049868","modified":1544667475384},{"_id":"themes/bmw/layout/_partial/social.ejs","hash":"cf60dfe8c36c0ba8fd2160182f001c4131ae93af","modified":1544667475384},{"_id":"themes/bmw/layout/_partial/timer.ejs","hash":"0fcca47acd4eb686cf25fb366b0b29046a1b5512","modified":1544667475384},{"_id":"themes/bmw/layout/component/back-to-up.ejs","hash":"d202c36d4c017ebeec766eee3ae6abebb6580d10","modified":1544667475386},{"_id":"themes/bmw/layout/component/timeline.ejs","hash":"509c72cdb2640d005dd3c4b2a15630875469262b","modified":1544667475387},{"_id":"themes/bmw/layout/component/passage-viewer.ejs","hash":"549eeb3c541a832430fc701ad7552164e717c7f8","modified":1544667475386},{"_id":"themes/bmw/source/css/base.css","hash":"07fc6aede960c324f49c1de5a5aa676216972e0c","modified":1545200637758},{"_id":"themes/bmw/source/css/base.css.map","hash":"bb3be9adbdeff7685241878cd2c1904781fa783a","modified":1544667475390},{"_id":"themes/bmw/source/css/github-markdown.css","hash":"8fd7083b01da6ae8c84253dc7120424aa451fa44","modified":1544667475390},{"_id":"themes/bmw/source/css/highlight.css","hash":"ab7490c6de57fdc9a053de30a3b19d06a8f0c610","modified":1544667475391},{"_id":"themes/bmw/source/icon/demo_fontclass.html","hash":"9e7897f27086d6f7fe7bc91738306e96d3a2036a","modified":1544667475392},{"_id":"themes/bmw/source/css/prism.css","hash":"43e01a91ef2c8d6df3e147487495416e0aea4559","modified":1544667475391},{"_id":"themes/bmw/source/icon/iconfont.css","hash":"84cce1056019dde37356fa0da4edc80b4deaedb7","modified":1544667475392},{"_id":"themes/bmw/source/icon/iconfont.eot","hash":"adc3cc9072b4d2f3939fb2f177ddcf7bd4ab009a","modified":1544667475392},{"_id":"themes/bmw/source/icon/iconfont.js","hash":"c5e9d861865c112c1b9971e0409503ed95c815c0","modified":1544667475393},{"_id":"themes/bmw/source/icon/iconfont.svg","hash":"be82d0f1142bec616f9e612f0e09c8e12f2b270b","modified":1544667475393},{"_id":"themes/bmw/source/icon/iconfont.ttf","hash":"0a3b2a7882c61d6b4c85fe4e72f9f26948c6758d","modified":1544667475394},{"_id":"themes/bmw/source/js/util.js","hash":"996a1e786c8dd62bfbd303e4dc50288641872945","modified":1544667475397},{"_id":"themes/bmw/source/icon/iconfont.woff","hash":"6dd1f927e13de5db063a4898e563a70a14e13b80","modified":1544667475394},{"_id":"themes/bmw/source/scss/article.scss","hash":"442b2df5e113a3bdde90d9817c8ae6ac86ceb784","modified":1544667475399},{"_id":"themes/bmw/source/scss/animation.scss","hash":"93e5404428211df66b5d22c4f897967fa0292321","modified":1544667475398},{"_id":"themes/bmw/source/scss/base.scss","hash":"9a4c78459596363a6211e08e083b08573af63836","modified":1544667475399},{"_id":"themes/bmw/source/scss/vcomments.scss","hash":"f740855ccbc16815010960d79af98e2f9ac987c7","modified":1544667475404},{"_id":"themes/bmw/source/images/alihb.png","hash":"a46686ac74eeb9a86a043f4c24d5d15278d9c409","modified":1544669409116},{"_id":"themes/bmw/source/scss/mathjax.scss","hash":"cd203121393c8dd4465fe8e8f6bbf54e15827c5d","modified":1544667475402},{"_id":"themes/bmw/source/images/alipay.png","hash":"b84b7646fe28e49acb615854085b5e31f63158f5","modified":1544669391917},{"_id":"themes/bmw/source/images/favicon.ico","hash":"cc7c201861748e92f4809507096df74a40ef496a","modified":1544667475395},{"_id":"themes/bmw/source/images/godbmw.jpeg","hash":"8e5ad0c2e6f3527f9a6911b4a51972af59d97f83","modified":1544695673573},{"_id":"themes/bmw/source/images/hhongwen.jpg","hash":"3602c3f35bd36fa1aa0618e88d560a5dd5ff9f45","modified":1544696083985},{"_id":"themes/bmw/source/images/loveinliuy.png","hash":"5f88ab5c6e4309e76bf86a517a6ae2697db876a3","modified":1544697485438},{"_id":"themes/bmw/source/images/smile.png","hash":"437e7c49e786bbbe7d11ef9080a112f47ffd5023","modified":1544697305571},{"_id":"themes/bmw/source/images/touch-icon.png","hash":"df5a490c2e8d549ca767505fbe46eed3cbe3df43","modified":1544667475396},{"_id":"themes/bmw/source/images/wechat.png","hash":"f764487e6976aa2556655edf276decaa0f07bc87","modified":1544669576661},{"_id":"themes/bmw/source/stylus/highlight.styl","hash":"033d06cf21c9d363408357b4991ef02a4f4215ca","modified":1544667475405},{"_id":"themes/bmw/source/js/valine.min.js","hash":"81c1eb7f0d98caf37bd0511731c48140ea2ddccd","modified":1544667475398},{"_id":"themes/bmw/source/scss/layout/about.scss","hash":"e411c5515fea5f0575f578e8a2ddbcc460e8987e","modified":1544667475400},{"_id":"themes/bmw/source/scss/layout/category.scss","hash":"5218ac4cb2037cc8baed30241d2afbd3d6f335a0","modified":1544667475400},{"_id":"themes/bmw/source/scss/layout/friend.scss","hash":"9d11caa9d09e0a12d77409be0b99f1336999e1dd","modified":1544667475400},{"_id":"themes/bmw/source/scss/layout/home.scss","hash":"4a5c5bd396699b2b499c131e2229d034dfc9b738","modified":1545200548513},{"_id":"themes/bmw/source/scss/layout/index.scss","hash":"897bd1071ecab6a7516eb27f6bb3d14e43439a17","modified":1544667475401},{"_id":"themes/bmw/source/scss/layout/post.scss","hash":"73ccac900e43a5a1ef5a91123c0c91e01b29a762","modified":1544667475402},{"_id":"themes/bmw/source/scss/layout/tag.scss","hash":"a0aabd7b591b75195568aa60fdf1bf0e04db36be","modified":1544667475402},{"_id":"themes/bmw/source/scss/partial/footer.scss","hash":"b694612b68db7999f5013a7d4bca7285fbc73a13","modified":1544667475403},{"_id":"themes/bmw/source/scss/partial/navigation.scss","hash":"a9865aecc94cf8eeb0b2d1e47b8e6efa1136edf9","modified":1544667475403},{"_id":"themes/bmw/source/scss/partial/reward.scss","hash":"7d0b09ba7b6421b85cc75570c599776aa33e2bfb","modified":1544667475404},{"_id":"themes/bmw/source/scss/partial/timeline.scss","hash":"e59e1820dfbae80a178e41e0082c4a76d5930de0","modified":1544667475404},{"_id":"source/images/running.png","hash":"b610043eddb681023ccfa8be085986766ebd5b5b","modified":1545210073695},{"_id":"source/images/despair.png","hash":"7e1150d80b16004de5ec95c0695c13257be9182e","modified":1545208595802},{"_id":"source/images/happyness.png","hash":"a7ad82c3e3e9c6af8a796cb993cf4cba6e5c8eb3","modified":1545200846581},{"_id":"source/_posts/Shell脚本备份Mongodb数据库.md","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1545810363215},{"_id":"source/_drafts/Git使用一-Git安装.md","hash":"333cc152e053734ddbc1d69790fd2ef92914e56b","modified":1545794525214},{"_id":"themes/bmw/source/images/blank.gif","hash":"d5fceb6532643d0d84ffe09c40c481ecdf59e15a","modified":1545794525216},{"_id":"themes/bmw/source/images/loading.gif","hash":"2d98f498a619d0b3d663b8b76948ddb81b7c9950","modified":1545794525216},{"_id":"themes/bmw/source/js/echo.js","hash":"eeacac99647e83646e90bebc6719ad15ae4e0d24","modified":1545794525217}],"Category":[{"name":"Version Control","_id":"cjpwe2pk60004toqu22ypxi3v"},{"name":"Linux","_id":"cjpwe2pkf000gtoqu23j1gd6b"},{"name":"博客","_id":"cjpwe2pkm000xtoqunrjwkx66"},{"name":"Java","_id":"cjpwe2pkn0012toquzjvoq3zy"},{"name":"随笔","_id":"cjpwe2pkn0016toqu3eqh4my4"},{"name":"电影","_id":"cjpwe2pko001atoquvwyqxnqm"},{"name":"DB","_id":"cjpxqsszi00008oquv4f6jyp1"},{"name":"Git","_id":"cjq4m5d900001osqu2d59gt00"},{"name":"MongoDB","_id":"cjq4vmxv70004osqutztn8cqb"},{"name":"Python","_id":"cjq4vnn0u000aosquittkp6yj"}],"Data":[],"Page":[{"title":"about","date":"2018-12-13T02:59:24.000Z","type":"about","categories":null,"tags":null,"_content":"\n> **“吾生也有涯，而知也无涯。”**\n\n2018年12月12日搭建此博客，博客采用用[Hexo](https://hexo.io/zh-cn/) + [Netlify](https://www.netlify.com/) 搭建，具体搭建可查看我的[Hexo+GitHub+Netlify搭建属于自己的博客网站](/20181216/build-own-blog/)，页面模板引用[hexo-theme-bmw](https://godbmw.com/passages/2018-11-15-theme-bmw-docs-zh/)主题，在此感谢[GODBMW](https://godbmw.com/)博主。\n\n[“每一个技术的学习，都是从模仿开始。”](https://www.loveinliuy.com/) 出自朋友的博客网站，也希望在此能结识更多的朋友。\n\n## 基本信息\n\nHi, everyone！我是hhongwen，混迹于二线城市，目前从事于一家创业公司的程序猿。\n15年毕业到18年5月份从事Java技术栈相关工作，之后现在主要Nodejs、Python等技术栈。\n\n写博客注要是考虑一些问题：我是谁？我从哪里来？我要到哪里去？我想还是需要将生活和学习的点滴记录下来，无论是踩过的还是坑爬过的山，记录的过程中都是对过往进行总结和思考，也是对自己的成长的总结。\n\n## 博客规划\n\n>明日复明日，明日何其多。 \n我生待明日，万事成蹉跎。\n\n以此来告诫自己不要让身体跟不上大脑，想到之后就去付出行动做出来，这也是此博客的由来。之前一直犹犹豫豫，想了也做了但总半途而弃没有结果，所以对目前博客有一个长远规划也是想从新认识一下自己能做哪些事情。\n\n- 对自己的审视和总结，毕竟这才是自己可以拿得出的东西。\n- 希望有朋友能关注自己的博客，并且获得想要的内容。\n- 坚持每周写一篇博客，无论技术或者生活，在这里总结自我。\n- 可能存在的一些收入，也是期望要达到的目标。\n\n\n## 本站信息\n本站采用用[Hexo](https://hexo.io/zh-cn/) + [Netlify](https://www.netlify.com/) 搭建，代码托管于[GitHub](https://github.com/HongwenHan/blog)，页面模板引用[hexo-theme-bmw](https://godbmw.com/passages/2018-11-15-theme-bmw-docs-zh/)主题，在此感谢[GODBMW](https://godbmw.com/)博主。\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2018-12-13 10:59:24\ntype: \"about\"\ncategories:\ntags:\n---\n\n> **“吾生也有涯，而知也无涯。”**\n\n2018年12月12日搭建此博客，博客采用用[Hexo](https://hexo.io/zh-cn/) + [Netlify](https://www.netlify.com/) 搭建，具体搭建可查看我的[Hexo+GitHub+Netlify搭建属于自己的博客网站](/20181216/build-own-blog/)，页面模板引用[hexo-theme-bmw](https://godbmw.com/passages/2018-11-15-theme-bmw-docs-zh/)主题，在此感谢[GODBMW](https://godbmw.com/)博主。\n\n[“每一个技术的学习，都是从模仿开始。”](https://www.loveinliuy.com/) 出自朋友的博客网站，也希望在此能结识更多的朋友。\n\n## 基本信息\n\nHi, everyone！我是hhongwen，混迹于二线城市，目前从事于一家创业公司的程序猿。\n15年毕业到18年5月份从事Java技术栈相关工作，之后现在主要Nodejs、Python等技术栈。\n\n写博客注要是考虑一些问题：我是谁？我从哪里来？我要到哪里去？我想还是需要将生活和学习的点滴记录下来，无论是踩过的还是坑爬过的山，记录的过程中都是对过往进行总结和思考，也是对自己的成长的总结。\n\n## 博客规划\n\n>明日复明日，明日何其多。 \n我生待明日，万事成蹉跎。\n\n以此来告诫自己不要让身体跟不上大脑，想到之后就去付出行动做出来，这也是此博客的由来。之前一直犹犹豫豫，想了也做了但总半途而弃没有结果，所以对目前博客有一个长远规划也是想从新认识一下自己能做哪些事情。\n\n- 对自己的审视和总结，毕竟这才是自己可以拿得出的东西。\n- 希望有朋友能关注自己的博客，并且获得想要的内容。\n- 坚持每周写一篇博客，无论技术或者生活，在这里总结自我。\n- 可能存在的一些收入，也是期望要达到的目标。\n\n\n## 本站信息\n本站采用用[Hexo](https://hexo.io/zh-cn/) + [Netlify](https://www.netlify.com/) 搭建，代码托管于[GitHub](https://github.com/HongwenHan/blog)，页面模板引用[hexo-theme-bmw](https://godbmw.com/passages/2018-11-15-theme-bmw-docs-zh/)主题，在此感谢[GODBMW](https://godbmw.com/)博主。\n","updated":"2018-12-17T02:54:29.378Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjpwe2pk40001toqude17d7np","content":"<blockquote>\n<p><strong>“吾生也有涯，而知也无涯。”</strong></p>\n</blockquote>\n<p>2018年12月12日搭建此博客，博客采用用<a href=\"https://hexo.io/zh-cn/\" target=\"_blank\" rel=\"noopener\">Hexo</a> + <a href=\"https://www.netlify.com/\" target=\"_blank\" rel=\"noopener\">Netlify</a> 搭建，具体搭建可查看我的<a href=\"/20181216/build-own-blog/\">Hexo+GitHub+Netlify搭建属于自己的博客网站</a>，页面模板引用<a href=\"https://godbmw.com/passages/2018-11-15-theme-bmw-docs-zh/\" target=\"_blank\" rel=\"noopener\">hexo-theme-bmw</a>主题，在此感谢<a href=\"https://godbmw.com/\" target=\"_blank\" rel=\"noopener\">GODBMW</a>博主。</p>\n<p><a href=\"https://www.loveinliuy.com/\" target=\"_blank\" rel=\"noopener\">“每一个技术的学习，都是从模仿开始。”</a> 出自朋友的博客网站，也希望在此能结识更多的朋友。</p>\n<h2 id=\"基本信息\"><a href=\"#基本信息\" class=\"headerlink\" title=\"基本信息\"></a>基本信息</h2><p>Hi, everyone！我是hhongwen，混迹于二线城市，目前从事于一家创业公司的程序猿。<br>15年毕业到18年5月份从事Java技术栈相关工作，之后现在主要Nodejs、Python等技术栈。</p>\n<p>写博客注要是考虑一些问题：我是谁？我从哪里来？我要到哪里去？我想还是需要将生活和学习的点滴记录下来，无论是踩过的还是坑爬过的山，记录的过程中都是对过往进行总结和思考，也是对自己的成长的总结。</p>\n<h2 id=\"博客规划\"><a href=\"#博客规划\" class=\"headerlink\" title=\"博客规划\"></a>博客规划</h2><blockquote>\n<p>明日复明日，明日何其多。<br>我生待明日，万事成蹉跎。</p>\n</blockquote>\n<p>以此来告诫自己不要让身体跟不上大脑，想到之后就去付出行动做出来，这也是此博客的由来。之前一直犹犹豫豫，想了也做了但总半途而弃没有结果，所以对目前博客有一个长远规划也是想从新认识一下自己能做哪些事情。</p>\n<ul>\n<li>对自己的审视和总结，毕竟这才是自己可以拿得出的东西。</li>\n<li>希望有朋友能关注自己的博客，并且获得想要的内容。</li>\n<li>坚持每周写一篇博客，无论技术或者生活，在这里总结自我。</li>\n<li>可能存在的一些收入，也是期望要达到的目标。</li>\n</ul>\n<h2 id=\"本站信息\"><a href=\"#本站信息\" class=\"headerlink\" title=\"本站信息\"></a>本站信息</h2><p>本站采用用<a href=\"https://hexo.io/zh-cn/\" target=\"_blank\" rel=\"noopener\">Hexo</a> + <a href=\"https://www.netlify.com/\" target=\"_blank\" rel=\"noopener\">Netlify</a> 搭建，代码托管于<a href=\"https://github.com/HongwenHan/blog\" target=\"_blank\" rel=\"noopener\">GitHub</a>，页面模板引用<a href=\"https://godbmw.com/passages/2018-11-15-theme-bmw-docs-zh/\" target=\"_blank\" rel=\"noopener\">hexo-theme-bmw</a>主题，在此感谢<a href=\"https://godbmw.com/\" target=\"_blank\" rel=\"noopener\">GODBMW</a>博主。</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p><strong>“吾生也有涯，而知也无涯。”</strong></p>\n</blockquote>\n<p>2018年12月12日搭建此博客，博客采用用<a href=\"https://hexo.io/zh-cn/\" target=\"_blank\" rel=\"noopener\">Hexo</a> + <a href=\"https://www.netlify.com/\" target=\"_blank\" rel=\"noopener\">Netlify</a> 搭建，具体搭建可查看我的<a href=\"/20181216/build-own-blog/\">Hexo+GitHub+Netlify搭建属于自己的博客网站</a>，页面模板引用<a href=\"https://godbmw.com/passages/2018-11-15-theme-bmw-docs-zh/\" target=\"_blank\" rel=\"noopener\">hexo-theme-bmw</a>主题，在此感谢<a href=\"https://godbmw.com/\" target=\"_blank\" rel=\"noopener\">GODBMW</a>博主。</p>\n<p><a href=\"https://www.loveinliuy.com/\" target=\"_blank\" rel=\"noopener\">“每一个技术的学习，都是从模仿开始。”</a> 出自朋友的博客网站，也希望在此能结识更多的朋友。</p>\n<h2 id=\"基本信息\"><a href=\"#基本信息\" class=\"headerlink\" title=\"基本信息\"></a>基本信息</h2><p>Hi, everyone！我是hhongwen，混迹于二线城市，目前从事于一家创业公司的程序猿。<br>15年毕业到18年5月份从事Java技术栈相关工作，之后现在主要Nodejs、Python等技术栈。</p>\n<p>写博客注要是考虑一些问题：我是谁？我从哪里来？我要到哪里去？我想还是需要将生活和学习的点滴记录下来，无论是踩过的还是坑爬过的山，记录的过程中都是对过往进行总结和思考，也是对自己的成长的总结。</p>\n<h2 id=\"博客规划\"><a href=\"#博客规划\" class=\"headerlink\" title=\"博客规划\"></a>博客规划</h2><blockquote>\n<p>明日复明日，明日何其多。<br>我生待明日，万事成蹉跎。</p>\n</blockquote>\n<p>以此来告诫自己不要让身体跟不上大脑，想到之后就去付出行动做出来，这也是此博客的由来。之前一直犹犹豫豫，想了也做了但总半途而弃没有结果，所以对目前博客有一个长远规划也是想从新认识一下自己能做哪些事情。</p>\n<ul>\n<li>对自己的审视和总结，毕竟这才是自己可以拿得出的东西。</li>\n<li>希望有朋友能关注自己的博客，并且获得想要的内容。</li>\n<li>坚持每周写一篇博客，无论技术或者生活，在这里总结自我。</li>\n<li>可能存在的一些收入，也是期望要达到的目标。</li>\n</ul>\n<h2 id=\"本站信息\"><a href=\"#本站信息\" class=\"headerlink\" title=\"本站信息\"></a>本站信息</h2><p>本站采用用<a href=\"https://hexo.io/zh-cn/\" target=\"_blank\" rel=\"noopener\">Hexo</a> + <a href=\"https://www.netlify.com/\" target=\"_blank\" rel=\"noopener\">Netlify</a> 搭建，代码托管于<a href=\"https://github.com/HongwenHan/blog\" target=\"_blank\" rel=\"noopener\">GitHub</a>，页面模板引用<a href=\"https://godbmw.com/passages/2018-11-15-theme-bmw-docs-zh/\" target=\"_blank\" rel=\"noopener\">hexo-theme-bmw</a>主题，在此感谢<a href=\"https://godbmw.com/\" target=\"_blank\" rel=\"noopener\">GODBMW</a>博主。</p>\n"},{"title":"categories","date":"2018-12-13T02:58:51.000Z","type":"categories","categories":null,"tags":null,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2018-12-13 10:58:51\ntype: \"categories\"\ncategories:\ntags:\n---\n","updated":"2018-12-13T03:00:49.321Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjpwe2pk60003toqu2fmwd6cv","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"friends","date":"2018-12-13T02:59:38.000Z","type":"friends","categories":null,"tags":null,"_content":"","source":"friends/index.md","raw":"---\ntitle: friends\ndate: 2018-12-13 10:59:38\ntype: \"friends\"\ncategories: \ntags:\n---\n","updated":"2018-12-13T10:32:35.065Z","path":"friends/index.html","comments":1,"layout":"page","_id":"cjpwe2pk80007toqu2ihveepx","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2018-12-13T02:55:49.000Z","type":"tags","categories":null,"tags":null,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2018-12-13 10:55:49\ntype: \"tags\"\ncategories:\ntags: \n---\n","updated":"2018-12-13T02:58:21.454Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjpwe2pka0009toqus5qptfsd","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Git使用小结（一）","url":"git-summary-of-usage","date":"2018-12-20T04:00:00.000Z","_content":"\n> Git是一个免费的开源 分布式版本控制系统，旨在快速，高效地处理从小型到大型项目的所有事务。Git 易于学习， 占地面积小，具有闪电般快速的性能。它超越了Subversion，CVS，Perforce和ClearCase等SCM工具，具有廉价本地分支，便捷的临时区域和 多个工作流程等功能。\n\n<!--more-->\n\n> Git是一个免费的开源 分布式版本控制系统，旨在快速，高效地处理从小型到大型项目的所有事务。Git 易于学习， 占地面积小，具有闪电般快速的性能。它超越了Subversion，CVS，Perforce和ClearCase等SCM工具，具有廉价本地分支，便捷的临时区域和 多个工作流程等功能。\n\n由于公司项目从SVN切换到Git，所以有必要了解和学习一下Git基础命令介绍和使用场景，所以一切都从实用出发。\n\n这里默认大家都安装了Git，如果没有安装点击这里查看[Git](https://git-scm.com/)，安装请参考[Git安装](https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137396287703354d8c6c01c904c7d9ff056ae23da865a000)\n","source":"_drafts/Git使用小结（一）.md","raw":"---\ntitle: Git使用小结（一）\nurl: git-summary-of-usage\ndate: 2018-12-20 12:00:00\ntags: Git\ncategories: Version Control\n---\n\n> Git是一个免费的开源 分布式版本控制系统，旨在快速，高效地处理从小型到大型项目的所有事务。Git 易于学习， 占地面积小，具有闪电般快速的性能。它超越了Subversion，CVS，Perforce和ClearCase等SCM工具，具有廉价本地分支，便捷的临时区域和 多个工作流程等功能。\n\n<!--more-->\n\n> Git是一个免费的开源 分布式版本控制系统，旨在快速，高效地处理从小型到大型项目的所有事务。Git 易于学习， 占地面积小，具有闪电般快速的性能。它超越了Subversion，CVS，Perforce和ClearCase等SCM工具，具有廉价本地分支，便捷的临时区域和 多个工作流程等功能。\n\n由于公司项目从SVN切换到Git，所以有必要了解和学习一下Git基础命令介绍和使用场景，所以一切都从实用出发。\n\n这里默认大家都安装了Git，如果没有安装点击这里查看[Git](https://git-scm.com/)，安装请参考[Git安装](https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137396287703354d8c6c01c904c7d9ff056ae23da865a000)\n","slug":"Git使用小结（一）","published":0,"updated":"2018-12-20T09:05:20.563Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjpwe2pk10000toquj3iey113","content":"<blockquote>\n<p>Git是一个免费的开源 分布式版本控制系统，旨在快速，高效地处理从小型到大型项目的所有事务。Git 易于学习， 占地面积小，具有闪电般快速的性能。它超越了Subversion，CVS，Perforce和ClearCase等SCM工具，具有廉价本地分支，便捷的临时区域和 多个工作流程等功能。</p>\n</blockquote>\n<a id=\"more\"></a>\n<blockquote>\n<p>Git是一个免费的开源 分布式版本控制系统，旨在快速，高效地处理从小型到大型项目的所有事务。Git 易于学习， 占地面积小，具有闪电般快速的性能。它超越了Subversion，CVS，Perforce和ClearCase等SCM工具，具有廉价本地分支，便捷的临时区域和 多个工作流程等功能。</p>\n</blockquote>\n<p>由于公司项目从SVN切换到Git，所以有必要了解和学习一下Git基础命令介绍和使用场景，所以一切都从实用出发。</p>\n<p>这里默认大家都安装了Git，如果没有安装点击这里查看<a href=\"https://git-scm.com/\" target=\"_blank\" rel=\"noopener\">Git</a>，安装请参考<a href=\"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137396287703354d8c6c01c904c7d9ff056ae23da865a000\" target=\"_blank\" rel=\"noopener\">Git安装</a></p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>Git是一个免费的开源 分布式版本控制系统，旨在快速，高效地处理从小型到大型项目的所有事务。Git 易于学习， 占地面积小，具有闪电般快速的性能。它超越了Subversion，CVS，Perforce和ClearCase等SCM工具，具有廉价本地分支，便捷的临时区域和 多个工作流程等功能。</p>\n</blockquote>","more":"<blockquote>\n<p>Git是一个免费的开源 分布式版本控制系统，旨在快速，高效地处理从小型到大型项目的所有事务。Git 易于学习， 占地面积小，具有闪电般快速的性能。它超越了Subversion，CVS，Perforce和ClearCase等SCM工具，具有廉价本地分支，便捷的临时区域和 多个工作流程等功能。</p>\n</blockquote>\n<p>由于公司项目从SVN切换到Git，所以有必要了解和学习一下Git基础命令介绍和使用场景，所以一切都从实用出发。</p>\n<p>这里默认大家都安装了Git，如果没有安装点击这里查看<a href=\"https://git-scm.com/\" target=\"_blank\" rel=\"noopener\">Git</a>，安装请参考<a href=\"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137396287703354d8c6c01c904c7d9ff056ae23da865a000\" target=\"_blank\" rel=\"noopener\">Git安装</a></p>"},{"title":"Neo4j使用小结（一）","url":"Neo4j-summary-of-usage","date":"2018-12-20T09:00:00.000Z","_content":"\n## CREATE命令\n\n1. CREATE命令语法：\n\n``` sql\nCREATE (\n   <node-name>:<label-name>\n   {\n      <Property1-name>:<Property1-Value>\n      ........\n      <Propertyn-name>:<Propertyn-Value>\n   }\n)\n```\n\n2. 语法说明：\n\n|语法元素|描述|\n|----|----|\n|`<node-name>`|它是我们将要创建的节点名称。|\n|`<label-name>`|它是一个节点标签名称|\n|`<Property1-name>...<Propertyn-name>`|属性是键值对。 定义将分配给创建节点的属性的名称|\n|`<Property1-value>...<Propertyn-value>`|属性是键值对。 定义将分配给创建节点的属性的值|\n\n**个人理解：** 要创建一个`<label-name>`的对象名称是`<node-name>`，对象的属性有`<Property1-name>:<Property1-Value>`……`<Propertyn-name>:<Propertyn-Value>`等。\n\n3. 实例：\n\n``` sql\nCREATE (hhongwen: Person {name: 'Han Hongwen', born:1992})\n```\n\n## MATCH + RETURN命令\n\n> `MATCH`命令不能单独使用，需要与`RETURN`命令结合使用返回结果，或者与更新`SET`命令+`RETURN`命令一起使用。\n单独使用会报错：`Neo.ClientError.Statement.SyntaxError: Query cannot conclude with MATCH (must be RETURN or an update clause)……`\n\n1. MATCH命令语法：\n\n``` sql\nMATCH (tom {name: \"Tom Hanks\"}) RETURN tom\n/*相当于SQL：*/\nselect * from <table> where name = 'Tom Hanks'\n\nMATCH (per:Person) RETURN per.name, per.born\n/*相当于SQL：*/\nselect per.name, per.born from Person per\n\nMATCH (nineties:Movie) WHERE nineties.released >= 1990 AND nineties.released < 2000 RETURN nineties.title\n/*相当于SQL：*/\nselect nineties.title from Movie nineties where nineties.released >= 1990 AND nineties.released < 2000\n```\n","source":"_drafts/Neo4j使用小结（一）.md","raw":"---\ntitle: Neo4j使用小结（一）\nurl: Neo4j-summary-of-usage\ndate: 2018-12-20 17:00:00\ntags: Neo4j\ncategories: DB\n---\n\n## CREATE命令\n\n1. CREATE命令语法：\n\n``` sql\nCREATE (\n   <node-name>:<label-name>\n   {\n      <Property1-name>:<Property1-Value>\n      ........\n      <Propertyn-name>:<Propertyn-Value>\n   }\n)\n```\n\n2. 语法说明：\n\n|语法元素|描述|\n|----|----|\n|`<node-name>`|它是我们将要创建的节点名称。|\n|`<label-name>`|它是一个节点标签名称|\n|`<Property1-name>...<Propertyn-name>`|属性是键值对。 定义将分配给创建节点的属性的名称|\n|`<Property1-value>...<Propertyn-value>`|属性是键值对。 定义将分配给创建节点的属性的值|\n\n**个人理解：** 要创建一个`<label-name>`的对象名称是`<node-name>`，对象的属性有`<Property1-name>:<Property1-Value>`……`<Propertyn-name>:<Propertyn-Value>`等。\n\n3. 实例：\n\n``` sql\nCREATE (hhongwen: Person {name: 'Han Hongwen', born:1992})\n```\n\n## MATCH + RETURN命令\n\n> `MATCH`命令不能单独使用，需要与`RETURN`命令结合使用返回结果，或者与更新`SET`命令+`RETURN`命令一起使用。\n单独使用会报错：`Neo.ClientError.Statement.SyntaxError: Query cannot conclude with MATCH (must be RETURN or an update clause)……`\n\n1. MATCH命令语法：\n\n``` sql\nMATCH (tom {name: \"Tom Hanks\"}) RETURN tom\n/*相当于SQL：*/\nselect * from <table> where name = 'Tom Hanks'\n\nMATCH (per:Person) RETURN per.name, per.born\n/*相当于SQL：*/\nselect per.name, per.born from Person per\n\nMATCH (nineties:Movie) WHERE nineties.released >= 1990 AND nineties.released < 2000 RETURN nineties.title\n/*相当于SQL：*/\nselect nineties.title from Movie nineties where nineties.released >= 1990 AND nineties.released < 2000\n```\n","slug":"Neo4j使用小结（一）","published":0,"updated":"2018-12-21T03:50:38.356Z","_id":"cjpwe2pk40002toqu779wgp69","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"CREATE命令\"><a href=\"#CREATE命令\" class=\"headerlink\" title=\"CREATE命令\"></a>CREATE命令</h2><ol>\n<li>CREATE命令语法：</li>\n</ol>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> (</span><br><span class=\"line\">   &lt;node-<span class=\"keyword\">name</span>&gt;:&lt;label-<span class=\"keyword\">name</span>&gt;</span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">      &lt;Property1-<span class=\"keyword\">name</span>&gt;:&lt;Property1-<span class=\"keyword\">Value</span>&gt;</span><br><span class=\"line\">      ........</span><br><span class=\"line\">      &lt;Propertyn-<span class=\"keyword\">name</span>&gt;:&lt;Propertyn-<span class=\"keyword\">Value</span>&gt;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>语法说明：</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>语法元素</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>&lt;node-name&gt;</code></td>\n<td>它是我们将要创建的节点名称。</td>\n</tr>\n<tr>\n<td><code>&lt;label-name&gt;</code></td>\n<td>它是一个节点标签名称</td>\n</tr>\n<tr>\n<td><code>&lt;Property1-name&gt;...&lt;Propertyn-name&gt;</code></td>\n<td>属性是键值对。 定义将分配给创建节点的属性的名称</td>\n</tr>\n<tr>\n<td><code>&lt;Property1-value&gt;...&lt;Propertyn-value&gt;</code></td>\n<td>属性是键值对。 定义将分配给创建节点的属性的值</td>\n</tr>\n</tbody>\n</table>\n<p><strong>个人理解：</strong> 要创建一个<code>&lt;label-name&gt;</code>的对象名称是<code>&lt;node-name&gt;</code>，对象的属性有<code>&lt;Property1-name&gt;:&lt;Property1-Value&gt;</code>……<code>&lt;Propertyn-name&gt;:&lt;Propertyn-Value&gt;</code>等。</p>\n<ol start=\"3\">\n<li>实例：</li>\n</ol>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> (hhongwen: Person &#123;<span class=\"keyword\">name</span>: <span class=\"string\">'Han Hongwen'</span>, born:<span class=\"number\">1992</span>&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"MATCH-RETURN命令\"><a href=\"#MATCH-RETURN命令\" class=\"headerlink\" title=\"MATCH + RETURN命令\"></a>MATCH + RETURN命令</h2><blockquote>\n<p><code>MATCH</code>命令不能单独使用，需要与<code>RETURN</code>命令结合使用返回结果，或者与更新<code>SET</code>命令+<code>RETURN</code>命令一起使用。<br>单独使用会报错：<code>Neo.ClientError.Statement.SyntaxError: Query cannot conclude with MATCH (must be RETURN or an update clause)……</code></p>\n</blockquote>\n<ol>\n<li>MATCH命令语法：</li>\n</ol>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MATCH (tom &#123;name: \"Tom Hanks\"&#125;) RETURN tom</span><br><span class=\"line\"><span class=\"comment\">/*相当于SQL：*/</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> &lt;<span class=\"keyword\">table</span>&gt; <span class=\"keyword\">where</span> <span class=\"keyword\">name</span> = <span class=\"string\">'Tom Hanks'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">MATCH</span> (per:Person) <span class=\"keyword\">RETURN</span> per.name, per.born</span><br><span class=\"line\"><span class=\"comment\">/*相当于SQL：*/</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> per.name, per.born <span class=\"keyword\">from</span> Person per</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">MATCH</span> (nineties:Movie) <span class=\"keyword\">WHERE</span> nineties.released &gt;= <span class=\"number\">1990</span> <span class=\"keyword\">AND</span> nineties.released &lt; <span class=\"number\">2000</span> <span class=\"keyword\">RETURN</span> nineties.title</span><br><span class=\"line\"><span class=\"comment\">/*相当于SQL：*/</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> nineties.title <span class=\"keyword\">from</span> Movie nineties <span class=\"keyword\">where</span> nineties.released &gt;= <span class=\"number\">1990</span> <span class=\"keyword\">AND</span> nineties.released &lt; <span class=\"number\">2000</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"CREATE命令\"><a href=\"#CREATE命令\" class=\"headerlink\" title=\"CREATE命令\"></a>CREATE命令</h2><ol>\n<li>CREATE命令语法：</li>\n</ol>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> (</span><br><span class=\"line\">   &lt;node-<span class=\"keyword\">name</span>&gt;:&lt;label-<span class=\"keyword\">name</span>&gt;</span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">      &lt;Property1-<span class=\"keyword\">name</span>&gt;:&lt;Property1-<span class=\"keyword\">Value</span>&gt;</span><br><span class=\"line\">      ........</span><br><span class=\"line\">      &lt;Propertyn-<span class=\"keyword\">name</span>&gt;:&lt;Propertyn-<span class=\"keyword\">Value</span>&gt;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>语法说明：</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>语法元素</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>&lt;node-name&gt;</code></td>\n<td>它是我们将要创建的节点名称。</td>\n</tr>\n<tr>\n<td><code>&lt;label-name&gt;</code></td>\n<td>它是一个节点标签名称</td>\n</tr>\n<tr>\n<td><code>&lt;Property1-name&gt;...&lt;Propertyn-name&gt;</code></td>\n<td>属性是键值对。 定义将分配给创建节点的属性的名称</td>\n</tr>\n<tr>\n<td><code>&lt;Property1-value&gt;...&lt;Propertyn-value&gt;</code></td>\n<td>属性是键值对。 定义将分配给创建节点的属性的值</td>\n</tr>\n</tbody>\n</table>\n<p><strong>个人理解：</strong> 要创建一个<code>&lt;label-name&gt;</code>的对象名称是<code>&lt;node-name&gt;</code>，对象的属性有<code>&lt;Property1-name&gt;:&lt;Property1-Value&gt;</code>……<code>&lt;Propertyn-name&gt;:&lt;Propertyn-Value&gt;</code>等。</p>\n<ol start=\"3\">\n<li>实例：</li>\n</ol>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> (hhongwen: Person &#123;<span class=\"keyword\">name</span>: <span class=\"string\">'Han Hongwen'</span>, born:<span class=\"number\">1992</span>&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"MATCH-RETURN命令\"><a href=\"#MATCH-RETURN命令\" class=\"headerlink\" title=\"MATCH + RETURN命令\"></a>MATCH + RETURN命令</h2><blockquote>\n<p><code>MATCH</code>命令不能单独使用，需要与<code>RETURN</code>命令结合使用返回结果，或者与更新<code>SET</code>命令+<code>RETURN</code>命令一起使用。<br>单独使用会报错：<code>Neo.ClientError.Statement.SyntaxError: Query cannot conclude with MATCH (must be RETURN or an update clause)……</code></p>\n</blockquote>\n<ol>\n<li>MATCH命令语法：</li>\n</ol>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MATCH (tom &#123;name: \"Tom Hanks\"&#125;) RETURN tom</span><br><span class=\"line\"><span class=\"comment\">/*相当于SQL：*/</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> &lt;<span class=\"keyword\">table</span>&gt; <span class=\"keyword\">where</span> <span class=\"keyword\">name</span> = <span class=\"string\">'Tom Hanks'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">MATCH</span> (per:Person) <span class=\"keyword\">RETURN</span> per.name, per.born</span><br><span class=\"line\"><span class=\"comment\">/*相当于SQL：*/</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> per.name, per.born <span class=\"keyword\">from</span> Person per</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">MATCH</span> (nineties:Movie) <span class=\"keyword\">WHERE</span> nineties.released &gt;= <span class=\"number\">1990</span> <span class=\"keyword\">AND</span> nineties.released &lt; <span class=\"number\">2000</span> <span class=\"keyword\">RETURN</span> nineties.title</span><br><span class=\"line\"><span class=\"comment\">/*相当于SQL：*/</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> nineties.title <span class=\"keyword\">from</span> Movie nineties <span class=\"keyword\">where</span> nineties.released &gt;= <span class=\"number\">1990</span> <span class=\"keyword\">AND</span> nineties.released &lt; <span class=\"number\">2000</span></span><br></pre></td></tr></table></figure>\n"},{"title":"Centos7安装MongoDB4.0","url":"centos7-install-mongodb4","date":"2018-12-13T14:33:19.000Z","_content":"\n由于项目需要使用MongoDB，所以记录一下在Centos7下安装MongoDB的方法。\nMongoDB 是一个基于分布式文件存储的数据库。由 C++ 语言编写。旨在为 WEB 应用提供可扩展的高性能数据存储解决方案。\nMongoDB 是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。\n\n<!--more-->\n\n由于项目需要使用MongoDB，所以记录一下在Centos7下安装MongoDB的方法。\nMongoDB 是一个基于分布式文件存储的数据库。由 C++ 语言编写。旨在为 WEB 应用提供可扩展的高性能数据存储解决方案。\nMongoDB 是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。\n\n## 安装包下载\n\n> [MongoDB点击跳转下载地址](https://www.mongodb.com/download-center#community)，打开地址后选择Community Server,然后选择Linux下载对应的版本安装包即可，但是下拉列表中有很多Linux安装包，Centos选择带RHEL的安装包，这里选**择RHEl 7 Linux 64-bit x64**版本的安装包即可，下载后上传到对应Linux服务器。\n\n## MongoDB安装\n\n> 在安装时均使用root用户，如果非root用户则在命令前加sudo命令，用来以root身份运行\n\n``` bash\n# 1.在usr/local/下创建mongodb文件夹\ncd /usr/local/\nmkdir mongodb\n\n# 2.解压文件\ntar -xzvf mongodb-linux-x86_64-rhel70-4.0.1.tgz\n\n# 3.将解压后的文件下所有内容移动到mongodb文件夹下\n# 注意这里不是将mongodb-linux-x86_64-rhel70-4.0.1文件夹移动到创建好的mongodb下，而是文件下的内容\nmv mongodb-linux-x86_64-rhel70-4.0.1/*  /usr/local/mongodb/\n\n# 4.添加mongodb的环境变量\nvi /etc/profile\n\n# 5.在文件末尾插入如下内容\nexport MONGODB_HOME=/usr/local/mongodb  \nexport PATH=$PATH:$MONGODB_HOME/bin\n\n# 6.修改保存后要重启系统配置，执行命令如下\nsource /etc/profile\n```\n\n> 经过上述步骤，基本的配置已经完成了，接下来创建mongodb数据文件和日志文件的存放位置，并且对启动项进行配置，启动项配置其中包含数据库文件路径和日志文件路径，填写上述将要创建的文件夹或文件路径。具体步骤如下：\n\n``` bash\n# 1.创建数据库文件存放路径\ncd /usr/local/mongodb\nmkdir -p data/db\nchmod -r 777 data/db\n\n# 2.创建日志文件\ncd /usr/local/mongodb\nmkdir logs\ncd logs\ntouch mongodb.log\n\n# 3.创建启动文件\ncd /usr/local/mongodb/bin\ntouch mongodb.conf\n\n# 4.编辑启动文件\nvi mongodb.conf\n\n# 5.在文件中插入如下内容\ndbpath=/usr/local/mongodb/data/db  #数据文件存放目录\nlogpath=/usr/local/mongodb/logs/mongodb.log #日志存放目录\nport=27017 #端口\nfork=true #以守护程序的方式启用，即在后台运行\nlogappend=true\nmaxConns=5000\nstorageEngine = mmapv1\n\n```\n\n## 启动数据库\n\n> 经过配置后即可启动数据库了，启动数据库文件在bin目录下执行下术命令\n\n``` bash\n# 切换到bin目录下\ncd /usr/local/mongodb/bin\n\n# 启动数据库\n./mongod --config mongodb.conf\n\n# 访问数据库\n./mongo\n\n```\n\n## 补充\n\n在Ubuntu上安装的时候遇到了一些问题，做如下补充：\n\n1. 之前启动数据库写错了，由`./mongod  mongodb.conf`修改为`./mongod --config mongodb.conf`。\n\n2. ~~~`mongodb.conf`配置文件注释掉`fork`参数，后期解决后再做补充。~~~ 暂时看应该是注释问题，删除配置文件的注释和空格后即可，还是有点蒙蔽。\n\n## 小结\n\n> 安装mongodb和配置是很简单的，过程还是比较顺利。大家一起学习！","source":"_posts/Centos7安装MongoDB4-0.md","raw":"---\ntitle: Centos7安装MongoDB4.0\nurl: centos7-install-mongodb4\ndate: 2018-12-13 22:33:19\ntags: MongoDB, Linux\ncategories: MongoDB\n---\n\n由于项目需要使用MongoDB，所以记录一下在Centos7下安装MongoDB的方法。\nMongoDB 是一个基于分布式文件存储的数据库。由 C++ 语言编写。旨在为 WEB 应用提供可扩展的高性能数据存储解决方案。\nMongoDB 是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。\n\n<!--more-->\n\n由于项目需要使用MongoDB，所以记录一下在Centos7下安装MongoDB的方法。\nMongoDB 是一个基于分布式文件存储的数据库。由 C++ 语言编写。旨在为 WEB 应用提供可扩展的高性能数据存储解决方案。\nMongoDB 是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。\n\n## 安装包下载\n\n> [MongoDB点击跳转下载地址](https://www.mongodb.com/download-center#community)，打开地址后选择Community Server,然后选择Linux下载对应的版本安装包即可，但是下拉列表中有很多Linux安装包，Centos选择带RHEL的安装包，这里选**择RHEl 7 Linux 64-bit x64**版本的安装包即可，下载后上传到对应Linux服务器。\n\n## MongoDB安装\n\n> 在安装时均使用root用户，如果非root用户则在命令前加sudo命令，用来以root身份运行\n\n``` bash\n# 1.在usr/local/下创建mongodb文件夹\ncd /usr/local/\nmkdir mongodb\n\n# 2.解压文件\ntar -xzvf mongodb-linux-x86_64-rhel70-4.0.1.tgz\n\n# 3.将解压后的文件下所有内容移动到mongodb文件夹下\n# 注意这里不是将mongodb-linux-x86_64-rhel70-4.0.1文件夹移动到创建好的mongodb下，而是文件下的内容\nmv mongodb-linux-x86_64-rhel70-4.0.1/*  /usr/local/mongodb/\n\n# 4.添加mongodb的环境变量\nvi /etc/profile\n\n# 5.在文件末尾插入如下内容\nexport MONGODB_HOME=/usr/local/mongodb  \nexport PATH=$PATH:$MONGODB_HOME/bin\n\n# 6.修改保存后要重启系统配置，执行命令如下\nsource /etc/profile\n```\n\n> 经过上述步骤，基本的配置已经完成了，接下来创建mongodb数据文件和日志文件的存放位置，并且对启动项进行配置，启动项配置其中包含数据库文件路径和日志文件路径，填写上述将要创建的文件夹或文件路径。具体步骤如下：\n\n``` bash\n# 1.创建数据库文件存放路径\ncd /usr/local/mongodb\nmkdir -p data/db\nchmod -r 777 data/db\n\n# 2.创建日志文件\ncd /usr/local/mongodb\nmkdir logs\ncd logs\ntouch mongodb.log\n\n# 3.创建启动文件\ncd /usr/local/mongodb/bin\ntouch mongodb.conf\n\n# 4.编辑启动文件\nvi mongodb.conf\n\n# 5.在文件中插入如下内容\ndbpath=/usr/local/mongodb/data/db  #数据文件存放目录\nlogpath=/usr/local/mongodb/logs/mongodb.log #日志存放目录\nport=27017 #端口\nfork=true #以守护程序的方式启用，即在后台运行\nlogappend=true\nmaxConns=5000\nstorageEngine = mmapv1\n\n```\n\n## 启动数据库\n\n> 经过配置后即可启动数据库了，启动数据库文件在bin目录下执行下术命令\n\n``` bash\n# 切换到bin目录下\ncd /usr/local/mongodb/bin\n\n# 启动数据库\n./mongod --config mongodb.conf\n\n# 访问数据库\n./mongo\n\n```\n\n## 补充\n\n在Ubuntu上安装的时候遇到了一些问题，做如下补充：\n\n1. 之前启动数据库写错了，由`./mongod  mongodb.conf`修改为`./mongod --config mongodb.conf`。\n\n2. ~~~`mongodb.conf`配置文件注释掉`fork`参数，后期解决后再做补充。~~~ 暂时看应该是注释问题，删除配置文件的注释和空格后即可，还是有点蒙蔽。\n\n## 小结\n\n> 安装mongodb和配置是很简单的，过程还是比较顺利。大家一起学习！","slug":"Centos7安装MongoDB4-0","published":1,"updated":"2018-12-26T07:48:00.969Z","_id":"cjpwe2pk80006toqu5refn8p4","comments":1,"layout":"post","photos":[],"link":"","content":"<p>由于项目需要使用MongoDB，所以记录一下在Centos7下安装MongoDB的方法。<br>MongoDB 是一个基于分布式文件存储的数据库。由 C++ 语言编写。旨在为 WEB 应用提供可扩展的高性能数据存储解决方案。<br>MongoDB 是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。</p>\n<a id=\"more\"></a>\n<p>由于项目需要使用MongoDB，所以记录一下在Centos7下安装MongoDB的方法。<br>MongoDB 是一个基于分布式文件存储的数据库。由 C++ 语言编写。旨在为 WEB 应用提供可扩展的高性能数据存储解决方案。<br>MongoDB 是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。</p>\n<h2 id=\"安装包下载\"><a href=\"#安装包下载\" class=\"headerlink\" title=\"安装包下载\"></a>安装包下载</h2><blockquote>\n<p><a href=\"https://www.mongodb.com/download-center#community\" target=\"_blank\" rel=\"noopener\">MongoDB点击跳转下载地址</a>，打开地址后选择Community Server,然后选择Linux下载对应的版本安装包即可，但是下拉列表中有很多Linux安装包，Centos选择带RHEL的安装包，这里选<strong>择RHEl 7 Linux 64-bit x64</strong>版本的安装包即可，下载后上传到对应Linux服务器。</p>\n</blockquote>\n<h2 id=\"MongoDB安装\"><a href=\"#MongoDB安装\" class=\"headerlink\" title=\"MongoDB安装\"></a>MongoDB安装</h2><blockquote>\n<p>在安装时均使用root用户，如果非root用户则在命令前加sudo命令，用来以root身份运行</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.在usr/local/下创建mongodb文件夹</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/</span><br><span class=\"line\">mkdir mongodb</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.解压文件</span></span><br><span class=\"line\">tar -xzvf mongodb-linux-x86_64-rhel70-4.0.1.tgz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3.将解压后的文件下所有内容移动到mongodb文件夹下</span></span><br><span class=\"line\"><span class=\"comment\"># 注意这里不是将mongodb-linux-x86_64-rhel70-4.0.1文件夹移动到创建好的mongodb下，而是文件下的内容</span></span><br><span class=\"line\">mv mongodb-linux-x86_64-rhel70-4.0.1/*  /usr/<span class=\"built_in\">local</span>/mongodb/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4.添加mongodb的环境变量</span></span><br><span class=\"line\">vi /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 5.在文件末尾插入如下内容</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> MONGODB_HOME=/usr/<span class=\"built_in\">local</span>/mongodb  </span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$MONGODB_HOME</span>/bin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 6.修改保存后要重启系统配置，执行命令如下</span></span><br><span class=\"line\"><span class=\"built_in\">source</span> /etc/profile</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>经过上述步骤，基本的配置已经完成了，接下来创建mongodb数据文件和日志文件的存放位置，并且对启动项进行配置，启动项配置其中包含数据库文件路径和日志文件路径，填写上述将要创建的文件夹或文件路径。具体步骤如下：</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.创建数据库文件存放路径</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/mongodb</span><br><span class=\"line\">mkdir -p data/db</span><br><span class=\"line\">chmod -r 777 data/db</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.创建日志文件</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/mongodb</span><br><span class=\"line\">mkdir logs</span><br><span class=\"line\"><span class=\"built_in\">cd</span> logs</span><br><span class=\"line\">touch mongodb.log</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3.创建启动文件</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/mongodb/bin</span><br><span class=\"line\">touch mongodb.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4.编辑启动文件</span></span><br><span class=\"line\">vi mongodb.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 5.在文件中插入如下内容</span></span><br><span class=\"line\">dbpath=/usr/<span class=\"built_in\">local</span>/mongodb/data/db  <span class=\"comment\">#数据文件存放目录</span></span><br><span class=\"line\">logpath=/usr/<span class=\"built_in\">local</span>/mongodb/logs/mongodb.log <span class=\"comment\">#日志存放目录</span></span><br><span class=\"line\">port=27017 <span class=\"comment\">#端口</span></span><br><span class=\"line\">fork=<span class=\"literal\">true</span> <span class=\"comment\">#以守护程序的方式启用，即在后台运行</span></span><br><span class=\"line\">logappend=<span class=\"literal\">true</span></span><br><span class=\"line\">maxConns=5000</span><br><span class=\"line\">storageEngine = mmapv1</span><br></pre></td></tr></table></figure>\n<h2 id=\"启动数据库\"><a href=\"#启动数据库\" class=\"headerlink\" title=\"启动数据库\"></a>启动数据库</h2><blockquote>\n<p>经过配置后即可启动数据库了，启动数据库文件在bin目录下执行下术命令</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 切换到bin目录下</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/mongodb/bin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动数据库</span></span><br><span class=\"line\">./mongod --config mongodb.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 访问数据库</span></span><br><span class=\"line\">./mongo</span><br></pre></td></tr></table></figure>\n<h2 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h2><p>在Ubuntu上安装的时候遇到了一些问题，做如下补充：</p>\n<ol>\n<li><p>之前启动数据库写错了，由<code>./mongod  mongodb.conf</code>修改为<code>./mongod --config mongodb.conf</code>。</p>\n</li>\n<li><p><del>~<code>mongodb.conf</code>配置文件注释掉<code>fork</code>参数，后期解决后再做补充。</del>~ 暂时看应该是注释问题，删除配置文件的注释和空格后即可，还是有点蒙蔽。</p>\n</li>\n</ol>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><blockquote>\n<p>安装mongodb和配置是很简单的，过程还是比较顺利。大家一起学习！</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>由于项目需要使用MongoDB，所以记录一下在Centos7下安装MongoDB的方法。<br>MongoDB 是一个基于分布式文件存储的数据库。由 C++ 语言编写。旨在为 WEB 应用提供可扩展的高性能数据存储解决方案。<br>MongoDB 是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。</p>","more":"<p>由于项目需要使用MongoDB，所以记录一下在Centos7下安装MongoDB的方法。<br>MongoDB 是一个基于分布式文件存储的数据库。由 C++ 语言编写。旨在为 WEB 应用提供可扩展的高性能数据存储解决方案。<br>MongoDB 是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。</p>\n<h2 id=\"安装包下载\"><a href=\"#安装包下载\" class=\"headerlink\" title=\"安装包下载\"></a>安装包下载</h2><blockquote>\n<p><a href=\"https://www.mongodb.com/download-center#community\" target=\"_blank\" rel=\"noopener\">MongoDB点击跳转下载地址</a>，打开地址后选择Community Server,然后选择Linux下载对应的版本安装包即可，但是下拉列表中有很多Linux安装包，Centos选择带RHEL的安装包，这里选<strong>择RHEl 7 Linux 64-bit x64</strong>版本的安装包即可，下载后上传到对应Linux服务器。</p>\n</blockquote>\n<h2 id=\"MongoDB安装\"><a href=\"#MongoDB安装\" class=\"headerlink\" title=\"MongoDB安装\"></a>MongoDB安装</h2><blockquote>\n<p>在安装时均使用root用户，如果非root用户则在命令前加sudo命令，用来以root身份运行</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.在usr/local/下创建mongodb文件夹</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/</span><br><span class=\"line\">mkdir mongodb</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.解压文件</span></span><br><span class=\"line\">tar -xzvf mongodb-linux-x86_64-rhel70-4.0.1.tgz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3.将解压后的文件下所有内容移动到mongodb文件夹下</span></span><br><span class=\"line\"><span class=\"comment\"># 注意这里不是将mongodb-linux-x86_64-rhel70-4.0.1文件夹移动到创建好的mongodb下，而是文件下的内容</span></span><br><span class=\"line\">mv mongodb-linux-x86_64-rhel70-4.0.1/*  /usr/<span class=\"built_in\">local</span>/mongodb/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4.添加mongodb的环境变量</span></span><br><span class=\"line\">vi /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 5.在文件末尾插入如下内容</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> MONGODB_HOME=/usr/<span class=\"built_in\">local</span>/mongodb  </span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$MONGODB_HOME</span>/bin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 6.修改保存后要重启系统配置，执行命令如下</span></span><br><span class=\"line\"><span class=\"built_in\">source</span> /etc/profile</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>经过上述步骤，基本的配置已经完成了，接下来创建mongodb数据文件和日志文件的存放位置，并且对启动项进行配置，启动项配置其中包含数据库文件路径和日志文件路径，填写上述将要创建的文件夹或文件路径。具体步骤如下：</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.创建数据库文件存放路径</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/mongodb</span><br><span class=\"line\">mkdir -p data/db</span><br><span class=\"line\">chmod -r 777 data/db</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.创建日志文件</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/mongodb</span><br><span class=\"line\">mkdir logs</span><br><span class=\"line\"><span class=\"built_in\">cd</span> logs</span><br><span class=\"line\">touch mongodb.log</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3.创建启动文件</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/mongodb/bin</span><br><span class=\"line\">touch mongodb.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4.编辑启动文件</span></span><br><span class=\"line\">vi mongodb.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 5.在文件中插入如下内容</span></span><br><span class=\"line\">dbpath=/usr/<span class=\"built_in\">local</span>/mongodb/data/db  <span class=\"comment\">#数据文件存放目录</span></span><br><span class=\"line\">logpath=/usr/<span class=\"built_in\">local</span>/mongodb/logs/mongodb.log <span class=\"comment\">#日志存放目录</span></span><br><span class=\"line\">port=27017 <span class=\"comment\">#端口</span></span><br><span class=\"line\">fork=<span class=\"literal\">true</span> <span class=\"comment\">#以守护程序的方式启用，即在后台运行</span></span><br><span class=\"line\">logappend=<span class=\"literal\">true</span></span><br><span class=\"line\">maxConns=5000</span><br><span class=\"line\">storageEngine = mmapv1</span><br></pre></td></tr></table></figure>\n<h2 id=\"启动数据库\"><a href=\"#启动数据库\" class=\"headerlink\" title=\"启动数据库\"></a>启动数据库</h2><blockquote>\n<p>经过配置后即可启动数据库了，启动数据库文件在bin目录下执行下术命令</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 切换到bin目录下</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/mongodb/bin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动数据库</span></span><br><span class=\"line\">./mongod --config mongodb.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 访问数据库</span></span><br><span class=\"line\">./mongo</span><br></pre></td></tr></table></figure>\n<h2 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h2><p>在Ubuntu上安装的时候遇到了一些问题，做如下补充：</p>\n<ol>\n<li><p>之前启动数据库写错了，由<code>./mongod  mongodb.conf</code>修改为<code>./mongod --config mongodb.conf</code>。</p>\n</li>\n<li><p><del>~<code>mongodb.conf</code>配置文件注释掉<code>fork</code>参数，后期解决后再做补充。</del>~ 暂时看应该是注释问题，删除配置文件的注释和空格后即可，还是有点蒙蔽。</p>\n</li>\n</ol>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><blockquote>\n<p>安装mongodb和配置是很简单的，过程还是比较顺利。大家一起学习！</p>\n</blockquote>"},{"title":"Centos7安装Python3.7","url":"centos7-install-pyhton3-7","date":"2018-12-13T14:32:47.000Z","_content":"\n全新Centos7系统安装 Python3.7，虽然在Centos7已经预先存在了python2.7版本，但是不要慌，编译安装Python3.7是和原先的旧版本没有任何冲突的，原有的Python是在/usr/bin目录下，是可以共存的。\n下面介绍了安装步骤以及安装过程中遇到各种坑在此记录一下。T-T\n\n<!--more-->\n\n>全新Centos7系统安装 Python3.7，虽然在Centos7已经预先存在了python2.7版本，但是不要慌，编译安装Python3.7是和原先的旧版本没有任何冲突的，原有的Python是在/usr/bin目录下，是可以共存的。\n下面介绍了安装步骤以及安装过程中遇到各种坑在此记录一下。T-T\n\n----------\n\n## 下载Python\n> [官网下载Python](https://www.python.org/downloads/source/)，下载地址：https://www.python.org/downloads/source/， 选择要下载的版本，这里选择Download Gzipped source tarball 下载，不同时期可能下载页面不一样，请自行寻找，good luck for you。\n> 下载后将文件用ssh传到centos即可，存放目录放在opt/python（自建哈）下就可以，然后执行下术命令\n\n----------\n\n## Python安装\n> Python安装过程很简单，执行下述命令即可，但是在 make 和 make install 过程中会遇到很多问题，请先看**遇到问题**章节，可以预先要开错误。\n\n``` linux\n# 解压文件\n$ tar -xvzf Python-3.7.0.tgz\n# 进入解压后目录\ncd Python-3.7.0\n$ # 添加对应配置将要安装的目录  安装后就在/usr/python下\n$ ./configure --prefix=/usr/python\n# 执行安装\n$ make\n# 然后执行\n$ make install\n```\n\n> 如果上述操作遇到问题参考下面**遇到问题**章节，如果成功install后即可发现在/usr目录下会有python文件夹，原有的在/usr/bin目录下。\n系统中原来的python在/usr/bin/python，通过ls -l可以看到，python是一个软链接，链接到本目录下的python2.6。\n我们可以把这个删除，也可以新建一个python3的软链接，只不过执行时python要改成python3，或者python脚本头部声明要改为#!/usr/bin/python3。\n这里为了方便建议先重命名一下，然后建立个软链接就可以了，之前的程序头部也不用更改：\n\n```linux\n$ mv /usr/bin/python /usr/bin/python.bak\n$ ln -s /usr/python/bin/python3 /usr/bin/python\n```\n----------\n\n## 遇到问题\n> 在安装过程中遇到了几个错误，在此记录下，错误都是需要相关依赖导致安装失败，详细内容如下：\n\n### 错误： **configure: error: no acceptable C compiler found in $PATH**\n> 此问题是执行./configure --prefix=/usr/python时编译缺少gcc环境，具体错误及解决如下：\n\n``` linux\n# 错误如下：\nconfigure: error: in `/usr/local/src/pythonSoft/Python-3.7.0':\nconfigure: error: no acceptable C compiler found in $PATH\nSee `config.log' for more details\n\n# 解决办法，安装gcc环境\n$ yum install -y gcc\n\n# 安装成功后重新执行\n$ ./configure --prefix=/usr/python\n```\n\n### 错误： **can't decompress data; zlib not available**\n> 在执行make命令安装过程中会遇到错误can't decompress data; zlib not available，是因为缺少zlib依赖导致，安装zlib即可，命令如下\n\n``` linux\n# 安装zlib依赖\n$ yum -y install zlib*\n# 然后再执行\n$ make\n$ make install\n```\n\n### 错误： **ModuleNotFoundError: No module named '_ctypes'**\n> make install安装遇到ModuleNotFoundError: No module named '_ctypes'问题，执行如下命令：\n``` linux\n# Python3.7中缺少libffi-devel依赖\n$ yum install libffi-devel -y\n# 然后再执行即可\n$ make install\n```\n\n## 小结\n> **锣鼓喧天鞭炮齐鸣红旗招展人山人海**，到此Python终于安装结束了，互联网拯救了我，再次感谢如下博主资料：\nhttps://www.cnblogs.com/jellydong/p/7724169.html\nhttps://blog.csdn.net/qq_31306973/article/details/78538601\nhttps://blog.csdn.net/qq_36416904/article/details/79316972\nhttps://blog.csdn.net/blueheart20/article/details/72827666\n\n","source":"_posts/Centos7安装Python3-7.md","raw":"---\ntitle: Centos7安装Python3.7\nurl: centos7-install-pyhton3-7\ndate: 2018-12-13 22:32:47\ntags: [Python, Linux]\ncategories: Python\n---\n\n全新Centos7系统安装 Python3.7，虽然在Centos7已经预先存在了python2.7版本，但是不要慌，编译安装Python3.7是和原先的旧版本没有任何冲突的，原有的Python是在/usr/bin目录下，是可以共存的。\n下面介绍了安装步骤以及安装过程中遇到各种坑在此记录一下。T-T\n\n<!--more-->\n\n>全新Centos7系统安装 Python3.7，虽然在Centos7已经预先存在了python2.7版本，但是不要慌，编译安装Python3.7是和原先的旧版本没有任何冲突的，原有的Python是在/usr/bin目录下，是可以共存的。\n下面介绍了安装步骤以及安装过程中遇到各种坑在此记录一下。T-T\n\n----------\n\n## 下载Python\n> [官网下载Python](https://www.python.org/downloads/source/)，下载地址：https://www.python.org/downloads/source/， 选择要下载的版本，这里选择Download Gzipped source tarball 下载，不同时期可能下载页面不一样，请自行寻找，good luck for you。\n> 下载后将文件用ssh传到centos即可，存放目录放在opt/python（自建哈）下就可以，然后执行下术命令\n\n----------\n\n## Python安装\n> Python安装过程很简单，执行下述命令即可，但是在 make 和 make install 过程中会遇到很多问题，请先看**遇到问题**章节，可以预先要开错误。\n\n``` linux\n# 解压文件\n$ tar -xvzf Python-3.7.0.tgz\n# 进入解压后目录\ncd Python-3.7.0\n$ # 添加对应配置将要安装的目录  安装后就在/usr/python下\n$ ./configure --prefix=/usr/python\n# 执行安装\n$ make\n# 然后执行\n$ make install\n```\n\n> 如果上述操作遇到问题参考下面**遇到问题**章节，如果成功install后即可发现在/usr目录下会有python文件夹，原有的在/usr/bin目录下。\n系统中原来的python在/usr/bin/python，通过ls -l可以看到，python是一个软链接，链接到本目录下的python2.6。\n我们可以把这个删除，也可以新建一个python3的软链接，只不过执行时python要改成python3，或者python脚本头部声明要改为#!/usr/bin/python3。\n这里为了方便建议先重命名一下，然后建立个软链接就可以了，之前的程序头部也不用更改：\n\n```linux\n$ mv /usr/bin/python /usr/bin/python.bak\n$ ln -s /usr/python/bin/python3 /usr/bin/python\n```\n----------\n\n## 遇到问题\n> 在安装过程中遇到了几个错误，在此记录下，错误都是需要相关依赖导致安装失败，详细内容如下：\n\n### 错误： **configure: error: no acceptable C compiler found in $PATH**\n> 此问题是执行./configure --prefix=/usr/python时编译缺少gcc环境，具体错误及解决如下：\n\n``` linux\n# 错误如下：\nconfigure: error: in `/usr/local/src/pythonSoft/Python-3.7.0':\nconfigure: error: no acceptable C compiler found in $PATH\nSee `config.log' for more details\n\n# 解决办法，安装gcc环境\n$ yum install -y gcc\n\n# 安装成功后重新执行\n$ ./configure --prefix=/usr/python\n```\n\n### 错误： **can't decompress data; zlib not available**\n> 在执行make命令安装过程中会遇到错误can't decompress data; zlib not available，是因为缺少zlib依赖导致，安装zlib即可，命令如下\n\n``` linux\n# 安装zlib依赖\n$ yum -y install zlib*\n# 然后再执行\n$ make\n$ make install\n```\n\n### 错误： **ModuleNotFoundError: No module named '_ctypes'**\n> make install安装遇到ModuleNotFoundError: No module named '_ctypes'问题，执行如下命令：\n``` linux\n# Python3.7中缺少libffi-devel依赖\n$ yum install libffi-devel -y\n# 然后再执行即可\n$ make install\n```\n\n## 小结\n> **锣鼓喧天鞭炮齐鸣红旗招展人山人海**，到此Python终于安装结束了，互联网拯救了我，再次感谢如下博主资料：\nhttps://www.cnblogs.com/jellydong/p/7724169.html\nhttps://blog.csdn.net/qq_31306973/article/details/78538601\nhttps://blog.csdn.net/qq_36416904/article/details/79316972\nhttps://blog.csdn.net/blueheart20/article/details/72827666\n\n","slug":"Centos7安装Python3-7","published":1,"updated":"2018-12-26T07:48:42.525Z","_id":"cjpwe2pk90008toquymhd76s0","comments":1,"layout":"post","photos":[],"link":"","content":"<p>全新Centos7系统安装 Python3.7，虽然在Centos7已经预先存在了python2.7版本，但是不要慌，编译安装Python3.7是和原先的旧版本没有任何冲突的，原有的Python是在/usr/bin目录下，是可以共存的。<br>下面介绍了安装步骤以及安装过程中遇到各种坑在此记录一下。T-T</p>\n<a id=\"more\"></a>\n<blockquote>\n<p>全新Centos7系统安装 Python3.7，虽然在Centos7已经预先存在了python2.7版本，但是不要慌，编译安装Python3.7是和原先的旧版本没有任何冲突的，原有的Python是在/usr/bin目录下，是可以共存的。<br>下面介绍了安装步骤以及安装过程中遇到各种坑在此记录一下。T-T</p>\n</blockquote>\n<hr>\n<h2 id=\"下载Python\"><a href=\"#下载Python\" class=\"headerlink\" title=\"下载Python\"></a>下载Python</h2><blockquote>\n<p><a href=\"https://www.python.org/downloads/source/\" target=\"_blank\" rel=\"noopener\">官网下载Python</a>，下载地址：<a href=\"https://www.python.org/downloads/source/，\" target=\"_blank\" rel=\"noopener\">https://www.python.org/downloads/source/，</a> 选择要下载的版本，这里选择Download Gzipped source tarball 下载，不同时期可能下载页面不一样，请自行寻找，good luck for you。<br>下载后将文件用ssh传到centos即可，存放目录放在opt/python（自建哈）下就可以，然后执行下术命令</p>\n</blockquote>\n<hr>\n<h2 id=\"Python安装\"><a href=\"#Python安装\" class=\"headerlink\" title=\"Python安装\"></a>Python安装</h2><blockquote>\n<p>Python安装过程很简单，执行下述命令即可，但是在 make 和 make install 过程中会遇到很多问题，请先看<strong>遇到问题</strong>章节，可以预先要开错误。</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 解压文件</span><br><span class=\"line\">$ tar -xvzf Python-3.7.0.tgz</span><br><span class=\"line\"># 进入解压后目录</span><br><span class=\"line\">cd Python-3.7.0</span><br><span class=\"line\">$ # 添加对应配置将要安装的目录  安装后就在/usr/python下</span><br><span class=\"line\">$ ./configure --prefix=/usr/python</span><br><span class=\"line\"># 执行安装</span><br><span class=\"line\">$ make</span><br><span class=\"line\"># 然后执行</span><br><span class=\"line\">$ make install</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>如果上述操作遇到问题参考下面<strong>遇到问题</strong>章节，如果成功install后即可发现在/usr目录下会有python文件夹，原有的在/usr/bin目录下。<br>系统中原来的python在/usr/bin/python，通过ls -l可以看到，python是一个软链接，链接到本目录下的python2.6。<br>我们可以把这个删除，也可以新建一个python3的软链接，只不过执行时python要改成python3，或者python脚本头部声明要改为#!/usr/bin/python3。<br>这里为了方便建议先重命名一下，然后建立个软链接就可以了，之前的程序头部也不用更改：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mv /usr/bin/python /usr/bin/python.bak</span><br><span class=\"line\">$ ln -s /usr/python/bin/python3 /usr/bin/python</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"遇到问题\"><a href=\"#遇到问题\" class=\"headerlink\" title=\"遇到问题\"></a>遇到问题</h2><blockquote>\n<p>在安装过程中遇到了几个错误，在此记录下，错误都是需要相关依赖导致安装失败，详细内容如下：</p>\n</blockquote>\n<h3 id=\"错误：-configure-error-no-acceptable-C-compiler-found-in-PATH\"><a href=\"#错误：-configure-error-no-acceptable-C-compiler-found-in-PATH\" class=\"headerlink\" title=\"错误： configure: error: no acceptable C compiler found in $PATH\"></a>错误： <strong>configure: error: no acceptable C compiler found in $PATH</strong></h3><blockquote>\n<p>此问题是执行./configure –prefix=/usr/python时编译缺少gcc环境，具体错误及解决如下：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 错误如下：</span><br><span class=\"line\">configure: error: in `/usr/local/src/pythonSoft/Python-3.7.0&apos;:</span><br><span class=\"line\">configure: error: no acceptable C compiler found in $PATH</span><br><span class=\"line\">See `config.log&apos; for more details</span><br><span class=\"line\"></span><br><span class=\"line\"># 解决办法，安装gcc环境</span><br><span class=\"line\">$ yum install -y gcc</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装成功后重新执行</span><br><span class=\"line\">$ ./configure --prefix=/usr/python</span><br></pre></td></tr></table></figure>\n<h3 id=\"错误：-can’t-decompress-data-zlib-not-available\"><a href=\"#错误：-can’t-decompress-data-zlib-not-available\" class=\"headerlink\" title=\"错误： can’t decompress data; zlib not available\"></a>错误： <strong>can’t decompress data; zlib not available</strong></h3><blockquote>\n<p>在执行make命令安装过程中会遇到错误can’t decompress data; zlib not available，是因为缺少zlib依赖导致，安装zlib即可，命令如下</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 安装zlib依赖</span><br><span class=\"line\">$ yum -y install zlib*</span><br><span class=\"line\"># 然后再执行</span><br><span class=\"line\">$ make</span><br><span class=\"line\">$ make install</span><br></pre></td></tr></table></figure>\n<h3 id=\"错误：-ModuleNotFoundError-No-module-named-‘-ctypes’\"><a href=\"#错误：-ModuleNotFoundError-No-module-named-‘-ctypes’\" class=\"headerlink\" title=\"错误： ModuleNotFoundError: No module named ‘_ctypes’\"></a>错误： <strong>ModuleNotFoundError: No module named ‘_ctypes’</strong></h3><blockquote>\n<p>make install安装遇到ModuleNotFoundError: No module named ‘_ctypes’问题，执行如下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Python3.7中缺少libffi-devel依赖</span><br><span class=\"line\">$ yum install libffi-devel -y</span><br><span class=\"line\"># 然后再执行即可</span><br><span class=\"line\">$ make install</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><blockquote>\n<p><strong>锣鼓喧天鞭炮齐鸣红旗招展人山人海</strong>，到此Python终于安装结束了，互联网拯救了我，再次感谢如下博主资料：<br><a href=\"https://www.cnblogs.com/jellydong/p/7724169.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/jellydong/p/7724169.html</a><br><a href=\"https://blog.csdn.net/qq_31306973/article/details/78538601\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/qq_31306973/article/details/78538601</a><br><a href=\"https://blog.csdn.net/qq_36416904/article/details/79316972\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/qq_36416904/article/details/79316972</a><br><a href=\"https://blog.csdn.net/blueheart20/article/details/72827666\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/blueheart20/article/details/72827666</a></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>全新Centos7系统安装 Python3.7，虽然在Centos7已经预先存在了python2.7版本，但是不要慌，编译安装Python3.7是和原先的旧版本没有任何冲突的，原有的Python是在/usr/bin目录下，是可以共存的。<br>下面介绍了安装步骤以及安装过程中遇到各种坑在此记录一下。T-T</p>","more":"<blockquote>\n<p>全新Centos7系统安装 Python3.7，虽然在Centos7已经预先存在了python2.7版本，但是不要慌，编译安装Python3.7是和原先的旧版本没有任何冲突的，原有的Python是在/usr/bin目录下，是可以共存的。<br>下面介绍了安装步骤以及安装过程中遇到各种坑在此记录一下。T-T</p>\n</blockquote>\n<hr>\n<h2 id=\"下载Python\"><a href=\"#下载Python\" class=\"headerlink\" title=\"下载Python\"></a>下载Python</h2><blockquote>\n<p><a href=\"https://www.python.org/downloads/source/\" target=\"_blank\" rel=\"noopener\">官网下载Python</a>，下载地址：<a href=\"https://www.python.org/downloads/source/，\" target=\"_blank\" rel=\"noopener\">https://www.python.org/downloads/source/，</a> 选择要下载的版本，这里选择Download Gzipped source tarball 下载，不同时期可能下载页面不一样，请自行寻找，good luck for you。<br>下载后将文件用ssh传到centos即可，存放目录放在opt/python（自建哈）下就可以，然后执行下术命令</p>\n</blockquote>\n<hr>\n<h2 id=\"Python安装\"><a href=\"#Python安装\" class=\"headerlink\" title=\"Python安装\"></a>Python安装</h2><blockquote>\n<p>Python安装过程很简单，执行下述命令即可，但是在 make 和 make install 过程中会遇到很多问题，请先看<strong>遇到问题</strong>章节，可以预先要开错误。</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 解压文件</span><br><span class=\"line\">$ tar -xvzf Python-3.7.0.tgz</span><br><span class=\"line\"># 进入解压后目录</span><br><span class=\"line\">cd Python-3.7.0</span><br><span class=\"line\">$ # 添加对应配置将要安装的目录  安装后就在/usr/python下</span><br><span class=\"line\">$ ./configure --prefix=/usr/python</span><br><span class=\"line\"># 执行安装</span><br><span class=\"line\">$ make</span><br><span class=\"line\"># 然后执行</span><br><span class=\"line\">$ make install</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>如果上述操作遇到问题参考下面<strong>遇到问题</strong>章节，如果成功install后即可发现在/usr目录下会有python文件夹，原有的在/usr/bin目录下。<br>系统中原来的python在/usr/bin/python，通过ls -l可以看到，python是一个软链接，链接到本目录下的python2.6。<br>我们可以把这个删除，也可以新建一个python3的软链接，只不过执行时python要改成python3，或者python脚本头部声明要改为#!/usr/bin/python3。<br>这里为了方便建议先重命名一下，然后建立个软链接就可以了，之前的程序头部也不用更改：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mv /usr/bin/python /usr/bin/python.bak</span><br><span class=\"line\">$ ln -s /usr/python/bin/python3 /usr/bin/python</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"遇到问题\"><a href=\"#遇到问题\" class=\"headerlink\" title=\"遇到问题\"></a>遇到问题</h2><blockquote>\n<p>在安装过程中遇到了几个错误，在此记录下，错误都是需要相关依赖导致安装失败，详细内容如下：</p>\n</blockquote>\n<h3 id=\"错误：-configure-error-no-acceptable-C-compiler-found-in-PATH\"><a href=\"#错误：-configure-error-no-acceptable-C-compiler-found-in-PATH\" class=\"headerlink\" title=\"错误： configure: error: no acceptable C compiler found in $PATH\"></a>错误： <strong>configure: error: no acceptable C compiler found in $PATH</strong></h3><blockquote>\n<p>此问题是执行./configure –prefix=/usr/python时编译缺少gcc环境，具体错误及解决如下：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 错误如下：</span><br><span class=\"line\">configure: error: in `/usr/local/src/pythonSoft/Python-3.7.0&apos;:</span><br><span class=\"line\">configure: error: no acceptable C compiler found in $PATH</span><br><span class=\"line\">See `config.log&apos; for more details</span><br><span class=\"line\"></span><br><span class=\"line\"># 解决办法，安装gcc环境</span><br><span class=\"line\">$ yum install -y gcc</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装成功后重新执行</span><br><span class=\"line\">$ ./configure --prefix=/usr/python</span><br></pre></td></tr></table></figure>\n<h3 id=\"错误：-can’t-decompress-data-zlib-not-available\"><a href=\"#错误：-can’t-decompress-data-zlib-not-available\" class=\"headerlink\" title=\"错误： can’t decompress data; zlib not available\"></a>错误： <strong>can’t decompress data; zlib not available</strong></h3><blockquote>\n<p>在执行make命令安装过程中会遇到错误can’t decompress data; zlib not available，是因为缺少zlib依赖导致，安装zlib即可，命令如下</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 安装zlib依赖</span><br><span class=\"line\">$ yum -y install zlib*</span><br><span class=\"line\"># 然后再执行</span><br><span class=\"line\">$ make</span><br><span class=\"line\">$ make install</span><br></pre></td></tr></table></figure>\n<h3 id=\"错误：-ModuleNotFoundError-No-module-named-‘-ctypes’\"><a href=\"#错误：-ModuleNotFoundError-No-module-named-‘-ctypes’\" class=\"headerlink\" title=\"错误： ModuleNotFoundError: No module named ‘_ctypes’\"></a>错误： <strong>ModuleNotFoundError: No module named ‘_ctypes’</strong></h3><blockquote>\n<p>make install安装遇到ModuleNotFoundError: No module named ‘_ctypes’问题，执行如下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Python3.7中缺少libffi-devel依赖</span><br><span class=\"line\">$ yum install libffi-devel -y</span><br><span class=\"line\"># 然后再执行即可</span><br><span class=\"line\">$ make install</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><blockquote>\n<p><strong>锣鼓喧天鞭炮齐鸣红旗招展人山人海</strong>，到此Python终于安装结束了，互联网拯救了我，再次感谢如下博主资料：<br><a href=\"https://www.cnblogs.com/jellydong/p/7724169.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/jellydong/p/7724169.html</a><br><a href=\"https://blog.csdn.net/qq_31306973/article/details/78538601\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/qq_31306973/article/details/78538601</a><br><a href=\"https://blog.csdn.net/qq_36416904/article/details/79316972\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/qq_36416904/article/details/79316972</a><br><a href=\"https://blog.csdn.net/blueheart20/article/details/72827666\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/blueheart20/article/details/72827666</a></p>\n</blockquote>"},{"title":"Linux下安装JDK","url":"linux-install-jdk7","date":"2018-12-13T14:31:56.000Z","_content":"\nLinux安装JDK是开发中部署中必要知识，在此做下记录。\n\n<!--more-->\n\nLinux安装JDK是开发中部署中必要知识，在此做下记录。\n\n## 卸载JDK\n\n查看Linux是否安装了其他版本的JDK，如果安装了卸载原有JDK。\n\n## 解压JDK安装\n\n- 去官网下载需要版本的JDk；\n- 解压JDK文件；\n- 配置JDK环境变量；\n- 重启Linux；\n\n> 本文下载的是 jdk-7u79-linux-x64.tar.gz 包，上传到Linux的任意路径下，比如我上传到/opt/java/路径下\n\n```linux\n#cd ../opt/java\n#tar xvf  jdk-7u79-linux-x64.tar.gz\n```\n\n> 解压后修改环境变量，修改 /etc/ 下的profile文件，在文件最后添加如下内容\n\n    #vi /etc/profile\n    #添加内容如下，环境变量路径为安装JDK的路径\n    export JAVA_HOME=/opt/java/jdk1.7.0_79\n    export JRE_HOME=/opt/java/jdk1.7.0_79/jre  \n    export PATH=$PATH:/opt/java/jdk1.7.0_79/bin  \n    export CLASSPATH=./:/opt/java/jdk1.7.0_79/lib:/opt/java/jdk1.7.0_79/jre/lib  \n\n> 重启Linux系统，然后java -verson查看JDK版本\n\n    [root@localhost java]# java -version\n    java version \"1.7.0_79\"\n    Java(TM) SE Runtime Environment (build 1.7.0_79-b15)\n    Java HotSpot(TM) 64-Bit Server VM (build 24.79-b02, mixed mode)\n","source":"_posts/Linux下安装JDK.md","raw":"---\ntitle: Linux下安装JDK\nurl: linux-install-jdk7\ndate: 2018-12-13 22:31:56\ntags: JDk\ncategories: Linux\n---\n\nLinux安装JDK是开发中部署中必要知识，在此做下记录。\n\n<!--more-->\n\nLinux安装JDK是开发中部署中必要知识，在此做下记录。\n\n## 卸载JDK\n\n查看Linux是否安装了其他版本的JDK，如果安装了卸载原有JDK。\n\n## 解压JDK安装\n\n- 去官网下载需要版本的JDk；\n- 解压JDK文件；\n- 配置JDK环境变量；\n- 重启Linux；\n\n> 本文下载的是 jdk-7u79-linux-x64.tar.gz 包，上传到Linux的任意路径下，比如我上传到/opt/java/路径下\n\n```linux\n#cd ../opt/java\n#tar xvf  jdk-7u79-linux-x64.tar.gz\n```\n\n> 解压后修改环境变量，修改 /etc/ 下的profile文件，在文件最后添加如下内容\n\n    #vi /etc/profile\n    #添加内容如下，环境变量路径为安装JDK的路径\n    export JAVA_HOME=/opt/java/jdk1.7.0_79\n    export JRE_HOME=/opt/java/jdk1.7.0_79/jre  \n    export PATH=$PATH:/opt/java/jdk1.7.0_79/bin  \n    export CLASSPATH=./:/opt/java/jdk1.7.0_79/lib:/opt/java/jdk1.7.0_79/jre/lib  \n\n> 重启Linux系统，然后java -verson查看JDK版本\n\n    [root@localhost java]# java -version\n    java version \"1.7.0_79\"\n    Java(TM) SE Runtime Environment (build 1.7.0_79-b15)\n    Java HotSpot(TM) 64-Bit Server VM (build 24.79-b02, mixed mode)\n","slug":"Linux下安装JDK","published":1,"updated":"2018-12-17T02:51:39.270Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjpwe2pka000atoqumfwqno97","content":"<p>Linux安装JDK是开发中部署中必要知识，在此做下记录。</p>\n<a id=\"more\"></a>\n<p>Linux安装JDK是开发中部署中必要知识，在此做下记录。</p>\n<h2 id=\"卸载JDK\"><a href=\"#卸载JDK\" class=\"headerlink\" title=\"卸载JDK\"></a>卸载JDK</h2><p>查看Linux是否安装了其他版本的JDK，如果安装了卸载原有JDK。</p>\n<h2 id=\"解压JDK安装\"><a href=\"#解压JDK安装\" class=\"headerlink\" title=\"解压JDK安装\"></a>解压JDK安装</h2><ul>\n<li>去官网下载需要版本的JDk；</li>\n<li>解压JDK文件；</li>\n<li>配置JDK环境变量；</li>\n<li>重启Linux；</li>\n</ul>\n<blockquote>\n<p>本文下载的是 jdk-7u79-linux-x64.tar.gz 包，上传到Linux的任意路径下，比如我上传到/opt/java/路径下</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#cd ../opt/java</span><br><span class=\"line\">#tar xvf  jdk-7u79-linux-x64.tar.gz</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>解压后修改环境变量，修改 /etc/ 下的profile文件，在文件最后添加如下内容</p>\n</blockquote>\n<pre><code>#vi /etc/profile\n#添加内容如下，环境变量路径为安装JDK的路径\nexport JAVA_HOME=/opt/java/jdk1.7.0_79\nexport JRE_HOME=/opt/java/jdk1.7.0_79/jre  \nexport PATH=$PATH:/opt/java/jdk1.7.0_79/bin  \nexport CLASSPATH=./:/opt/java/jdk1.7.0_79/lib:/opt/java/jdk1.7.0_79/jre/lib  \n</code></pre><blockquote>\n<p>重启Linux系统，然后java -verson查看JDK版本</p>\n</blockquote>\n<pre><code>[root@localhost java]# java -version\njava version &quot;1.7.0_79&quot;\nJava(TM) SE Runtime Environment (build 1.7.0_79-b15)\nJava HotSpot(TM) 64-Bit Server VM (build 24.79-b02, mixed mode)\n</code></pre>","site":{"data":{}},"excerpt":"<p>Linux安装JDK是开发中部署中必要知识，在此做下记录。</p>","more":"<p>Linux安装JDK是开发中部署中必要知识，在此做下记录。</p>\n<h2 id=\"卸载JDK\"><a href=\"#卸载JDK\" class=\"headerlink\" title=\"卸载JDK\"></a>卸载JDK</h2><p>查看Linux是否安装了其他版本的JDK，如果安装了卸载原有JDK。</p>\n<h2 id=\"解压JDK安装\"><a href=\"#解压JDK安装\" class=\"headerlink\" title=\"解压JDK安装\"></a>解压JDK安装</h2><ul>\n<li>去官网下载需要版本的JDk；</li>\n<li>解压JDK文件；</li>\n<li>配置JDK环境变量；</li>\n<li>重启Linux；</li>\n</ul>\n<blockquote>\n<p>本文下载的是 jdk-7u79-linux-x64.tar.gz 包，上传到Linux的任意路径下，比如我上传到/opt/java/路径下</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#cd ../opt/java</span><br><span class=\"line\">#tar xvf  jdk-7u79-linux-x64.tar.gz</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>解压后修改环境变量，修改 /etc/ 下的profile文件，在文件最后添加如下内容</p>\n</blockquote>\n<pre><code>#vi /etc/profile\n#添加内容如下，环境变量路径为安装JDK的路径\nexport JAVA_HOME=/opt/java/jdk1.7.0_79\nexport JRE_HOME=/opt/java/jdk1.7.0_79/jre  \nexport PATH=$PATH:/opt/java/jdk1.7.0_79/bin  \nexport CLASSPATH=./:/opt/java/jdk1.7.0_79/lib:/opt/java/jdk1.7.0_79/jre/lib  \n</code></pre><blockquote>\n<p>重启Linux系统，然后java -verson查看JDK版本</p>\n</blockquote>\n<pre><code>[root@localhost java]# java -version\njava version &quot;1.7.0_79&quot;\nJava(TM) SE Runtime Environment (build 1.7.0_79-b15)\nJava HotSpot(TM) 64-Bit Server VM (build 24.79-b02, mixed mode)\n</code></pre>"},{"title":"Hexo+GitHub+Netlify搭建属于自己的博客网站","url":"build-own-blog","date":"2018-12-16T11:00:00.000Z","playlist":[{"name":"Where are you","artist":"AniFace","url":"//music.163.com/song/media/outer/url?id=453843751.mp3","cover":"//p1.music.126.net/AUfXMljLBgB3PBV731IzRg==/109951162857118370.jpg?param=130y"}],"_content":"\n> **“吾生也有涯，而知也无涯。”**\n\n都说每个做技术的人都应该有一个属于自己的博客网站，但是总是因为种种事情半途而弃，借着刚刚搭建完博客的热情写一下是如何搭建此博客的，其实现在搭建博客很简单，这套博客就是采用 Hexo + Github + Netlify 搭建的静态博客网站。\n\n<!--more-->\n\n> **“吾生也有涯，而知也无涯。”**\n\n都说每个做技术的人都应该有一个属于自己的博客网站，但是总是因为种种事情半途而弃，借着刚刚搭建完博客的热情写一下是如何搭建此博客的，其实现在搭建博客很简单，这套博客就是采用 Hexo + Github + Netlify 搭建的静态博客网站。\n\n博客运行流程本地运行Hexo程序创建文章、程序修改等，将修改后的代码提交到GitHub，然后通过Netlify自动获取GitHub上的更新、部署、发布，这样就形成了一套自动更新部署发布的静态博客网站，下面让我一起来看一下是如何实现的。\n\n## Hexo\n\nHexo 是一个快速、简洁且高效的博客框架。Hexo 使用 [Markdown](http://daringfireball.net/projects/markdown/)（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。\n\n## 安装\n\n安装 Hexo 相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序，这里默认你会使用Git，如果不会请看[廖雪峰老师的Git教程](https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)：\n- [Node.js](https://nodejs.org/en/)，安装请参考文章[Nodejs安装](http://www.runoob.com/nodejs/nodejs-install-setup.html)\n- [Git](https://git-scm.com/)，安装请参考[Git安装](https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137396287703354d8c6c01c904c7d9ff056ae23da865a000)\n\n### 验证程序\n\nNode.js验证：Windows系统打开cmd，然后输入`node -v`查看是否显示版本号，显示即表示安装成功，Mac和Linux则打开命令窗口同样验证即可。\nGit验证：Windows系统在桌面右键看是否有Git bash here即可，打开后输入git验证，Mac和Linux则打开命令窗口输入git验证。\n\n### 安装Hexo\n\n如果您的电脑中已经安装上述必备程序，那么恭喜您！接下来只需要使用 npm 即可完成 Hexo 的安装。\n\n``` bash\n$ npm install -g hexo-cli\n```\n\n安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。`<folder>`就是你要将程序安装在所在文件夹的位置。\n\n``` bash\n$ hexo init <folder>\n$ cd <folder>\n$ npm install\n```\n\n新建完成后，指定文件夹的目录如下：\n\n``` folder\n.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n\n然后在指定的`<folder>`文件内执行`hexo server`命令，然后访问 `http://localhost:4000/` 即可访问本地已经部署好的Hexo网站。\n\n``` bash\n$ hexo server\nINFO  Start processing\nINFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.\n```\n\n## Hexo配置及使用\n\n### 配置\n\n在指定的`<folder>`文件内找到`_config.yml`配置文件，Hexo的配置都在`_config.yml`文件内，大部分说明可以查看官网[Hexo配置](https://hexo.io/zh-cn/docs/configuration)，如下配置可根据需要自行更改。\n\n\n#### 网站\n\n|配置|说明|\n|----|----|\n|title|网站标题|\n|subtitle|网站副标题|\n|description|网站描述|\n|author|你的名字|\n|language|网站使用的语言，中文：zh-Hans|\n\n其中，description主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。author参数用于主题显示文章的作者。\n\n#### 网址\n\n|参数|描述|默认值|\n|----|----|----|\n|url|网址||\n|root|网站根目录||\n|permalink|文章的 永久链接|格式\t:year/:month/:day/:title/|\n\n网站存放在子目录\n如果您的网站存放在子目录中，例如 `http://yoursite.com/blog`，则请将您的 `url` 设为 `http://yoursite.com/blog` 并把 `root` 设为 `/blog/`。\n\n#### 扩展\n\n|配置|说明|\n|----|----|\n|theme|当前主题名称。值为false时禁用主题|\n|deploy|部署部分的设置|\n\n`theme`参数后期修改模板会用到，自己设置模板修改成对应参数。\n\n### 使用\n\n配置结束后让开始创建一片文章，使用命令`hexo new [layout] <title>`。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。`hexo generate`命令在`<folder>/public`文件夹下生成静态文件，该命令可以简写为`hexo g`。发表草稿命令`hexo publish [layout] <filename>`。\n\n``` bash\n# 创建文件\nhexo new HelloHexo\n# 生成静态文件\n$ hexo generate\n# 发布文件\n$ hexo publish HelloHexo\n# 启动服务\n$ hexo server\n```\n\n启动服务后即可在`<folder>/source/_posts`文件下看到生成的`HelloHexo.md`文件，可以修改后即可刷新`http://localhost:4000/`查看最新内容，更多使用参考[官网标签使用](https://hexo.io/zh-cn/docs/commands)。\n\n## 上传GitHub\n\n在托管给GitHub之前先做一些准备工作，在`<folder>`文件下执行`git init`对git进行初始化，将对不需要上传的文件放入`.gitignore`文件中，使用命令`echo \"/public\" >> .gitignore`屏蔽public文件夹，然后提交所有文件。\n\n``` bash\n# git 初始化\ngit init\n# 屏蔽 public文件夹\necho \"/public\" >> .gitignore\n# 添加到仓库\ngit add .\n# 提交文件\ngit commit -m \"install hexo project\"\n```\n\nGitHub上创建远程仓库，选项都是默认即可。然后将`<folder>`文件夹与远程仓库绑定，绑定后提交文件到远程仓库。\n\n``` bash\n# 绑定远程仓库，<your repo url>是指你远程仓库的ssh地址或者https地址\ngit remote add origin <your repo url>\n# 提交到远程仓库\ngit push origin master\n```\n\n## Netlify托管\n\n什么是Netlify？Netlify是一家国外的静态网站的托管平台，提供免费的https，自动化部署和升级，可以监控GitHub、GitLab或者Bitbucket做到自动更新发布，是不是很赞！这也是为什么现在选择Netlify的原因，至于以后Netlify怎么发展只能再议。\n\n走到现在就差最后一步，是不是有点小激动，接下来让我们[Netlify](https://www.netlify.com/)`https://www.netlify.com/`的官网，然后点击右上角Sign up注册账号，选择GitHub关联登录。\n\n![Netlify Sign up](/images/netlify_signup.png)\n\n注册后点击创建新站点，选择GitHub会有提示框进行认证。\n\n![Create a new site](/images/create_new_site.png)\n\n选择上传到远程仓库的hexo项目文件，然后进行关联。\n\n![continue paoject](/images/continue_project.png)\n\n最后发布项目，这个时候点击deploy site按键，万事具备可以嗑会瓜子喝点茶水然后回来看一下应该就部署成功了。\n\n![deploy site](/images/deploy_site.png)\n\n部署成功后即可生成一个`https://xxx.netlify.com`带有netlify的域名，这时候访问域名就可以看到一个属于自己的博客网站了，是不是激动的跳了起来。随机生成的二级域名是一串随机的字母数字，如果不喜欢可以自己设置二级域名或者选择配置自己拥有的域名。\n\n## 修改域名\n\n### 修改随机生成域名\n\n下面教你怎么修改`https://xxx.netlify.com`域名为你想要的免费域名，点击`setting`然后点击`change site name`初见弹出框，即可将`xxx`修改成想象中的名称。是不是很完美，没有问题就可以开始自己的博客之旅了！如果还想追求完美那么接着往下看。\n\n![change site name](/images/change_site_name.png)\n\n### 修改为自己的域名\n\n很多朋友不想用带有netlify名称的域名，所以也可以像域名改为自己购买的域名，首先你要有一个域名并且已经备案，然后查看就可以进行下面操作了。\n\n#### 域名解析\n\n首先对域名进行解析，添加两条解析记录，一条A记录，一条CNAME记录。A记录的记录值IP是你`https://xxx.netlify.com`域名对应的ip，CNAME记录的记录值是`https://xxx.netlify.com`的`xxx.netlify.com`值，添加完解析后就可将你的域名绑定到Netlify了。\n\n![domain deal](/images/domain_deal.png)\n\n## 绑定域名\n\n点击第二步：\n\n![custom domain](/images/custom_domain.png)\n\n输入域名后验证：\n\n![add domain](/images/add_domain.png)\n\n添加成功后即可用自身域名进行访问：\n\n![domain_success_own](/images/domain_success_own.png)\n\n是不是很完美了，这个时候访问你的域名即可访问到属于自己的博客网站，恨不得现在就让全宇宙之后你的博客已经建成！下面还有一步就是添加https。\n\n## 添加HTTPS\n\n`Netlify` 使用的是 `Let’s Encrypt Certificate.`的免费证书，自行按着步骤添加即可，我这里因为域名都是腾讯注册的，所以也附赠了ssl，不用白不用，现在教你如何添加自己的ssl证书。\n\n首先下载自己的证书，会看到证书里有一个Apache的文件夹，里面有三个文件，结构如下：\n\n``` folder\n.\n├── 1_root_bundle.crt\n├── 2_hhwen.cn.crt\n└── 3_hhwen.cn.key\n```\n\n分别打开三个文件填入复制到下面的内容框中保存即可：\n\n![add sll](/images/add_ssl.png)\n\n## 模板修改\n\n完美的博客之旅到这里是不是就是结束了，每一个拥有自己博客的程序猿都想有一个与众不同的页面风格，这里可以参考[官网的主题](https://hexo.io/themes/)进行修改，本博客使用的是[GODBMW博主的BMW主题](https://godbmw.com/passages/2018-11-15-theme-bmw-docs-zh/)主题，喜欢的也可以关注，这里就由你们自己发挥我就不多介绍了。\n修改主题后记得去`_config.yml`中修改`themes`参数！\n\n\n## 总结\n\n到这里已经结束了搭建博客之旅，但是我知道你还在兴奋当中，如果喜欢请收藏我的博客，写作当真不易比我搭建博客还要累。\n\n这算是搭建此博客写的第一篇博客，写博客需要静下来把做过的事情再捋一遍一步一步进行拆解，也让自己更加深刻，也希望每一个搭建了自己博客朋友善待自己的博客不要冷落。\n\n如果大家有疑问可以留言评论，感谢支持。\n\n**打卡：2018-12-17 01:33**\n","source":"_posts/Hexo+GitHub+Netlify搭建属于自己的博客网站.md","raw":"---\ntitle: 'Hexo+GitHub+Netlify搭建属于自己的博客网站'\nurl: 'build-own-blog'\ndate: 2018-12-16 19:00:00\ntags: 博客搭建\ncategories: 博客\nplaylist:\n  -\n    name: Where are you\n    artist: AniFace\n    url: \"//music.163.com/song/media/outer/url?id=453843751.mp3\"\n    cover: \"//p1.music.126.net/AUfXMljLBgB3PBV731IzRg==/109951162857118370.jpg?param=130y\"\n\n---\n\n> **“吾生也有涯，而知也无涯。”**\n\n都说每个做技术的人都应该有一个属于自己的博客网站，但是总是因为种种事情半途而弃，借着刚刚搭建完博客的热情写一下是如何搭建此博客的，其实现在搭建博客很简单，这套博客就是采用 Hexo + Github + Netlify 搭建的静态博客网站。\n\n<!--more-->\n\n> **“吾生也有涯，而知也无涯。”**\n\n都说每个做技术的人都应该有一个属于自己的博客网站，但是总是因为种种事情半途而弃，借着刚刚搭建完博客的热情写一下是如何搭建此博客的，其实现在搭建博客很简单，这套博客就是采用 Hexo + Github + Netlify 搭建的静态博客网站。\n\n博客运行流程本地运行Hexo程序创建文章、程序修改等，将修改后的代码提交到GitHub，然后通过Netlify自动获取GitHub上的更新、部署、发布，这样就形成了一套自动更新部署发布的静态博客网站，下面让我一起来看一下是如何实现的。\n\n## Hexo\n\nHexo 是一个快速、简洁且高效的博客框架。Hexo 使用 [Markdown](http://daringfireball.net/projects/markdown/)（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。\n\n## 安装\n\n安装 Hexo 相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序，这里默认你会使用Git，如果不会请看[廖雪峰老师的Git教程](https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)：\n- [Node.js](https://nodejs.org/en/)，安装请参考文章[Nodejs安装](http://www.runoob.com/nodejs/nodejs-install-setup.html)\n- [Git](https://git-scm.com/)，安装请参考[Git安装](https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137396287703354d8c6c01c904c7d9ff056ae23da865a000)\n\n### 验证程序\n\nNode.js验证：Windows系统打开cmd，然后输入`node -v`查看是否显示版本号，显示即表示安装成功，Mac和Linux则打开命令窗口同样验证即可。\nGit验证：Windows系统在桌面右键看是否有Git bash here即可，打开后输入git验证，Mac和Linux则打开命令窗口输入git验证。\n\n### 安装Hexo\n\n如果您的电脑中已经安装上述必备程序，那么恭喜您！接下来只需要使用 npm 即可完成 Hexo 的安装。\n\n``` bash\n$ npm install -g hexo-cli\n```\n\n安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。`<folder>`就是你要将程序安装在所在文件夹的位置。\n\n``` bash\n$ hexo init <folder>\n$ cd <folder>\n$ npm install\n```\n\n新建完成后，指定文件夹的目录如下：\n\n``` folder\n.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n\n然后在指定的`<folder>`文件内执行`hexo server`命令，然后访问 `http://localhost:4000/` 即可访问本地已经部署好的Hexo网站。\n\n``` bash\n$ hexo server\nINFO  Start processing\nINFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.\n```\n\n## Hexo配置及使用\n\n### 配置\n\n在指定的`<folder>`文件内找到`_config.yml`配置文件，Hexo的配置都在`_config.yml`文件内，大部分说明可以查看官网[Hexo配置](https://hexo.io/zh-cn/docs/configuration)，如下配置可根据需要自行更改。\n\n\n#### 网站\n\n|配置|说明|\n|----|----|\n|title|网站标题|\n|subtitle|网站副标题|\n|description|网站描述|\n|author|你的名字|\n|language|网站使用的语言，中文：zh-Hans|\n\n其中，description主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。author参数用于主题显示文章的作者。\n\n#### 网址\n\n|参数|描述|默认值|\n|----|----|----|\n|url|网址||\n|root|网站根目录||\n|permalink|文章的 永久链接|格式\t:year/:month/:day/:title/|\n\n网站存放在子目录\n如果您的网站存放在子目录中，例如 `http://yoursite.com/blog`，则请将您的 `url` 设为 `http://yoursite.com/blog` 并把 `root` 设为 `/blog/`。\n\n#### 扩展\n\n|配置|说明|\n|----|----|\n|theme|当前主题名称。值为false时禁用主题|\n|deploy|部署部分的设置|\n\n`theme`参数后期修改模板会用到，自己设置模板修改成对应参数。\n\n### 使用\n\n配置结束后让开始创建一片文章，使用命令`hexo new [layout] <title>`。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。`hexo generate`命令在`<folder>/public`文件夹下生成静态文件，该命令可以简写为`hexo g`。发表草稿命令`hexo publish [layout] <filename>`。\n\n``` bash\n# 创建文件\nhexo new HelloHexo\n# 生成静态文件\n$ hexo generate\n# 发布文件\n$ hexo publish HelloHexo\n# 启动服务\n$ hexo server\n```\n\n启动服务后即可在`<folder>/source/_posts`文件下看到生成的`HelloHexo.md`文件，可以修改后即可刷新`http://localhost:4000/`查看最新内容，更多使用参考[官网标签使用](https://hexo.io/zh-cn/docs/commands)。\n\n## 上传GitHub\n\n在托管给GitHub之前先做一些准备工作，在`<folder>`文件下执行`git init`对git进行初始化，将对不需要上传的文件放入`.gitignore`文件中，使用命令`echo \"/public\" >> .gitignore`屏蔽public文件夹，然后提交所有文件。\n\n``` bash\n# git 初始化\ngit init\n# 屏蔽 public文件夹\necho \"/public\" >> .gitignore\n# 添加到仓库\ngit add .\n# 提交文件\ngit commit -m \"install hexo project\"\n```\n\nGitHub上创建远程仓库，选项都是默认即可。然后将`<folder>`文件夹与远程仓库绑定，绑定后提交文件到远程仓库。\n\n``` bash\n# 绑定远程仓库，<your repo url>是指你远程仓库的ssh地址或者https地址\ngit remote add origin <your repo url>\n# 提交到远程仓库\ngit push origin master\n```\n\n## Netlify托管\n\n什么是Netlify？Netlify是一家国外的静态网站的托管平台，提供免费的https，自动化部署和升级，可以监控GitHub、GitLab或者Bitbucket做到自动更新发布，是不是很赞！这也是为什么现在选择Netlify的原因，至于以后Netlify怎么发展只能再议。\n\n走到现在就差最后一步，是不是有点小激动，接下来让我们[Netlify](https://www.netlify.com/)`https://www.netlify.com/`的官网，然后点击右上角Sign up注册账号，选择GitHub关联登录。\n\n![Netlify Sign up](/images/netlify_signup.png)\n\n注册后点击创建新站点，选择GitHub会有提示框进行认证。\n\n![Create a new site](/images/create_new_site.png)\n\n选择上传到远程仓库的hexo项目文件，然后进行关联。\n\n![continue paoject](/images/continue_project.png)\n\n最后发布项目，这个时候点击deploy site按键，万事具备可以嗑会瓜子喝点茶水然后回来看一下应该就部署成功了。\n\n![deploy site](/images/deploy_site.png)\n\n部署成功后即可生成一个`https://xxx.netlify.com`带有netlify的域名，这时候访问域名就可以看到一个属于自己的博客网站了，是不是激动的跳了起来。随机生成的二级域名是一串随机的字母数字，如果不喜欢可以自己设置二级域名或者选择配置自己拥有的域名。\n\n## 修改域名\n\n### 修改随机生成域名\n\n下面教你怎么修改`https://xxx.netlify.com`域名为你想要的免费域名，点击`setting`然后点击`change site name`初见弹出框，即可将`xxx`修改成想象中的名称。是不是很完美，没有问题就可以开始自己的博客之旅了！如果还想追求完美那么接着往下看。\n\n![change site name](/images/change_site_name.png)\n\n### 修改为自己的域名\n\n很多朋友不想用带有netlify名称的域名，所以也可以像域名改为自己购买的域名，首先你要有一个域名并且已经备案，然后查看就可以进行下面操作了。\n\n#### 域名解析\n\n首先对域名进行解析，添加两条解析记录，一条A记录，一条CNAME记录。A记录的记录值IP是你`https://xxx.netlify.com`域名对应的ip，CNAME记录的记录值是`https://xxx.netlify.com`的`xxx.netlify.com`值，添加完解析后就可将你的域名绑定到Netlify了。\n\n![domain deal](/images/domain_deal.png)\n\n## 绑定域名\n\n点击第二步：\n\n![custom domain](/images/custom_domain.png)\n\n输入域名后验证：\n\n![add domain](/images/add_domain.png)\n\n添加成功后即可用自身域名进行访问：\n\n![domain_success_own](/images/domain_success_own.png)\n\n是不是很完美了，这个时候访问你的域名即可访问到属于自己的博客网站，恨不得现在就让全宇宙之后你的博客已经建成！下面还有一步就是添加https。\n\n## 添加HTTPS\n\n`Netlify` 使用的是 `Let’s Encrypt Certificate.`的免费证书，自行按着步骤添加即可，我这里因为域名都是腾讯注册的，所以也附赠了ssl，不用白不用，现在教你如何添加自己的ssl证书。\n\n首先下载自己的证书，会看到证书里有一个Apache的文件夹，里面有三个文件，结构如下：\n\n``` folder\n.\n├── 1_root_bundle.crt\n├── 2_hhwen.cn.crt\n└── 3_hhwen.cn.key\n```\n\n分别打开三个文件填入复制到下面的内容框中保存即可：\n\n![add sll](/images/add_ssl.png)\n\n## 模板修改\n\n完美的博客之旅到这里是不是就是结束了，每一个拥有自己博客的程序猿都想有一个与众不同的页面风格，这里可以参考[官网的主题](https://hexo.io/themes/)进行修改，本博客使用的是[GODBMW博主的BMW主题](https://godbmw.com/passages/2018-11-15-theme-bmw-docs-zh/)主题，喜欢的也可以关注，这里就由你们自己发挥我就不多介绍了。\n修改主题后记得去`_config.yml`中修改`themes`参数！\n\n\n## 总结\n\n到这里已经结束了搭建博客之旅，但是我知道你还在兴奋当中，如果喜欢请收藏我的博客，写作当真不易比我搭建博客还要累。\n\n这算是搭建此博客写的第一篇博客，写博客需要静下来把做过的事情再捋一遍一步一步进行拆解，也让自己更加深刻，也希望每一个搭建了自己博客朋友善待自己的博客不要冷落。\n\n如果大家有疑问可以留言评论，感谢支持。\n\n**打卡：2018-12-17 01:33**\n","slug":"Hexo+GitHub+Netlify搭建属于自己的博客网站","published":1,"updated":"2018-12-17T02:49:04.196Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjpwe2pkd000etoqu3urrgu6v","content":"<blockquote>\n<p><strong>“吾生也有涯，而知也无涯。”</strong></p>\n</blockquote>\n<p>都说每个做技术的人都应该有一个属于自己的博客网站，但是总是因为种种事情半途而弃，借着刚刚搭建完博客的热情写一下是如何搭建此博客的，其实现在搭建博客很简单，这套博客就是采用 Hexo + Github + Netlify 搭建的静态博客网站。</p>\n<a id=\"more\"></a>\n<blockquote>\n<p><strong>“吾生也有涯，而知也无涯。”</strong></p>\n</blockquote>\n<p>都说每个做技术的人都应该有一个属于自己的博客网站，但是总是因为种种事情半途而弃，借着刚刚搭建完博客的热情写一下是如何搭建此博客的，其实现在搭建博客很简单，这套博客就是采用 Hexo + Github + Netlify 搭建的静态博客网站。</p>\n<p>博客运行流程本地运行Hexo程序创建文章、程序修改等，将修改后的代码提交到GitHub，然后通过Netlify自动获取GitHub上的更新、部署、发布，这样就形成了一套自动更新部署发布的静态博客网站，下面让我一起来看一下是如何实现的。</p>\n<h2 id=\"Hexo\"><a href=\"#Hexo\" class=\"headerlink\" title=\"Hexo\"></a>Hexo</h2><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href=\"http://daringfireball.net/projects/markdown/\" target=\"_blank\" rel=\"noopener\">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>安装 Hexo 相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序，这里默认你会使用Git，如果不会请看<a href=\"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\" target=\"_blank\" rel=\"noopener\">廖雪峰老师的Git教程</a>：</p>\n<ul>\n<li><a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">Node.js</a>，安装请参考文章<a href=\"http://www.runoob.com/nodejs/nodejs-install-setup.html\" target=\"_blank\" rel=\"noopener\">Nodejs安装</a></li>\n<li><a href=\"https://git-scm.com/\" target=\"_blank\" rel=\"noopener\">Git</a>，安装请参考<a href=\"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137396287703354d8c6c01c904c7d9ff056ae23da865a000\" target=\"_blank\" rel=\"noopener\">Git安装</a></li>\n</ul>\n<h3 id=\"验证程序\"><a href=\"#验证程序\" class=\"headerlink\" title=\"验证程序\"></a>验证程序</h3><p>Node.js验证：Windows系统打开cmd，然后输入<code>node -v</code>查看是否显示版本号，显示即表示安装成功，Mac和Linux则打开命令窗口同样验证即可。<br>Git验证：Windows系统在桌面右键看是否有Git bash here即可，打开后输入git验证，Mac和Linux则打开命令窗口输入git验证。</p>\n<h3 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h3><p>如果您的电脑中已经安装上述必备程序，那么恭喜您！接下来只需要使用 npm 即可完成 Hexo 的安装。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。<code>&lt;folder&gt;</code>就是你要将程序安装在所在文件夹的位置。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo init &lt;folder&gt;</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> &lt;folder&gt;</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n<p>新建完成后，指定文件夹的目录如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── scaffolds</span><br><span class=\"line\">├── source</span><br><span class=\"line\">|   ├── _drafts</span><br><span class=\"line\">|   └── _posts</span><br><span class=\"line\">└── themes</span><br></pre></td></tr></table></figure>\n<p>然后在指定的<code>&lt;folder&gt;</code>文件内执行<code>hexo server</code>命令，然后访问 <code>http://localhost:4000/</code> 即可访问本地已经部署好的Hexo网站。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br><span class=\"line\">INFO  Start processing</span><br><span class=\"line\">INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure>\n<h2 id=\"Hexo配置及使用\"><a href=\"#Hexo配置及使用\" class=\"headerlink\" title=\"Hexo配置及使用\"></a>Hexo配置及使用</h2><h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p>在指定的<code>&lt;folder&gt;</code>文件内找到<code>_config.yml</code>配置文件，Hexo的配置都在<code>_config.yml</code>文件内，大部分说明可以查看官网<a href=\"https://hexo.io/zh-cn/docs/configuration\" target=\"_blank\" rel=\"noopener\">Hexo配置</a>，如下配置可根据需要自行更改。</p>\n<h4 id=\"网站\"><a href=\"#网站\" class=\"headerlink\" title=\"网站\"></a>网站</h4><table>\n<thead>\n<tr>\n<th>配置</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>title</td>\n<td>网站标题</td>\n</tr>\n<tr>\n<td>subtitle</td>\n<td>网站副标题</td>\n</tr>\n<tr>\n<td>description</td>\n<td>网站描述</td>\n</tr>\n<tr>\n<td>author</td>\n<td>你的名字</td>\n</tr>\n<tr>\n<td>language</td>\n<td>网站使用的语言，中文：zh-Hans</td>\n</tr>\n</tbody>\n</table>\n<p>其中，description主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。author参数用于主题显示文章的作者。</p>\n<h4 id=\"网址\"><a href=\"#网址\" class=\"headerlink\" title=\"网址\"></a>网址</h4><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>url</td>\n<td>网址</td>\n<td></td>\n</tr>\n<tr>\n<td>root</td>\n<td>网站根目录</td>\n<td></td>\n</tr>\n<tr>\n<td>permalink</td>\n<td>文章的 永久链接</td>\n<td>格式    :year/:month/:day/:title/</td>\n</tr>\n</tbody>\n</table>\n<p>网站存放在子目录<br>如果您的网站存放在子目录中，例如 <code>http://yoursite.com/blog</code>，则请将您的 <code>url</code> 设为 <code>http://yoursite.com/blog</code> 并把 <code>root</code> 设为 <code>/blog/</code>。</p>\n<h4 id=\"扩展\"><a href=\"#扩展\" class=\"headerlink\" title=\"扩展\"></a>扩展</h4><table>\n<thead>\n<tr>\n<th>配置</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>theme</td>\n<td>当前主题名称。值为false时禁用主题</td>\n</tr>\n<tr>\n<td>deploy</td>\n<td>部署部分的设置</td>\n</tr>\n</tbody>\n</table>\n<p><code>theme</code>参数后期修改模板会用到，自己设置模板修改成对应参数。</p>\n<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><p>配置结束后让开始创建一片文章，使用命令<code>hexo new [layout] &lt;title&gt;</code>。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。<code>hexo generate</code>命令在<code>&lt;folder&gt;/public</code>文件夹下生成静态文件，该命令可以简写为<code>hexo g</code>。发表草稿命令<code>hexo publish [layout] &lt;filename&gt;</code>。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建文件</span></span><br><span class=\"line\">hexo new HelloHexo</span><br><span class=\"line\"><span class=\"comment\"># 生成静态文件</span></span><br><span class=\"line\">$ hexo generate</span><br><span class=\"line\"><span class=\"comment\"># 发布文件</span></span><br><span class=\"line\">$ hexo publish HelloHexo</span><br><span class=\"line\"><span class=\"comment\"># 启动服务</span></span><br><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>启动服务后即可在<code>&lt;folder&gt;/source/_posts</code>文件下看到生成的<code>HelloHexo.md</code>文件，可以修改后即可刷新<code>http://localhost:4000/</code>查看最新内容，更多使用参考<a href=\"https://hexo.io/zh-cn/docs/commands\" target=\"_blank\" rel=\"noopener\">官网标签使用</a>。</p>\n<h2 id=\"上传GitHub\"><a href=\"#上传GitHub\" class=\"headerlink\" title=\"上传GitHub\"></a>上传GitHub</h2><p>在托管给GitHub之前先做一些准备工作，在<code>&lt;folder&gt;</code>文件下执行<code>git init</code>对git进行初始化，将对不需要上传的文件放入<code>.gitignore</code>文件中，使用命令<code>echo &quot;/public&quot; &gt;&gt; .gitignore</code>屏蔽public文件夹，然后提交所有文件。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># git 初始化</span></span><br><span class=\"line\">git init</span><br><span class=\"line\"><span class=\"comment\"># 屏蔽 public文件夹</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"/public\"</span> &gt;&gt; .gitignore</span><br><span class=\"line\"><span class=\"comment\"># 添加到仓库</span></span><br><span class=\"line\">git add .</span><br><span class=\"line\"><span class=\"comment\"># 提交文件</span></span><br><span class=\"line\">git commit -m <span class=\"string\">\"install hexo project\"</span></span><br></pre></td></tr></table></figure>\n<p>GitHub上创建远程仓库，选项都是默认即可。然后将<code>&lt;folder&gt;</code>文件夹与远程仓库绑定，绑定后提交文件到远程仓库。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 绑定远程仓库，&lt;your repo url&gt;是指你远程仓库的ssh地址或者https地址</span></span><br><span class=\"line\">git remote add origin &lt;your repo url&gt;</span><br><span class=\"line\"><span class=\"comment\"># 提交到远程仓库</span></span><br><span class=\"line\">git push origin master</span><br></pre></td></tr></table></figure>\n<h2 id=\"Netlify托管\"><a href=\"#Netlify托管\" class=\"headerlink\" title=\"Netlify托管\"></a>Netlify托管</h2><p>什么是Netlify？Netlify是一家国外的静态网站的托管平台，提供免费的https，自动化部署和升级，可以监控GitHub、GitLab或者Bitbucket做到自动更新发布，是不是很赞！这也是为什么现在选择Netlify的原因，至于以后Netlify怎么发展只能再议。</p>\n<p>走到现在就差最后一步，是不是有点小激动，接下来让我们<a href=\"https://www.netlify.com/\" target=\"_blank\" rel=\"noopener\">Netlify</a><code>https://www.netlify.com/</code>的官网，然后点击右上角Sign up注册账号，选择GitHub关联登录。</p>\n<p><img src=\"/images/netlify_signup.png\" alt=\"Netlify Sign up\"></p>\n<p>注册后点击创建新站点，选择GitHub会有提示框进行认证。</p>\n<p><img src=\"/images/create_new_site.png\" alt=\"Create a new site\"></p>\n<p>选择上传到远程仓库的hexo项目文件，然后进行关联。</p>\n<p><img src=\"/images/continue_project.png\" alt=\"continue paoject\"></p>\n<p>最后发布项目，这个时候点击deploy site按键，万事具备可以嗑会瓜子喝点茶水然后回来看一下应该就部署成功了。</p>\n<p><img src=\"/images/deploy_site.png\" alt=\"deploy site\"></p>\n<p>部署成功后即可生成一个<code>https://xxx.netlify.com</code>带有netlify的域名，这时候访问域名就可以看到一个属于自己的博客网站了，是不是激动的跳了起来。随机生成的二级域名是一串随机的字母数字，如果不喜欢可以自己设置二级域名或者选择配置自己拥有的域名。</p>\n<h2 id=\"修改域名\"><a href=\"#修改域名\" class=\"headerlink\" title=\"修改域名\"></a>修改域名</h2><h3 id=\"修改随机生成域名\"><a href=\"#修改随机生成域名\" class=\"headerlink\" title=\"修改随机生成域名\"></a>修改随机生成域名</h3><p>下面教你怎么修改<code>https://xxx.netlify.com</code>域名为你想要的免费域名，点击<code>setting</code>然后点击<code>change site name</code>初见弹出框，即可将<code>xxx</code>修改成想象中的名称。是不是很完美，没有问题就可以开始自己的博客之旅了！如果还想追求完美那么接着往下看。</p>\n<p><img src=\"/images/change_site_name.png\" alt=\"change site name\"></p>\n<h3 id=\"修改为自己的域名\"><a href=\"#修改为自己的域名\" class=\"headerlink\" title=\"修改为自己的域名\"></a>修改为自己的域名</h3><p>很多朋友不想用带有netlify名称的域名，所以也可以像域名改为自己购买的域名，首先你要有一个域名并且已经备案，然后查看就可以进行下面操作了。</p>\n<h4 id=\"域名解析\"><a href=\"#域名解析\" class=\"headerlink\" title=\"域名解析\"></a>域名解析</h4><p>首先对域名进行解析，添加两条解析记录，一条A记录，一条CNAME记录。A记录的记录值IP是你<code>https://xxx.netlify.com</code>域名对应的ip，CNAME记录的记录值是<code>https://xxx.netlify.com</code>的<code>xxx.netlify.com</code>值，添加完解析后就可将你的域名绑定到Netlify了。</p>\n<p><img src=\"/images/domain_deal.png\" alt=\"domain deal\"></p>\n<h2 id=\"绑定域名\"><a href=\"#绑定域名\" class=\"headerlink\" title=\"绑定域名\"></a>绑定域名</h2><p>点击第二步：</p>\n<p><img src=\"/images/custom_domain.png\" alt=\"custom domain\"></p>\n<p>输入域名后验证：</p>\n<p><img src=\"/images/add_domain.png\" alt=\"add domain\"></p>\n<p>添加成功后即可用自身域名进行访问：</p>\n<p><img src=\"/images/domain_success_own.png\" alt=\"domain_success_own\"></p>\n<p>是不是很完美了，这个时候访问你的域名即可访问到属于自己的博客网站，恨不得现在就让全宇宙之后你的博客已经建成！下面还有一步就是添加https。</p>\n<h2 id=\"添加HTTPS\"><a href=\"#添加HTTPS\" class=\"headerlink\" title=\"添加HTTPS\"></a>添加HTTPS</h2><p><code>Netlify</code> 使用的是 <code>Let’s Encrypt Certificate.</code>的免费证书，自行按着步骤添加即可，我这里因为域名都是腾讯注册的，所以也附赠了ssl，不用白不用，现在教你如何添加自己的ssl证书。</p>\n<p>首先下载自己的证书，会看到证书里有一个Apache的文件夹，里面有三个文件，结构如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── 1_root_bundle.crt</span><br><span class=\"line\">├── 2_hhwen.cn.crt</span><br><span class=\"line\">└── 3_hhwen.cn.key</span><br></pre></td></tr></table></figure>\n<p>分别打开三个文件填入复制到下面的内容框中保存即可：</p>\n<p><img src=\"/images/add_ssl.png\" alt=\"add sll\"></p>\n<h2 id=\"模板修改\"><a href=\"#模板修改\" class=\"headerlink\" title=\"模板修改\"></a>模板修改</h2><p>完美的博客之旅到这里是不是就是结束了，每一个拥有自己博客的程序猿都想有一个与众不同的页面风格，这里可以参考<a href=\"https://hexo.io/themes/\" target=\"_blank\" rel=\"noopener\">官网的主题</a>进行修改，本博客使用的是<a href=\"https://godbmw.com/passages/2018-11-15-theme-bmw-docs-zh/\" target=\"_blank\" rel=\"noopener\">GODBMW博主的BMW主题</a>主题，喜欢的也可以关注，这里就由你们自己发挥我就不多介绍了。<br>修改主题后记得去<code>_config.yml</code>中修改<code>themes</code>参数！</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>到这里已经结束了搭建博客之旅，但是我知道你还在兴奋当中，如果喜欢请收藏我的博客，写作当真不易比我搭建博客还要累。</p>\n<p>这算是搭建此博客写的第一篇博客，写博客需要静下来把做过的事情再捋一遍一步一步进行拆解，也让自己更加深刻，也希望每一个搭建了自己博客朋友善待自己的博客不要冷落。</p>\n<p>如果大家有疑问可以留言评论，感谢支持。</p>\n<p><strong>打卡：2018-12-17 01:33</strong></p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p><strong>“吾生也有涯，而知也无涯。”</strong></p>\n</blockquote>\n<p>都说每个做技术的人都应该有一个属于自己的博客网站，但是总是因为种种事情半途而弃，借着刚刚搭建完博客的热情写一下是如何搭建此博客的，其实现在搭建博客很简单，这套博客就是采用 Hexo + Github + Netlify 搭建的静态博客网站。</p>","more":"<blockquote>\n<p><strong>“吾生也有涯，而知也无涯。”</strong></p>\n</blockquote>\n<p>都说每个做技术的人都应该有一个属于自己的博客网站，但是总是因为种种事情半途而弃，借着刚刚搭建完博客的热情写一下是如何搭建此博客的，其实现在搭建博客很简单，这套博客就是采用 Hexo + Github + Netlify 搭建的静态博客网站。</p>\n<p>博客运行流程本地运行Hexo程序创建文章、程序修改等，将修改后的代码提交到GitHub，然后通过Netlify自动获取GitHub上的更新、部署、发布，这样就形成了一套自动更新部署发布的静态博客网站，下面让我一起来看一下是如何实现的。</p>\n<h2 id=\"Hexo\"><a href=\"#Hexo\" class=\"headerlink\" title=\"Hexo\"></a>Hexo</h2><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href=\"http://daringfireball.net/projects/markdown/\" target=\"_blank\" rel=\"noopener\">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>安装 Hexo 相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序，这里默认你会使用Git，如果不会请看<a href=\"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\" target=\"_blank\" rel=\"noopener\">廖雪峰老师的Git教程</a>：</p>\n<ul>\n<li><a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">Node.js</a>，安装请参考文章<a href=\"http://www.runoob.com/nodejs/nodejs-install-setup.html\" target=\"_blank\" rel=\"noopener\">Nodejs安装</a></li>\n<li><a href=\"https://git-scm.com/\" target=\"_blank\" rel=\"noopener\">Git</a>，安装请参考<a href=\"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137396287703354d8c6c01c904c7d9ff056ae23da865a000\" target=\"_blank\" rel=\"noopener\">Git安装</a></li>\n</ul>\n<h3 id=\"验证程序\"><a href=\"#验证程序\" class=\"headerlink\" title=\"验证程序\"></a>验证程序</h3><p>Node.js验证：Windows系统打开cmd，然后输入<code>node -v</code>查看是否显示版本号，显示即表示安装成功，Mac和Linux则打开命令窗口同样验证即可。<br>Git验证：Windows系统在桌面右键看是否有Git bash here即可，打开后输入git验证，Mac和Linux则打开命令窗口输入git验证。</p>\n<h3 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h3><p>如果您的电脑中已经安装上述必备程序，那么恭喜您！接下来只需要使用 npm 即可完成 Hexo 的安装。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。<code>&lt;folder&gt;</code>就是你要将程序安装在所在文件夹的位置。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo init &lt;folder&gt;</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> &lt;folder&gt;</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n<p>新建完成后，指定文件夹的目录如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── scaffolds</span><br><span class=\"line\">├── source</span><br><span class=\"line\">|   ├── _drafts</span><br><span class=\"line\">|   └── _posts</span><br><span class=\"line\">└── themes</span><br></pre></td></tr></table></figure>\n<p>然后在指定的<code>&lt;folder&gt;</code>文件内执行<code>hexo server</code>命令，然后访问 <code>http://localhost:4000/</code> 即可访问本地已经部署好的Hexo网站。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br><span class=\"line\">INFO  Start processing</span><br><span class=\"line\">INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure>\n<h2 id=\"Hexo配置及使用\"><a href=\"#Hexo配置及使用\" class=\"headerlink\" title=\"Hexo配置及使用\"></a>Hexo配置及使用</h2><h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p>在指定的<code>&lt;folder&gt;</code>文件内找到<code>_config.yml</code>配置文件，Hexo的配置都在<code>_config.yml</code>文件内，大部分说明可以查看官网<a href=\"https://hexo.io/zh-cn/docs/configuration\" target=\"_blank\" rel=\"noopener\">Hexo配置</a>，如下配置可根据需要自行更改。</p>\n<h4 id=\"网站\"><a href=\"#网站\" class=\"headerlink\" title=\"网站\"></a>网站</h4><table>\n<thead>\n<tr>\n<th>配置</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>title</td>\n<td>网站标题</td>\n</tr>\n<tr>\n<td>subtitle</td>\n<td>网站副标题</td>\n</tr>\n<tr>\n<td>description</td>\n<td>网站描述</td>\n</tr>\n<tr>\n<td>author</td>\n<td>你的名字</td>\n</tr>\n<tr>\n<td>language</td>\n<td>网站使用的语言，中文：zh-Hans</td>\n</tr>\n</tbody>\n</table>\n<p>其中，description主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。author参数用于主题显示文章的作者。</p>\n<h4 id=\"网址\"><a href=\"#网址\" class=\"headerlink\" title=\"网址\"></a>网址</h4><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>url</td>\n<td>网址</td>\n<td></td>\n</tr>\n<tr>\n<td>root</td>\n<td>网站根目录</td>\n<td></td>\n</tr>\n<tr>\n<td>permalink</td>\n<td>文章的 永久链接</td>\n<td>格式    :year/:month/:day/:title/</td>\n</tr>\n</tbody>\n</table>\n<p>网站存放在子目录<br>如果您的网站存放在子目录中，例如 <code>http://yoursite.com/blog</code>，则请将您的 <code>url</code> 设为 <code>http://yoursite.com/blog</code> 并把 <code>root</code> 设为 <code>/blog/</code>。</p>\n<h4 id=\"扩展\"><a href=\"#扩展\" class=\"headerlink\" title=\"扩展\"></a>扩展</h4><table>\n<thead>\n<tr>\n<th>配置</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>theme</td>\n<td>当前主题名称。值为false时禁用主题</td>\n</tr>\n<tr>\n<td>deploy</td>\n<td>部署部分的设置</td>\n</tr>\n</tbody>\n</table>\n<p><code>theme</code>参数后期修改模板会用到，自己设置模板修改成对应参数。</p>\n<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><p>配置结束后让开始创建一片文章，使用命令<code>hexo new [layout] &lt;title&gt;</code>。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。<code>hexo generate</code>命令在<code>&lt;folder&gt;/public</code>文件夹下生成静态文件，该命令可以简写为<code>hexo g</code>。发表草稿命令<code>hexo publish [layout] &lt;filename&gt;</code>。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建文件</span></span><br><span class=\"line\">hexo new HelloHexo</span><br><span class=\"line\"><span class=\"comment\"># 生成静态文件</span></span><br><span class=\"line\">$ hexo generate</span><br><span class=\"line\"><span class=\"comment\"># 发布文件</span></span><br><span class=\"line\">$ hexo publish HelloHexo</span><br><span class=\"line\"><span class=\"comment\"># 启动服务</span></span><br><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>启动服务后即可在<code>&lt;folder&gt;/source/_posts</code>文件下看到生成的<code>HelloHexo.md</code>文件，可以修改后即可刷新<code>http://localhost:4000/</code>查看最新内容，更多使用参考<a href=\"https://hexo.io/zh-cn/docs/commands\" target=\"_blank\" rel=\"noopener\">官网标签使用</a>。</p>\n<h2 id=\"上传GitHub\"><a href=\"#上传GitHub\" class=\"headerlink\" title=\"上传GitHub\"></a>上传GitHub</h2><p>在托管给GitHub之前先做一些准备工作，在<code>&lt;folder&gt;</code>文件下执行<code>git init</code>对git进行初始化，将对不需要上传的文件放入<code>.gitignore</code>文件中，使用命令<code>echo &quot;/public&quot; &gt;&gt; .gitignore</code>屏蔽public文件夹，然后提交所有文件。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># git 初始化</span></span><br><span class=\"line\">git init</span><br><span class=\"line\"><span class=\"comment\"># 屏蔽 public文件夹</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"/public\"</span> &gt;&gt; .gitignore</span><br><span class=\"line\"><span class=\"comment\"># 添加到仓库</span></span><br><span class=\"line\">git add .</span><br><span class=\"line\"><span class=\"comment\"># 提交文件</span></span><br><span class=\"line\">git commit -m <span class=\"string\">\"install hexo project\"</span></span><br></pre></td></tr></table></figure>\n<p>GitHub上创建远程仓库，选项都是默认即可。然后将<code>&lt;folder&gt;</code>文件夹与远程仓库绑定，绑定后提交文件到远程仓库。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 绑定远程仓库，&lt;your repo url&gt;是指你远程仓库的ssh地址或者https地址</span></span><br><span class=\"line\">git remote add origin &lt;your repo url&gt;</span><br><span class=\"line\"><span class=\"comment\"># 提交到远程仓库</span></span><br><span class=\"line\">git push origin master</span><br></pre></td></tr></table></figure>\n<h2 id=\"Netlify托管\"><a href=\"#Netlify托管\" class=\"headerlink\" title=\"Netlify托管\"></a>Netlify托管</h2><p>什么是Netlify？Netlify是一家国外的静态网站的托管平台，提供免费的https，自动化部署和升级，可以监控GitHub、GitLab或者Bitbucket做到自动更新发布，是不是很赞！这也是为什么现在选择Netlify的原因，至于以后Netlify怎么发展只能再议。</p>\n<p>走到现在就差最后一步，是不是有点小激动，接下来让我们<a href=\"https://www.netlify.com/\" target=\"_blank\" rel=\"noopener\">Netlify</a><code>https://www.netlify.com/</code>的官网，然后点击右上角Sign up注册账号，选择GitHub关联登录。</p>\n<p><img src=\"/images/netlify_signup.png\" alt=\"Netlify Sign up\"></p>\n<p>注册后点击创建新站点，选择GitHub会有提示框进行认证。</p>\n<p><img src=\"/images/create_new_site.png\" alt=\"Create a new site\"></p>\n<p>选择上传到远程仓库的hexo项目文件，然后进行关联。</p>\n<p><img src=\"/images/continue_project.png\" alt=\"continue paoject\"></p>\n<p>最后发布项目，这个时候点击deploy site按键，万事具备可以嗑会瓜子喝点茶水然后回来看一下应该就部署成功了。</p>\n<p><img src=\"/images/deploy_site.png\" alt=\"deploy site\"></p>\n<p>部署成功后即可生成一个<code>https://xxx.netlify.com</code>带有netlify的域名，这时候访问域名就可以看到一个属于自己的博客网站了，是不是激动的跳了起来。随机生成的二级域名是一串随机的字母数字，如果不喜欢可以自己设置二级域名或者选择配置自己拥有的域名。</p>\n<h2 id=\"修改域名\"><a href=\"#修改域名\" class=\"headerlink\" title=\"修改域名\"></a>修改域名</h2><h3 id=\"修改随机生成域名\"><a href=\"#修改随机生成域名\" class=\"headerlink\" title=\"修改随机生成域名\"></a>修改随机生成域名</h3><p>下面教你怎么修改<code>https://xxx.netlify.com</code>域名为你想要的免费域名，点击<code>setting</code>然后点击<code>change site name</code>初见弹出框，即可将<code>xxx</code>修改成想象中的名称。是不是很完美，没有问题就可以开始自己的博客之旅了！如果还想追求完美那么接着往下看。</p>\n<p><img src=\"/images/change_site_name.png\" alt=\"change site name\"></p>\n<h3 id=\"修改为自己的域名\"><a href=\"#修改为自己的域名\" class=\"headerlink\" title=\"修改为自己的域名\"></a>修改为自己的域名</h3><p>很多朋友不想用带有netlify名称的域名，所以也可以像域名改为自己购买的域名，首先你要有一个域名并且已经备案，然后查看就可以进行下面操作了。</p>\n<h4 id=\"域名解析\"><a href=\"#域名解析\" class=\"headerlink\" title=\"域名解析\"></a>域名解析</h4><p>首先对域名进行解析，添加两条解析记录，一条A记录，一条CNAME记录。A记录的记录值IP是你<code>https://xxx.netlify.com</code>域名对应的ip，CNAME记录的记录值是<code>https://xxx.netlify.com</code>的<code>xxx.netlify.com</code>值，添加完解析后就可将你的域名绑定到Netlify了。</p>\n<p><img src=\"/images/domain_deal.png\" alt=\"domain deal\"></p>\n<h2 id=\"绑定域名\"><a href=\"#绑定域名\" class=\"headerlink\" title=\"绑定域名\"></a>绑定域名</h2><p>点击第二步：</p>\n<p><img src=\"/images/custom_domain.png\" alt=\"custom domain\"></p>\n<p>输入域名后验证：</p>\n<p><img src=\"/images/add_domain.png\" alt=\"add domain\"></p>\n<p>添加成功后即可用自身域名进行访问：</p>\n<p><img src=\"/images/domain_success_own.png\" alt=\"domain_success_own\"></p>\n<p>是不是很完美了，这个时候访问你的域名即可访问到属于自己的博客网站，恨不得现在就让全宇宙之后你的博客已经建成！下面还有一步就是添加https。</p>\n<h2 id=\"添加HTTPS\"><a href=\"#添加HTTPS\" class=\"headerlink\" title=\"添加HTTPS\"></a>添加HTTPS</h2><p><code>Netlify</code> 使用的是 <code>Let’s Encrypt Certificate.</code>的免费证书，自行按着步骤添加即可，我这里因为域名都是腾讯注册的，所以也附赠了ssl，不用白不用，现在教你如何添加自己的ssl证书。</p>\n<p>首先下载自己的证书，会看到证书里有一个Apache的文件夹，里面有三个文件，结构如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── 1_root_bundle.crt</span><br><span class=\"line\">├── 2_hhwen.cn.crt</span><br><span class=\"line\">└── 3_hhwen.cn.key</span><br></pre></td></tr></table></figure>\n<p>分别打开三个文件填入复制到下面的内容框中保存即可：</p>\n<p><img src=\"/images/add_ssl.png\" alt=\"add sll\"></p>\n<h2 id=\"模板修改\"><a href=\"#模板修改\" class=\"headerlink\" title=\"模板修改\"></a>模板修改</h2><p>完美的博客之旅到这里是不是就是结束了，每一个拥有自己博客的程序猿都想有一个与众不同的页面风格，这里可以参考<a href=\"https://hexo.io/themes/\" target=\"_blank\" rel=\"noopener\">官网的主题</a>进行修改，本博客使用的是<a href=\"https://godbmw.com/passages/2018-11-15-theme-bmw-docs-zh/\" target=\"_blank\" rel=\"noopener\">GODBMW博主的BMW主题</a>主题，喜欢的也可以关注，这里就由你们自己发挥我就不多介绍了。<br>修改主题后记得去<code>_config.yml</code>中修改<code>themes</code>参数！</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>到这里已经结束了搭建博客之旅，但是我知道你还在兴奋当中，如果喜欢请收藏我的博客，写作当真不易比我搭建博客还要累。</p>\n<p>这算是搭建此博客写的第一篇博客，写博客需要静下来把做过的事情再捋一遍一步一步进行拆解，也让自己更加深刻，也希望每一个搭建了自己博客朋友善待自己的博客不要冷落。</p>\n<p>如果大家有疑问可以留言评论，感谢支持。</p>\n<p><strong>打卡：2018-12-17 01:33</strong></p>"},{"title":"Maven将jar倒入本地maven仓库","url":"import-jar-into-local-maven","date":"2018-12-13T14:31:37.000Z","_content":"\n在Java项目开发过程中总会遇到自定义jar包或其他jar不存在maven仓库中，但是因为网络等原因无法更新maven仓库或者无法加载此jar包，那么可以通过下面方法将jar包引入到本地maven仓库中。\n\n<!--more-->\n\n在Java项目开发过程中总会遇到自定义jar包或其他jar不存在maven仓库中，但是因为网络等原因无法更新maven仓库或者无法加载此jar包，那么可以通过下面方法将jar包引入到本地maven仓库中。\n\n## 环境变量配置maven\n\n``` bash\n    # 新建系统变量，保存maven所在位置\n    key=MAVEN_PATH\n    value=E:\\ProgramFiles\\apache-maven-3.2.3\n    # Path 添加上面的 MAVEN_PATH 并指定到bin目录\n    %MAVEN_PATH%\\bin\n    \n    # 验证是否配置成功，cmd中执行 mvn -version\n    C:\\Users\\Administrator>mvn -vesion\n    Apache Maven 3.2.3 (xxxxxxxxxxxxxx; 2014-08-12T04:58:10+08:00)\n    Maven home: E:\\xxxx\\xxxxx\\apache-maven-3.2.3\\bin\\..\n    Java version: 1.8.0_144, vendor: Oracle Corporation\n    Java home: D:\\xxxx\\xxxxx\\Java\\jdk1.8.0_144\\jre\n    Default locale: zh_CN, platform encoding: GBK\n    OS name: \"windows 10\", version: \"10.0\", arch: \"amd64\", family: \"dos\"\n```\n    \n\n## 执行一下命令即可\n\n``` bash\n    # -Dfile 为本地jar包所在的地址\n    # -DgroupId 为pom文件中引的groupId\n    # -DartifactId 为pom文件中引的artifactId\n    # -Dversion 为pom文件中引的version\n    # 引入后pom配置需要和上述的名一致即可\n    mvn install:install-file -Dfile=D:\\myDoc\\private\\private_jars\\javailp-1.2a\\javailp-1.2a.jar -DgroupId=net.sf.javailp -DartifactId=javailp -Dversion=1.2a -Dpackaging=jar\n```\n","source":"_posts/Maven将jar倒入本地maven仓库.md","raw":"---\ntitle: Maven将jar倒入本地maven仓库\nurl: import-jar-into-local-maven\ndate: 2018-12-13 22:31:37\ntags: Maven, jar\ncategories: Java\n---\n\n在Java项目开发过程中总会遇到自定义jar包或其他jar不存在maven仓库中，但是因为网络等原因无法更新maven仓库或者无法加载此jar包，那么可以通过下面方法将jar包引入到本地maven仓库中。\n\n<!--more-->\n\n在Java项目开发过程中总会遇到自定义jar包或其他jar不存在maven仓库中，但是因为网络等原因无法更新maven仓库或者无法加载此jar包，那么可以通过下面方法将jar包引入到本地maven仓库中。\n\n## 环境变量配置maven\n\n``` bash\n    # 新建系统变量，保存maven所在位置\n    key=MAVEN_PATH\n    value=E:\\ProgramFiles\\apache-maven-3.2.3\n    # Path 添加上面的 MAVEN_PATH 并指定到bin目录\n    %MAVEN_PATH%\\bin\n    \n    # 验证是否配置成功，cmd中执行 mvn -version\n    C:\\Users\\Administrator>mvn -vesion\n    Apache Maven 3.2.3 (xxxxxxxxxxxxxx; 2014-08-12T04:58:10+08:00)\n    Maven home: E:\\xxxx\\xxxxx\\apache-maven-3.2.3\\bin\\..\n    Java version: 1.8.0_144, vendor: Oracle Corporation\n    Java home: D:\\xxxx\\xxxxx\\Java\\jdk1.8.0_144\\jre\n    Default locale: zh_CN, platform encoding: GBK\n    OS name: \"windows 10\", version: \"10.0\", arch: \"amd64\", family: \"dos\"\n```\n    \n\n## 执行一下命令即可\n\n``` bash\n    # -Dfile 为本地jar包所在的地址\n    # -DgroupId 为pom文件中引的groupId\n    # -DartifactId 为pom文件中引的artifactId\n    # -Dversion 为pom文件中引的version\n    # 引入后pom配置需要和上述的名一致即可\n    mvn install:install-file -Dfile=D:\\myDoc\\private\\private_jars\\javailp-1.2a\\javailp-1.2a.jar -DgroupId=net.sf.javailp -DartifactId=javailp -Dversion=1.2a -Dpackaging=jar\n```\n","slug":"Maven将jar倒入本地maven仓库","published":1,"updated":"2018-12-17T02:52:33.379Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjpwe2pke000ftoqu2wsvd590","content":"<p>在Java项目开发过程中总会遇到自定义jar包或其他jar不存在maven仓库中，但是因为网络等原因无法更新maven仓库或者无法加载此jar包，那么可以通过下面方法将jar包引入到本地maven仓库中。</p>\n<a id=\"more\"></a>\n<p>在Java项目开发过程中总会遇到自定义jar包或其他jar不存在maven仓库中，但是因为网络等原因无法更新maven仓库或者无法加载此jar包，那么可以通过下面方法将jar包引入到本地maven仓库中。</p>\n<h2 id=\"环境变量配置maven\"><a href=\"#环境变量配置maven\" class=\"headerlink\" title=\"环境变量配置maven\"></a>环境变量配置maven</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 新建系统变量，保存maven所在位置</span></span><br><span class=\"line\">key=MAVEN_PATH</span><br><span class=\"line\">value=E:\\ProgramFiles\\apache-maven-3.2.3</span><br><span class=\"line\"><span class=\"comment\"># Path 添加上面的 MAVEN_PATH 并指定到bin目录</span></span><br><span class=\"line\">%MAVEN_PATH%\\bin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 验证是否配置成功，cmd中执行 mvn -version</span></span><br><span class=\"line\">C:\\Users\\Administrator&gt;mvn -vesion</span><br><span class=\"line\">Apache Maven 3.2.3 (xxxxxxxxxxxxxx; 2014-08-12T04:58:10+08:00)</span><br><span class=\"line\">Maven home: E:\\xxxx\\xxxxx\\apache-maven-3.2.3\\bin\\..</span><br><span class=\"line\">Java version: 1.8.0_144, vendor: Oracle Corporation</span><br><span class=\"line\">Java home: D:\\xxxx\\xxxxx\\Java\\jdk1.8.0_144\\jre</span><br><span class=\"line\">Default locale: zh_CN, platform encoding: GBK</span><br><span class=\"line\">OS name: <span class=\"string\">\"windows 10\"</span>, version: <span class=\"string\">\"10.0\"</span>, arch: <span class=\"string\">\"amd64\"</span>, family: <span class=\"string\">\"dos\"</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"执行一下命令即可\"><a href=\"#执行一下命令即可\" class=\"headerlink\" title=\"执行一下命令即可\"></a>执行一下命令即可</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -Dfile 为本地jar包所在的地址</span></span><br><span class=\"line\"><span class=\"comment\"># -DgroupId 为pom文件中引的groupId</span></span><br><span class=\"line\"><span class=\"comment\"># -DartifactId 为pom文件中引的artifactId</span></span><br><span class=\"line\"><span class=\"comment\"># -Dversion 为pom文件中引的version</span></span><br><span class=\"line\"><span class=\"comment\"># 引入后pom配置需要和上述的名一致即可</span></span><br><span class=\"line\">mvn install:install-file -Dfile=D:\\myDoc\\private\\private_jars\\javailp-1.2a\\javailp-1.2a.jar -DgroupId=net.sf.javailp -DartifactId=javailp -Dversion=1.2a -Dpackaging=jar</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>在Java项目开发过程中总会遇到自定义jar包或其他jar不存在maven仓库中，但是因为网络等原因无法更新maven仓库或者无法加载此jar包，那么可以通过下面方法将jar包引入到本地maven仓库中。</p>","more":"<p>在Java项目开发过程中总会遇到自定义jar包或其他jar不存在maven仓库中，但是因为网络等原因无法更新maven仓库或者无法加载此jar包，那么可以通过下面方法将jar包引入到本地maven仓库中。</p>\n<h2 id=\"环境变量配置maven\"><a href=\"#环境变量配置maven\" class=\"headerlink\" title=\"环境变量配置maven\"></a>环境变量配置maven</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 新建系统变量，保存maven所在位置</span></span><br><span class=\"line\">key=MAVEN_PATH</span><br><span class=\"line\">value=E:\\ProgramFiles\\apache-maven-3.2.3</span><br><span class=\"line\"><span class=\"comment\"># Path 添加上面的 MAVEN_PATH 并指定到bin目录</span></span><br><span class=\"line\">%MAVEN_PATH%\\bin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 验证是否配置成功，cmd中执行 mvn -version</span></span><br><span class=\"line\">C:\\Users\\Administrator&gt;mvn -vesion</span><br><span class=\"line\">Apache Maven 3.2.3 (xxxxxxxxxxxxxx; 2014-08-12T04:58:10+08:00)</span><br><span class=\"line\">Maven home: E:\\xxxx\\xxxxx\\apache-maven-3.2.3\\bin\\..</span><br><span class=\"line\">Java version: 1.8.0_144, vendor: Oracle Corporation</span><br><span class=\"line\">Java home: D:\\xxxx\\xxxxx\\Java\\jdk1.8.0_144\\jre</span><br><span class=\"line\">Default locale: zh_CN, platform encoding: GBK</span><br><span class=\"line\">OS name: <span class=\"string\">\"windows 10\"</span>, version: <span class=\"string\">\"10.0\"</span>, arch: <span class=\"string\">\"amd64\"</span>, family: <span class=\"string\">\"dos\"</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"执行一下命令即可\"><a href=\"#执行一下命令即可\" class=\"headerlink\" title=\"执行一下命令即可\"></a>执行一下命令即可</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -Dfile 为本地jar包所在的地址</span></span><br><span class=\"line\"><span class=\"comment\"># -DgroupId 为pom文件中引的groupId</span></span><br><span class=\"line\"><span class=\"comment\"># -DartifactId 为pom文件中引的artifactId</span></span><br><span class=\"line\"><span class=\"comment\"># -Dversion 为pom文件中引的version</span></span><br><span class=\"line\"><span class=\"comment\"># 引入后pom配置需要和上述的名一致即可</span></span><br><span class=\"line\">mvn install:install-file -Dfile=D:\\myDoc\\private\\private_jars\\javailp-1.2a\\javailp-1.2a.jar -DgroupId=net.sf.javailp -DartifactId=javailp -Dversion=1.2a -Dpackaging=jar</span><br></pre></td></tr></table></figure>"},{"title":"Linux链接网络","url":"linux-connect-net","date":"2018-12-13T14:32:15.000Z","_content":"\nLinux在安装系统结束后总要面临一个主要问题，网络连接。习惯了Windows的图形界面连接网络是轻而易举的事，但是对于Linux命令操作很不容易上手，在此做记录方便后期使用也供大家参考。\n\n<!--more-->\n\nLinux在安装系统结束后总要面临一个主要问题，网络连接。习惯了Windows的图形界面连接网络是轻而易举的事，但是对于Linux命令操作很不容易上手，在此做记录方便后期使用也供大家参考。\n\n## 查看网卡\n\n> 输入命令后，打开网卡所在文件\n\n\n``` bash\n    #/etc/sysconfig/network-scripts/\n    #vi ifcfg-eth0\n    \n    EVICE=eth0\n    HWADDR=6E:D6:7D:EE:4D:93\n    TYPE=Ethernet\n    UUID=08212c73-eb02-4ad7-9969-ed3bc7a352ed\n    ONBOOT=no\n    NM_CONTROLLED=yes\n    BOOTPROTO=dhcp\n```\n\n> HWADDR:Linux的MAC地址\n> ONBOOT=yes:开启网络连接\n> 网卡自动获取IP配置将ONBOOT=no 改为ONBOOT=yes即可\n> 编辑、保存、然后重启网卡\n\n``` bash\n    # service network restart\n```\n\n## 存在多个网卡\n> 如果存在多个网卡会在/etc/sysconfig/network-scripts/ 目录下存在多个ifcfg-eth0文件，如ifcfg-eth1、ifcfg-eth2、ifcfg-eth3等，具体哪个网卡好用需要挨个试探，只保持其中一个网卡的配置为ONBOOT=yes，然后重启网卡。\n\n## 网卡配置静态IP\n> 配置静态IP同样修改好用的网卡，如ifcfg-eth0，具体配置如下\n\n``` bash\n    #/etc/sysconfig/network-scripts/\n    #vi ifcfg-eth0\n    \n    DEVICE=eth0\n    HWADDR=2E:8A:C5:9A:AC:70\n    TYPE=Ethernet\n    UUID=439416c6-5dc9-43e0-b0de-12986a2cc25b\n    #开启自动启用网络连接\n    ONBOOT=yes\n    NM_CONTROLLED=yes\n     #启用静态IP地址\n    BOOTPROTO=static\n    #设置IP地址\n    IPADDR=172.18.15.195\n    #设置子网掩码\n    NETMASK=255.255.224.0\n    #设置网关\n    GATEWAY=172.18.10.1\n    #设置主DNS\n    DNS1=172.18.12.62\n    DNS2=\n    #禁止IPV6\n    IPV6INIT=no\n    USERCTL=no\n```\n\n> 修改后执行下列名重启网卡\n\n``` bash\n    service ip6tables stop   #停止IPV6服务\n    chkconfig ip6tables off  #禁止IPV6开机启动\n    service network restart  #重启网络连接\n```\n    \n## 报错总结\n>  Device eth2 has different MAC address than expected, ignoring.\n> 错误原因：实际Mac地址与网卡内配置的HWADDR地址不同导致，查看正确Mac地址\n\n``` bash\n    #ifconfig -a\n    #HWaddr即为eth0对应的Mac地址，只要找到对应网卡的Mac地址修改对应的网卡文件的HWADDR即可\n    eth0      \n          Link encap:Ethernet  HWaddr 2A:B4:AD:CE:5A:57\n          BROADCAST MULTICAST  MTU:1500  Metric:1\n          RX packets:0 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:1000\n          RX bytes:0 (0.0 b)  TX bytes:0 (0.0 b)\n          Interrupt:35\n```\n\n> 修改后重复上述重启网卡即可\n\n\n\n\n","source":"_posts/Linux链接网络.md","raw":"---\ntitle: Linux链接网络\nurl: linux-connect-net\ndate: 2018-12-13 22:32:15\ntags: 网络\ncategories: Linux\n---\n\nLinux在安装系统结束后总要面临一个主要问题，网络连接。习惯了Windows的图形界面连接网络是轻而易举的事，但是对于Linux命令操作很不容易上手，在此做记录方便后期使用也供大家参考。\n\n<!--more-->\n\nLinux在安装系统结束后总要面临一个主要问题，网络连接。习惯了Windows的图形界面连接网络是轻而易举的事，但是对于Linux命令操作很不容易上手，在此做记录方便后期使用也供大家参考。\n\n## 查看网卡\n\n> 输入命令后，打开网卡所在文件\n\n\n``` bash\n    #/etc/sysconfig/network-scripts/\n    #vi ifcfg-eth0\n    \n    EVICE=eth0\n    HWADDR=6E:D6:7D:EE:4D:93\n    TYPE=Ethernet\n    UUID=08212c73-eb02-4ad7-9969-ed3bc7a352ed\n    ONBOOT=no\n    NM_CONTROLLED=yes\n    BOOTPROTO=dhcp\n```\n\n> HWADDR:Linux的MAC地址\n> ONBOOT=yes:开启网络连接\n> 网卡自动获取IP配置将ONBOOT=no 改为ONBOOT=yes即可\n> 编辑、保存、然后重启网卡\n\n``` bash\n    # service network restart\n```\n\n## 存在多个网卡\n> 如果存在多个网卡会在/etc/sysconfig/network-scripts/ 目录下存在多个ifcfg-eth0文件，如ifcfg-eth1、ifcfg-eth2、ifcfg-eth3等，具体哪个网卡好用需要挨个试探，只保持其中一个网卡的配置为ONBOOT=yes，然后重启网卡。\n\n## 网卡配置静态IP\n> 配置静态IP同样修改好用的网卡，如ifcfg-eth0，具体配置如下\n\n``` bash\n    #/etc/sysconfig/network-scripts/\n    #vi ifcfg-eth0\n    \n    DEVICE=eth0\n    HWADDR=2E:8A:C5:9A:AC:70\n    TYPE=Ethernet\n    UUID=439416c6-5dc9-43e0-b0de-12986a2cc25b\n    #开启自动启用网络连接\n    ONBOOT=yes\n    NM_CONTROLLED=yes\n     #启用静态IP地址\n    BOOTPROTO=static\n    #设置IP地址\n    IPADDR=172.18.15.195\n    #设置子网掩码\n    NETMASK=255.255.224.0\n    #设置网关\n    GATEWAY=172.18.10.1\n    #设置主DNS\n    DNS1=172.18.12.62\n    DNS2=\n    #禁止IPV6\n    IPV6INIT=no\n    USERCTL=no\n```\n\n> 修改后执行下列名重启网卡\n\n``` bash\n    service ip6tables stop   #停止IPV6服务\n    chkconfig ip6tables off  #禁止IPV6开机启动\n    service network restart  #重启网络连接\n```\n    \n## 报错总结\n>  Device eth2 has different MAC address than expected, ignoring.\n> 错误原因：实际Mac地址与网卡内配置的HWADDR地址不同导致，查看正确Mac地址\n\n``` bash\n    #ifconfig -a\n    #HWaddr即为eth0对应的Mac地址，只要找到对应网卡的Mac地址修改对应的网卡文件的HWADDR即可\n    eth0      \n          Link encap:Ethernet  HWaddr 2A:B4:AD:CE:5A:57\n          BROADCAST MULTICAST  MTU:1500  Metric:1\n          RX packets:0 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:1000\n          RX bytes:0 (0.0 b)  TX bytes:0 (0.0 b)\n          Interrupt:35\n```\n\n> 修改后重复上述重启网卡即可\n\n\n\n\n","slug":"Linux链接网络","published":1,"updated":"2018-12-17T02:52:04.066Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjpwe2pkh000ktoquleprugmb","content":"<p>Linux在安装系统结束后总要面临一个主要问题，网络连接。习惯了Windows的图形界面连接网络是轻而易举的事，但是对于Linux命令操作很不容易上手，在此做记录方便后期使用也供大家参考。</p>\n<a id=\"more\"></a>\n<p>Linux在安装系统结束后总要面临一个主要问题，网络连接。习惯了Windows的图形界面连接网络是轻而易举的事，但是对于Linux命令操作很不容易上手，在此做记录方便后期使用也供大家参考。</p>\n<h2 id=\"查看网卡\"><a href=\"#查看网卡\" class=\"headerlink\" title=\"查看网卡\"></a>查看网卡</h2><blockquote>\n<p>输入命令后，打开网卡所在文件</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#/etc/sysconfig/network-scripts/</span></span><br><span class=\"line\"><span class=\"comment\">#vi ifcfg-eth0</span></span><br><span class=\"line\"></span><br><span class=\"line\">EVICE=eth0</span><br><span class=\"line\">HWADDR=6E:D6:7D:EE:4D:93</span><br><span class=\"line\">TYPE=Ethernet</span><br><span class=\"line\">UUID=08212c73-eb02-4ad7-9969-ed3bc7a352ed</span><br><span class=\"line\">ONBOOT=no</span><br><span class=\"line\">NM_CONTROLLED=yes</span><br><span class=\"line\">BOOTPROTO=dhcp</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>HWADDR:Linux的MAC地址<br>ONBOOT=yes:开启网络连接<br>网卡自动获取IP配置将ONBOOT=no 改为ONBOOT=yes即可<br>编辑、保存、然后重启网卡</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># service network restart</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"存在多个网卡\"><a href=\"#存在多个网卡\" class=\"headerlink\" title=\"存在多个网卡\"></a>存在多个网卡</h2><blockquote>\n<p>如果存在多个网卡会在/etc/sysconfig/network-scripts/ 目录下存在多个ifcfg-eth0文件，如ifcfg-eth1、ifcfg-eth2、ifcfg-eth3等，具体哪个网卡好用需要挨个试探，只保持其中一个网卡的配置为ONBOOT=yes，然后重启网卡。</p>\n</blockquote>\n<h2 id=\"网卡配置静态IP\"><a href=\"#网卡配置静态IP\" class=\"headerlink\" title=\"网卡配置静态IP\"></a>网卡配置静态IP</h2><blockquote>\n<p>配置静态IP同样修改好用的网卡，如ifcfg-eth0，具体配置如下</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#/etc/sysconfig/network-scripts/</span></span><br><span class=\"line\"><span class=\"comment\">#vi ifcfg-eth0</span></span><br><span class=\"line\"></span><br><span class=\"line\">DEVICE=eth0</span><br><span class=\"line\">HWADDR=2E:8A:C5:9A:AC:70</span><br><span class=\"line\">TYPE=Ethernet</span><br><span class=\"line\">UUID=439416c6-5dc9-43e0-b0de-12986a2cc25b</span><br><span class=\"line\"><span class=\"comment\">#开启自动启用网络连接</span></span><br><span class=\"line\">ONBOOT=yes</span><br><span class=\"line\">NM_CONTROLLED=yes</span><br><span class=\"line\"> <span class=\"comment\">#启用静态IP地址</span></span><br><span class=\"line\">BOOTPROTO=static</span><br><span class=\"line\"><span class=\"comment\">#设置IP地址</span></span><br><span class=\"line\">IPADDR=172.18.15.195</span><br><span class=\"line\"><span class=\"comment\">#设置子网掩码</span></span><br><span class=\"line\">NETMASK=255.255.224.0</span><br><span class=\"line\"><span class=\"comment\">#设置网关</span></span><br><span class=\"line\">GATEWAY=172.18.10.1</span><br><span class=\"line\"><span class=\"comment\">#设置主DNS</span></span><br><span class=\"line\">DNS1=172.18.12.62</span><br><span class=\"line\">DNS2=</span><br><span class=\"line\"><span class=\"comment\">#禁止IPV6</span></span><br><span class=\"line\">IPV6INIT=no</span><br><span class=\"line\">USERCTL=no</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>修改后执行下列名重启网卡</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service ip6tables stop   <span class=\"comment\">#停止IPV6服务</span></span><br><span class=\"line\">chkconfig ip6tables off  <span class=\"comment\">#禁止IPV6开机启动</span></span><br><span class=\"line\">service network restart  <span class=\"comment\">#重启网络连接</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"报错总结\"><a href=\"#报错总结\" class=\"headerlink\" title=\"报错总结\"></a>报错总结</h2><blockquote>\n<p> Device eth2 has different MAC address than expected, ignoring.<br>错误原因：实际Mac地址与网卡内配置的HWADDR地址不同导致，查看正确Mac地址</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#ifconfig -a</span></span><br><span class=\"line\"><span class=\"comment\">#HWaddr即为eth0对应的Mac地址，只要找到对应网卡的Mac地址修改对应的网卡文件的HWADDR即可</span></span><br><span class=\"line\">eth0      </span><br><span class=\"line\">      Link encap:Ethernet  HWaddr 2A:B4:AD:CE:5A:57</span><br><span class=\"line\">      BROADCAST MULTICAST  MTU:1500  Metric:1</span><br><span class=\"line\">      RX packets:0 errors:0 dropped:0 overruns:0 frame:0</span><br><span class=\"line\">      TX packets:0 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class=\"line\">      collisions:0 txqueuelen:1000</span><br><span class=\"line\">      RX bytes:0 (0.0 b)  TX bytes:0 (0.0 b)</span><br><span class=\"line\">      Interrupt:35</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>修改后重复上述重启网卡即可</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>Linux在安装系统结束后总要面临一个主要问题，网络连接。习惯了Windows的图形界面连接网络是轻而易举的事，但是对于Linux命令操作很不容易上手，在此做记录方便后期使用也供大家参考。</p>","more":"<p>Linux在安装系统结束后总要面临一个主要问题，网络连接。习惯了Windows的图形界面连接网络是轻而易举的事，但是对于Linux命令操作很不容易上手，在此做记录方便后期使用也供大家参考。</p>\n<h2 id=\"查看网卡\"><a href=\"#查看网卡\" class=\"headerlink\" title=\"查看网卡\"></a>查看网卡</h2><blockquote>\n<p>输入命令后，打开网卡所在文件</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#/etc/sysconfig/network-scripts/</span></span><br><span class=\"line\"><span class=\"comment\">#vi ifcfg-eth0</span></span><br><span class=\"line\"></span><br><span class=\"line\">EVICE=eth0</span><br><span class=\"line\">HWADDR=6E:D6:7D:EE:4D:93</span><br><span class=\"line\">TYPE=Ethernet</span><br><span class=\"line\">UUID=08212c73-eb02-4ad7-9969-ed3bc7a352ed</span><br><span class=\"line\">ONBOOT=no</span><br><span class=\"line\">NM_CONTROLLED=yes</span><br><span class=\"line\">BOOTPROTO=dhcp</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>HWADDR:Linux的MAC地址<br>ONBOOT=yes:开启网络连接<br>网卡自动获取IP配置将ONBOOT=no 改为ONBOOT=yes即可<br>编辑、保存、然后重启网卡</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># service network restart</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"存在多个网卡\"><a href=\"#存在多个网卡\" class=\"headerlink\" title=\"存在多个网卡\"></a>存在多个网卡</h2><blockquote>\n<p>如果存在多个网卡会在/etc/sysconfig/network-scripts/ 目录下存在多个ifcfg-eth0文件，如ifcfg-eth1、ifcfg-eth2、ifcfg-eth3等，具体哪个网卡好用需要挨个试探，只保持其中一个网卡的配置为ONBOOT=yes，然后重启网卡。</p>\n</blockquote>\n<h2 id=\"网卡配置静态IP\"><a href=\"#网卡配置静态IP\" class=\"headerlink\" title=\"网卡配置静态IP\"></a>网卡配置静态IP</h2><blockquote>\n<p>配置静态IP同样修改好用的网卡，如ifcfg-eth0，具体配置如下</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#/etc/sysconfig/network-scripts/</span></span><br><span class=\"line\"><span class=\"comment\">#vi ifcfg-eth0</span></span><br><span class=\"line\"></span><br><span class=\"line\">DEVICE=eth0</span><br><span class=\"line\">HWADDR=2E:8A:C5:9A:AC:70</span><br><span class=\"line\">TYPE=Ethernet</span><br><span class=\"line\">UUID=439416c6-5dc9-43e0-b0de-12986a2cc25b</span><br><span class=\"line\"><span class=\"comment\">#开启自动启用网络连接</span></span><br><span class=\"line\">ONBOOT=yes</span><br><span class=\"line\">NM_CONTROLLED=yes</span><br><span class=\"line\"> <span class=\"comment\">#启用静态IP地址</span></span><br><span class=\"line\">BOOTPROTO=static</span><br><span class=\"line\"><span class=\"comment\">#设置IP地址</span></span><br><span class=\"line\">IPADDR=172.18.15.195</span><br><span class=\"line\"><span class=\"comment\">#设置子网掩码</span></span><br><span class=\"line\">NETMASK=255.255.224.0</span><br><span class=\"line\"><span class=\"comment\">#设置网关</span></span><br><span class=\"line\">GATEWAY=172.18.10.1</span><br><span class=\"line\"><span class=\"comment\">#设置主DNS</span></span><br><span class=\"line\">DNS1=172.18.12.62</span><br><span class=\"line\">DNS2=</span><br><span class=\"line\"><span class=\"comment\">#禁止IPV6</span></span><br><span class=\"line\">IPV6INIT=no</span><br><span class=\"line\">USERCTL=no</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>修改后执行下列名重启网卡</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service ip6tables stop   <span class=\"comment\">#停止IPV6服务</span></span><br><span class=\"line\">chkconfig ip6tables off  <span class=\"comment\">#禁止IPV6开机启动</span></span><br><span class=\"line\">service network restart  <span class=\"comment\">#重启网络连接</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"报错总结\"><a href=\"#报错总结\" class=\"headerlink\" title=\"报错总结\"></a>报错总结</h2><blockquote>\n<p> Device eth2 has different MAC address than expected, ignoring.<br>错误原因：实际Mac地址与网卡内配置的HWADDR地址不同导致，查看正确Mac地址</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#ifconfig -a</span></span><br><span class=\"line\"><span class=\"comment\">#HWaddr即为eth0对应的Mac地址，只要找到对应网卡的Mac地址修改对应的网卡文件的HWADDR即可</span></span><br><span class=\"line\">eth0      </span><br><span class=\"line\">      Link encap:Ethernet  HWaddr 2A:B4:AD:CE:5A:57</span><br><span class=\"line\">      BROADCAST MULTICAST  MTU:1500  Metric:1</span><br><span class=\"line\">      RX packets:0 errors:0 dropped:0 overruns:0 frame:0</span><br><span class=\"line\">      TX packets:0 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class=\"line\">      collisions:0 txqueuelen:1000</span><br><span class=\"line\">      RX bytes:0 (0.0 b)  TX bytes:0 (0.0 b)</span><br><span class=\"line\">      Interrupt:35</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>修改后重复上述重启网卡即可</p>\n</blockquote>"},{"title":"Hello World","url":"hello-world","date":"2018-12-12T04:24:06.000Z","top":null,"_content":"\nWelcome to [hhongwen](https://hhongwen.cn/) person blog! This is my very first post...\n修改于搭建博客的hello word，记得第一次写Hello World还是上大一的时候，匆匆那年一去复返。\n\n``` code\n    printf(\"Hello Word\")\n    System.out.println(\"Hello Word\")\n    print('Hello Word')\n    console.log('Hello Word')\n    ...\n```\n\n<!--more-->\n\nWelcome to [hhongwen](https://hhongwen.cn/)! This is my very first post...\n修改于搭建博客的hello word，记得第一次写Hello World还是上大一的时候，匆匆那年一去复返。\n\n``` code\n    printf(\"Hello Word\")\n    System.out.println(\"Hello Word\")\n    print('Hello Word')\n    console.log('Hello Word')\n```\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\nurl: 'hello-world'\ndate: 2018-12-12 12:24:06\ntags: 随笔\ncategories: 随笔\ntop: \n---\n\nWelcome to [hhongwen](https://hhongwen.cn/) person blog! This is my very first post...\n修改于搭建博客的hello word，记得第一次写Hello World还是上大一的时候，匆匆那年一去复返。\n\n``` code\n    printf(\"Hello Word\")\n    System.out.println(\"Hello Word\")\n    print('Hello Word')\n    console.log('Hello Word')\n    ...\n```\n\n<!--more-->\n\nWelcome to [hhongwen](https://hhongwen.cn/)! This is my very first post...\n修改于搭建博客的hello word，记得第一次写Hello World还是上大一的时候，匆匆那年一去复返。\n\n``` code\n    printf(\"Hello Word\")\n    System.out.println(\"Hello Word\")\n    print('Hello Word')\n    console.log('Hello Word')\n```\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"updated":"2018-12-17T02:49:23.534Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjpwe2pki000ltoqu18pu8xil","content":"<p>Welcome to <a href=\"https://hhongwen.cn/\">hhongwen</a> person blog! This is my very first post…<br>修改于搭建博客的hello word，记得第一次写Hello World还是上大一的时候，匆匆那年一去复返。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">printf(&quot;Hello Word&quot;)</span><br><span class=\"line\">System.out.println(&quot;Hello Word&quot;)</span><br><span class=\"line\">print(&apos;Hello Word&apos;)</span><br><span class=\"line\">console.log(&apos;Hello Word&apos;)</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p>Welcome to <a href=\"https://hhongwen.cn/\">hhongwen</a>! This is my very first post…<br>修改于搭建博客的hello word，记得第一次写Hello World还是上大一的时候，匆匆那年一去复返。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">printf(&quot;Hello Word&quot;)</span><br><span class=\"line\">System.out.println(&quot;Hello Word&quot;)</span><br><span class=\"line\">print(&apos;Hello Word&apos;)</span><br><span class=\"line\">console.log(&apos;Hello Word&apos;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"<p>Welcome to <a href=\"https://hhongwen.cn/\">hhongwen</a> person blog! This is my very first post…<br>修改于搭建博客的hello word，记得第一次写Hello World还是上大一的时候，匆匆那年一去复返。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">printf(&quot;Hello Word&quot;)</span><br><span class=\"line\">System.out.println(&quot;Hello Word&quot;)</span><br><span class=\"line\">print(&apos;Hello Word&apos;)</span><br><span class=\"line\">console.log(&apos;Hello Word&apos;)</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>","more":"<p>Welcome to <a href=\"https://hhongwen.cn/\">hhongwen</a>! This is my very first post…<br>修改于搭建博客的hello word，记得第一次写Hello World还是上大一的时候，匆匆那年一去复返。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">printf(&quot;Hello Word&quot;)</span><br><span class=\"line\">System.out.println(&quot;Hello Word&quot;)</span><br><span class=\"line\">print(&apos;Hello Word&apos;)</span><br><span class=\"line\">console.log(&apos;Hello Word&apos;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>"},{"title":"观后感|当幸福来敲门 The Pursuit of Happyness","url":"the-pursuit-of-happyness","date":"2018-12-19T06:00:19.000Z","playlist":[{"name":"Opening","artist":"Andrea Guerra","url":"//music.163.com/song/media/outer/url?id=1061969.mp3","cover":"//p1.music.126.net/s7kBjYLxKB3wtobAuFIFpg==/830131279014386.jpg?param=130y130"}],"_content":"\n![promising](/images/happyness.png)\n\n> 看到时光机点亮的那一刻，我想儿子克里斯托夫正在侏罗纪的世界内探险，看着山川河流，穿梭在恐龙的脚下，在山洞中安稳的度过夜晚，期盼着光明和幸福的来临，在他弱小的背后一直都有一个宽大的臂膀为他叩响幸福之门。\n\n<!--more-->\n\n![promising](/images/happyness.png)\n\n> 看到时光机点亮的那一刻，我想儿子克里斯托夫正在侏罗纪的世界内探险，看着山川河流，穿梭在恐龙的脚下，在山洞中安稳的度过夜晚，期盼着光明和幸福的来临，在他弱小的背后一直都有一个宽大的臂膀为他叩响幸福之门。\n\n&#160; &#160; &#160; &#160;好久没有做这件事情了，记得之前写观后感还是小学时为了完成任务看完电影必须要交出一篇观后感给老师罢了，现在只是单独的想和大家分享一下这部电影。\n\n&#160; &#160; &#160; &#160;已经不记得第一次看这部电影是什么时候，我的英语不好，也不曾清楚的记得有哪些电影台词让人泪眼朦胧，但总有一些画面挥之不去。写到这里想起奇葩说有一个辩题，辩题是**“你真的很努力。”**这句话是对你努力的肯定还是否定，我的观点是肯定和否定都是别人对你做出的评价和感受，当你听到这句话的时候应该为自己感到欣慰，因为你的努力让是让自己看到改变和成长，幸福可能会迟到，但永远不会缺席！\n\n&#160; &#160; &#160; &#160;这次电影是从克里斯在办公室给客户打电话看起的，为了能增加效率话筒从不放下减少拿话筒的时间，这样一天就可以节省8分钟，为了能多联系一个客户不喝一滴水减少上厕所的时间。下班拿着医疗器械推销，没有推辞掉的领导停车要求，未见到客户被贴罚单只能自认倒霉，最后破产只剩23$时被借走5$时的无奈，朋友借钱不认帐的绝望，流离失所露宿街头的悲戚，我从未见过如此绝望的生活，也没有见过能在如此绝望中还保持乐观与积极，也许只有在厕所露宿时脚顶着门，双手捂着儿子的耳朵留下的眼泪时才能体会到克里斯的绝望与无助。\n\n![despair](/images/despair.png)\n\n&#160; &#160; &#160; &#160;当克里斯流下眼泪的那一刻，可能就是幸福对他最后的考验，如同骆驼背上最后的一根稻草，但是他没有垮下。经历过最终的绝望就像过了严寒最寒冷的一天，温度在一点点升高，万物在一天天复苏。虽然克里斯在球赛上没有签上合同，但这是他转机的开始，即使大鳄走在一起的人再微不足道也值得想结交人的投去怀抱，于是结交了很多人也从而获得了很多的业务，随即幸福也一点点的到来。\n\n&#160; &#160; &#160; &#160;看着这部电影都说克里斯是不幸，也是幸运的。每天有儿子陪伴在身边，获得了股票投资实习的机会，结实了有钱老板参加棒球赛认识了更多的朋友，有教堂和收容所解决温饱，找回了时光机（医疗器械），遇到了善良的医生等待他修好后购买了器械，最后遇到了伯乐最后成功入职。不能说他是不幸运的，只是我们往往看到的都是苦难忘却了幸福存在，其实幸福一直都陪伴着克里斯，只是之前离得远一点。\n\n&#160; &#160; &#160; &#160;我不记得电影中都有哪些台词，但是总有一些画面挥之不去，也许这就是它魅力所在。这也画面都有克里斯和他儿子的身影，也许是儿子的陪伴才让他如此的坚强，他告诉儿子：“如果你有梦想，就必须要捍卫它。”，可能这是在告诉自己。\n\n> The Pursuit of Happyness，如果你有梦想，就必须要捍卫它。你的努力可能在别人眼中一文不值，但是你努力真的会让自己变得不同。\n也希望喜欢这部电影的朋友可以一起讨论。\n\n> 很喜欢的一段台词分享给大家：\n- **Christopher**: Are we going to the game? \n- **Chris**: I said possibly we're going to the game. You know what \"possibly\" means? \n- **Christopher**: Like probably. \n- **Chris**: No, \"probably\" means there's a good chance that we're going. Possibly means we might, we might not. What does \"probably\" mean?\n- **Christopher**: It means we have a good chance. \n- **Chris**: And what does \"possibly\" mean? \n- **Christopher**: I know what it means. \n- **Chris**: What does it mean? \n- **Christopher**: It means that we're not going to the game. \n- **Chris**: How did you get so smart? \n- **Christopher**: Because you're smart. \n\n![running](/images/running.png)","source":"_posts/当幸福来敲门 The Pursuit of Happyness.md","raw":"---\ntitle: 观后感|当幸福来敲门 The Pursuit of Happyness\nurl: the-pursuit-of-happyness\ndate: 2018-12-19 14:00:19\ntags: 观后感\ncategories: 电影\nplaylist:\n  -\n    name: Opening\n    artist: Andrea Guerra\n    url: \"//music.163.com/song/media/outer/url?id=1061969.mp3\"\n    cover: \"//p1.music.126.net/s7kBjYLxKB3wtobAuFIFpg==/830131279014386.jpg?param=130y130\"\n\n---\n\n![promising](/images/happyness.png)\n\n> 看到时光机点亮的那一刻，我想儿子克里斯托夫正在侏罗纪的世界内探险，看着山川河流，穿梭在恐龙的脚下，在山洞中安稳的度过夜晚，期盼着光明和幸福的来临，在他弱小的背后一直都有一个宽大的臂膀为他叩响幸福之门。\n\n<!--more-->\n\n![promising](/images/happyness.png)\n\n> 看到时光机点亮的那一刻，我想儿子克里斯托夫正在侏罗纪的世界内探险，看着山川河流，穿梭在恐龙的脚下，在山洞中安稳的度过夜晚，期盼着光明和幸福的来临，在他弱小的背后一直都有一个宽大的臂膀为他叩响幸福之门。\n\n&#160; &#160; &#160; &#160;好久没有做这件事情了，记得之前写观后感还是小学时为了完成任务看完电影必须要交出一篇观后感给老师罢了，现在只是单独的想和大家分享一下这部电影。\n\n&#160; &#160; &#160; &#160;已经不记得第一次看这部电影是什么时候，我的英语不好，也不曾清楚的记得有哪些电影台词让人泪眼朦胧，但总有一些画面挥之不去。写到这里想起奇葩说有一个辩题，辩题是**“你真的很努力。”**这句话是对你努力的肯定还是否定，我的观点是肯定和否定都是别人对你做出的评价和感受，当你听到这句话的时候应该为自己感到欣慰，因为你的努力让是让自己看到改变和成长，幸福可能会迟到，但永远不会缺席！\n\n&#160; &#160; &#160; &#160;这次电影是从克里斯在办公室给客户打电话看起的，为了能增加效率话筒从不放下减少拿话筒的时间，这样一天就可以节省8分钟，为了能多联系一个客户不喝一滴水减少上厕所的时间。下班拿着医疗器械推销，没有推辞掉的领导停车要求，未见到客户被贴罚单只能自认倒霉，最后破产只剩23$时被借走5$时的无奈，朋友借钱不认帐的绝望，流离失所露宿街头的悲戚，我从未见过如此绝望的生活，也没有见过能在如此绝望中还保持乐观与积极，也许只有在厕所露宿时脚顶着门，双手捂着儿子的耳朵留下的眼泪时才能体会到克里斯的绝望与无助。\n\n![despair](/images/despair.png)\n\n&#160; &#160; &#160; &#160;当克里斯流下眼泪的那一刻，可能就是幸福对他最后的考验，如同骆驼背上最后的一根稻草，但是他没有垮下。经历过最终的绝望就像过了严寒最寒冷的一天，温度在一点点升高，万物在一天天复苏。虽然克里斯在球赛上没有签上合同，但这是他转机的开始，即使大鳄走在一起的人再微不足道也值得想结交人的投去怀抱，于是结交了很多人也从而获得了很多的业务，随即幸福也一点点的到来。\n\n&#160; &#160; &#160; &#160;看着这部电影都说克里斯是不幸，也是幸运的。每天有儿子陪伴在身边，获得了股票投资实习的机会，结实了有钱老板参加棒球赛认识了更多的朋友，有教堂和收容所解决温饱，找回了时光机（医疗器械），遇到了善良的医生等待他修好后购买了器械，最后遇到了伯乐最后成功入职。不能说他是不幸运的，只是我们往往看到的都是苦难忘却了幸福存在，其实幸福一直都陪伴着克里斯，只是之前离得远一点。\n\n&#160; &#160; &#160; &#160;我不记得电影中都有哪些台词，但是总有一些画面挥之不去，也许这就是它魅力所在。这也画面都有克里斯和他儿子的身影，也许是儿子的陪伴才让他如此的坚强，他告诉儿子：“如果你有梦想，就必须要捍卫它。”，可能这是在告诉自己。\n\n> The Pursuit of Happyness，如果你有梦想，就必须要捍卫它。你的努力可能在别人眼中一文不值，但是你努力真的会让自己变得不同。\n也希望喜欢这部电影的朋友可以一起讨论。\n\n> 很喜欢的一段台词分享给大家：\n- **Christopher**: Are we going to the game? \n- **Chris**: I said possibly we're going to the game. You know what \"possibly\" means? \n- **Christopher**: Like probably. \n- **Chris**: No, \"probably\" means there's a good chance that we're going. Possibly means we might, we might not. What does \"probably\" mean?\n- **Christopher**: It means we have a good chance. \n- **Chris**: And what does \"possibly\" mean? \n- **Christopher**: I know what it means. \n- **Chris**: What does it mean? \n- **Christopher**: It means that we're not going to the game. \n- **Chris**: How did you get so smart? \n- **Christopher**: Because you're smart. \n\n![running](/images/running.png)","slug":"当幸福来敲门 The Pursuit of Happyness","published":1,"updated":"2018-12-19T11:16:38.548Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjpwe2pkj000ptoqu7aca15je","content":"<p><img src=\"/images/happyness.png\" alt=\"promising\"></p>\n<blockquote>\n<p>看到时光机点亮的那一刻，我想儿子克里斯托夫正在侏罗纪的世界内探险，看着山川河流，穿梭在恐龙的脚下，在山洞中安稳的度过夜晚，期盼着光明和幸福的来临，在他弱小的背后一直都有一个宽大的臂膀为他叩响幸福之门。</p>\n</blockquote>\n<a id=\"more\"></a>\n<p><img src=\"/images/happyness.png\" alt=\"promising\"></p>\n<blockquote>\n<p>看到时光机点亮的那一刻，我想儿子克里斯托夫正在侏罗纪的世界内探险，看着山川河流，穿梭在恐龙的脚下，在山洞中安稳的度过夜晚，期盼着光明和幸福的来临，在他弱小的背后一直都有一个宽大的臂膀为他叩响幸福之门。</p>\n</blockquote>\n<p>&#160; &#160; &#160; &#160;好久没有做这件事情了，记得之前写观后感还是小学时为了完成任务看完电影必须要交出一篇观后感给老师罢了，现在只是单独的想和大家分享一下这部电影。</p>\n<p>&#160; &#160; &#160; &#160;已经不记得第一次看这部电影是什么时候，我的英语不好，也不曾清楚的记得有哪些电影台词让人泪眼朦胧，但总有一些画面挥之不去。写到这里想起奇葩说有一个辩题，辩题是<strong>“你真的很努力。”</strong>这句话是对你努力的肯定还是否定，我的观点是肯定和否定都是别人对你做出的评价和感受，当你听到这句话的时候应该为自己感到欣慰，因为你的努力让是让自己看到改变和成长，幸福可能会迟到，但永远不会缺席！</p>\n<p>&#160; &#160; &#160; &#160;这次电影是从克里斯在办公室给客户打电话看起的，为了能增加效率话筒从不放下减少拿话筒的时间，这样一天就可以节省8分钟，为了能多联系一个客户不喝一滴水减少上厕所的时间。下班拿着医疗器械推销，没有推辞掉的领导停车要求，未见到客户被贴罚单只能自认倒霉，最后破产只剩23$时被借走5$时的无奈，朋友借钱不认帐的绝望，流离失所露宿街头的悲戚，我从未见过如此绝望的生活，也没有见过能在如此绝望中还保持乐观与积极，也许只有在厕所露宿时脚顶着门，双手捂着儿子的耳朵留下的眼泪时才能体会到克里斯的绝望与无助。</p>\n<p><img src=\"/images/despair.png\" alt=\"despair\"></p>\n<p>&#160; &#160; &#160; &#160;当克里斯流下眼泪的那一刻，可能就是幸福对他最后的考验，如同骆驼背上最后的一根稻草，但是他没有垮下。经历过最终的绝望就像过了严寒最寒冷的一天，温度在一点点升高，万物在一天天复苏。虽然克里斯在球赛上没有签上合同，但这是他转机的开始，即使大鳄走在一起的人再微不足道也值得想结交人的投去怀抱，于是结交了很多人也从而获得了很多的业务，随即幸福也一点点的到来。</p>\n<p>&#160; &#160; &#160; &#160;看着这部电影都说克里斯是不幸，也是幸运的。每天有儿子陪伴在身边，获得了股票投资实习的机会，结实了有钱老板参加棒球赛认识了更多的朋友，有教堂和收容所解决温饱，找回了时光机（医疗器械），遇到了善良的医生等待他修好后购买了器械，最后遇到了伯乐最后成功入职。不能说他是不幸运的，只是我们往往看到的都是苦难忘却了幸福存在，其实幸福一直都陪伴着克里斯，只是之前离得远一点。</p>\n<p>&#160; &#160; &#160; &#160;我不记得电影中都有哪些台词，但是总有一些画面挥之不去，也许这就是它魅力所在。这也画面都有克里斯和他儿子的身影，也许是儿子的陪伴才让他如此的坚强，他告诉儿子：“如果你有梦想，就必须要捍卫它。”，可能这是在告诉自己。</p>\n<blockquote>\n<p>The Pursuit of Happyness，如果你有梦想，就必须要捍卫它。你的努力可能在别人眼中一文不值，但是你努力真的会让自己变得不同。<br>也希望喜欢这部电影的朋友可以一起讨论。</p>\n</blockquote>\n<blockquote>\n<p>很喜欢的一段台词分享给大家：</p>\n<ul>\n<li><strong>Christopher</strong>: Are we going to the game? </li>\n<li><strong>Chris</strong>: I said possibly we’re going to the game. You know what “possibly” means? </li>\n<li><strong>Christopher</strong>: Like probably. </li>\n<li><strong>Chris</strong>: No, “probably” means there’s a good chance that we’re going. Possibly means we might, we might not. What does “probably” mean?</li>\n<li><strong>Christopher</strong>: It means we have a good chance. </li>\n<li><strong>Chris</strong>: And what does “possibly” mean? </li>\n<li><strong>Christopher</strong>: I know what it means. </li>\n<li><strong>Chris</strong>: What does it mean? </li>\n<li><strong>Christopher</strong>: It means that we’re not going to the game. </li>\n<li><strong>Chris</strong>: How did you get so smart? </li>\n<li><strong>Christopher</strong>: Because you’re smart. </li>\n</ul>\n</blockquote>\n<p><img src=\"/images/running.png\" alt=\"running\"></p>\n","site":{"data":{}},"excerpt":"<p><img src=\"/images/happyness.png\" alt=\"promising\"></p>\n<blockquote>\n<p>看到时光机点亮的那一刻，我想儿子克里斯托夫正在侏罗纪的世界内探险，看着山川河流，穿梭在恐龙的脚下，在山洞中安稳的度过夜晚，期盼着光明和幸福的来临，在他弱小的背后一直都有一个宽大的臂膀为他叩响幸福之门。</p>\n</blockquote>","more":"<p><img src=\"/images/happyness.png\" alt=\"promising\"></p>\n<blockquote>\n<p>看到时光机点亮的那一刻，我想儿子克里斯托夫正在侏罗纪的世界内探险，看着山川河流，穿梭在恐龙的脚下，在山洞中安稳的度过夜晚，期盼着光明和幸福的来临，在他弱小的背后一直都有一个宽大的臂膀为他叩响幸福之门。</p>\n</blockquote>\n<p>&#160; &#160; &#160; &#160;好久没有做这件事情了，记得之前写观后感还是小学时为了完成任务看完电影必须要交出一篇观后感给老师罢了，现在只是单独的想和大家分享一下这部电影。</p>\n<p>&#160; &#160; &#160; &#160;已经不记得第一次看这部电影是什么时候，我的英语不好，也不曾清楚的记得有哪些电影台词让人泪眼朦胧，但总有一些画面挥之不去。写到这里想起奇葩说有一个辩题，辩题是<strong>“你真的很努力。”</strong>这句话是对你努力的肯定还是否定，我的观点是肯定和否定都是别人对你做出的评价和感受，当你听到这句话的时候应该为自己感到欣慰，因为你的努力让是让自己看到改变和成长，幸福可能会迟到，但永远不会缺席！</p>\n<p>&#160; &#160; &#160; &#160;这次电影是从克里斯在办公室给客户打电话看起的，为了能增加效率话筒从不放下减少拿话筒的时间，这样一天就可以节省8分钟，为了能多联系一个客户不喝一滴水减少上厕所的时间。下班拿着医疗器械推销，没有推辞掉的领导停车要求，未见到客户被贴罚单只能自认倒霉，最后破产只剩23$时被借走5$时的无奈，朋友借钱不认帐的绝望，流离失所露宿街头的悲戚，我从未见过如此绝望的生活，也没有见过能在如此绝望中还保持乐观与积极，也许只有在厕所露宿时脚顶着门，双手捂着儿子的耳朵留下的眼泪时才能体会到克里斯的绝望与无助。</p>\n<p><img src=\"/images/despair.png\" alt=\"despair\"></p>\n<p>&#160; &#160; &#160; &#160;当克里斯流下眼泪的那一刻，可能就是幸福对他最后的考验，如同骆驼背上最后的一根稻草，但是他没有垮下。经历过最终的绝望就像过了严寒最寒冷的一天，温度在一点点升高，万物在一天天复苏。虽然克里斯在球赛上没有签上合同，但这是他转机的开始，即使大鳄走在一起的人再微不足道也值得想结交人的投去怀抱，于是结交了很多人也从而获得了很多的业务，随即幸福也一点点的到来。</p>\n<p>&#160; &#160; &#160; &#160;看着这部电影都说克里斯是不幸，也是幸运的。每天有儿子陪伴在身边，获得了股票投资实习的机会，结实了有钱老板参加棒球赛认识了更多的朋友，有教堂和收容所解决温饱，找回了时光机（医疗器械），遇到了善良的医生等待他修好后购买了器械，最后遇到了伯乐最后成功入职。不能说他是不幸运的，只是我们往往看到的都是苦难忘却了幸福存在，其实幸福一直都陪伴着克里斯，只是之前离得远一点。</p>\n<p>&#160; &#160; &#160; &#160;我不记得电影中都有哪些台词，但是总有一些画面挥之不去，也许这就是它魅力所在。这也画面都有克里斯和他儿子的身影，也许是儿子的陪伴才让他如此的坚强，他告诉儿子：“如果你有梦想，就必须要捍卫它。”，可能这是在告诉自己。</p>\n<blockquote>\n<p>The Pursuit of Happyness，如果你有梦想，就必须要捍卫它。你的努力可能在别人眼中一文不值，但是你努力真的会让自己变得不同。<br>也希望喜欢这部电影的朋友可以一起讨论。</p>\n</blockquote>\n<blockquote>\n<p>很喜欢的一段台词分享给大家：</p>\n<ul>\n<li><strong>Christopher</strong>: Are we going to the game? </li>\n<li><strong>Chris</strong>: I said possibly we’re going to the game. You know what “possibly” means? </li>\n<li><strong>Christopher</strong>: Like probably. </li>\n<li><strong>Chris</strong>: No, “probably” means there’s a good chance that we’re going. Possibly means we might, we might not. What does “probably” mean?</li>\n<li><strong>Christopher</strong>: It means we have a good chance. </li>\n<li><strong>Chris</strong>: And what does “possibly” mean? </li>\n<li><strong>Christopher</strong>: I know what it means. </li>\n<li><strong>Chris</strong>: What does it mean? </li>\n<li><strong>Christopher</strong>: It means that we’re not going to the game. </li>\n<li><strong>Chris</strong>: How did you get so smart? </li>\n<li><strong>Christopher</strong>: Because you’re smart. </li>\n</ul>\n</blockquote>\n<p><img src=\"/images/running.png\" alt=\"running\"></p>"},{"title":"我的第一个博客","url":"my-fist-blog","date":"2018-12-12T07:24:06.000Z","_content":"\n> **“吾生也有涯，而知也无涯。”**\n\n2018年12月12日搭建了此博客，记录一下这一天。此博客用Hexo + Netlify 搭建的静态网站。\n\n之前一直用阿里的Leanote来记录笔记，也用Leanote搭建过个人博客，但是总感觉和太过庞杂，想要简洁一些可操作性强一点的个人博客，偶然看到netlify托管网站，然后看到了Hexo + Netlify 搭建的静态网站突然感觉这就是我想要的方式，于是乎搭建了此博客，具体搭建可查看我的[Hexo+GitHub+Netlify搭建属于自己的博客网站](/20181216/build-own-blog/)。\n\n<!-- more -->\n## 记录第一篇博客\n\n> **“吾生也有涯，而知也无涯。”**\n\n2018年12月12日搭建了此博客，记录一下这一天。此博客用Hexo + Netlify 搭建的静态网站。\n\n之前一直用阿里的Leanote来记录笔记，也用Leanote搭建过个人博客，但是总感觉和太过庞杂，想要简洁一些可操作性强一点的个人博客，偶然看到netlify托管网站，然后看到了Hexo + Netlify 搭建的静态网站突然感觉这就是我想要的方式，于是乎搭建了此博客，具体搭建可查看我的[Hexo+GitHub+Netlify搭建属于自己的博客网站](/20181216/build-own-blog/)。\n\n原本只是简单的写了点作为记录，但是今天（2018年12月13日）还是想需要正式一下这篇文章，昨天的博客主题还是Hexo默认主题，今天看到了[hexo-theme-bmw](https://godbmw.com/)主题很清爽（98年诞生的小姐姐，想想自己™白活了）然后就借鉴来了，于是乎对原有内容重新构建一下，为了不给以后的自己有可乘之机。\n\n[“每一个技术的学习，都是从模仿开始。”](https://www.loveinliuy.com/) 出自朋友的博客网站，也希望在此能结识更多的朋友。\n\n## 目前状况\n\n混迹于二线城市，目前从事于一家创业公司。\n15年毕业到18年5月份从事Java技术栈相关工作，之后现在主要Nodejs、Python等技术栈。\n\n创建博客的主要原因是想提升一下自己，并对自己有一个长远的规划。现在总感觉自己的记忆在衰退，很多已经做过的事情再次接手时总想起人生的终极问题：我是谁？我从哪里来？我要到哪里去？\n我想还是需要将生活和学习的点滴记录下来，无论是踩过的还是坑爬过的山，记录的过程中都是对过往进行总结和思考，也是对自己的成长的总结。\n\n## 规划和期望\n\n做博客当然要给自己一个规划和要求，希望自己能坚持每周分享一篇博，至于内容还没有硬性要求，只要自己满意就好，养成良好的记录和总结的习惯。\n记录生活、也记录工作和学习，也希望在记录的时候认识更多志同道合的人，一起分享。\n\n## 总结\n\n此博客刚刚创建，那么总有不断完善的过程，目前规划是现将博客基本结构搭建起来，然后分享一下搭建和改善的过程，这是一个大的工作量，但是是一个长期任务，希望不要是这样就草草结束，不希望一切都是最初的样子，那样又有什么意义呢？\n","source":"_posts/我的第一个博客.md","raw":"---\ntitle: 我的第一个博客\nurl: my-fist-blog\ndate: 2018-12-12 15:24:06\ntags: 随笔\ncategories: 随笔\n---\n\n> **“吾生也有涯，而知也无涯。”**\n\n2018年12月12日搭建了此博客，记录一下这一天。此博客用Hexo + Netlify 搭建的静态网站。\n\n之前一直用阿里的Leanote来记录笔记，也用Leanote搭建过个人博客，但是总感觉和太过庞杂，想要简洁一些可操作性强一点的个人博客，偶然看到netlify托管网站，然后看到了Hexo + Netlify 搭建的静态网站突然感觉这就是我想要的方式，于是乎搭建了此博客，具体搭建可查看我的[Hexo+GitHub+Netlify搭建属于自己的博客网站](/20181216/build-own-blog/)。\n\n<!-- more -->\n## 记录第一篇博客\n\n> **“吾生也有涯，而知也无涯。”**\n\n2018年12月12日搭建了此博客，记录一下这一天。此博客用Hexo + Netlify 搭建的静态网站。\n\n之前一直用阿里的Leanote来记录笔记，也用Leanote搭建过个人博客，但是总感觉和太过庞杂，想要简洁一些可操作性强一点的个人博客，偶然看到netlify托管网站，然后看到了Hexo + Netlify 搭建的静态网站突然感觉这就是我想要的方式，于是乎搭建了此博客，具体搭建可查看我的[Hexo+GitHub+Netlify搭建属于自己的博客网站](/20181216/build-own-blog/)。\n\n原本只是简单的写了点作为记录，但是今天（2018年12月13日）还是想需要正式一下这篇文章，昨天的博客主题还是Hexo默认主题，今天看到了[hexo-theme-bmw](https://godbmw.com/)主题很清爽（98年诞生的小姐姐，想想自己™白活了）然后就借鉴来了，于是乎对原有内容重新构建一下，为了不给以后的自己有可乘之机。\n\n[“每一个技术的学习，都是从模仿开始。”](https://www.loveinliuy.com/) 出自朋友的博客网站，也希望在此能结识更多的朋友。\n\n## 目前状况\n\n混迹于二线城市，目前从事于一家创业公司。\n15年毕业到18年5月份从事Java技术栈相关工作，之后现在主要Nodejs、Python等技术栈。\n\n创建博客的主要原因是想提升一下自己，并对自己有一个长远的规划。现在总感觉自己的记忆在衰退，很多已经做过的事情再次接手时总想起人生的终极问题：我是谁？我从哪里来？我要到哪里去？\n我想还是需要将生活和学习的点滴记录下来，无论是踩过的还是坑爬过的山，记录的过程中都是对过往进行总结和思考，也是对自己的成长的总结。\n\n## 规划和期望\n\n做博客当然要给自己一个规划和要求，希望自己能坚持每周分享一篇博，至于内容还没有硬性要求，只要自己满意就好，养成良好的记录和总结的习惯。\n记录生活、也记录工作和学习，也希望在记录的时候认识更多志同道合的人，一起分享。\n\n## 总结\n\n此博客刚刚创建，那么总有不断完善的过程，目前规划是现将博客基本结构搭建起来，然后分享一下搭建和改善的过程，这是一个大的工作量，但是是一个长期任务，希望不要是这样就草草结束，不希望一切都是最初的样子，那样又有什么意义呢？\n","slug":"我的第一个博客","published":1,"updated":"2018-12-17T02:58:33.909Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjpwe2pkk000rtoquicgikxic","content":"<blockquote>\n<p><strong>“吾生也有涯，而知也无涯。”</strong></p>\n</blockquote>\n<p>2018年12月12日搭建了此博客，记录一下这一天。此博客用Hexo + Netlify 搭建的静态网站。</p>\n<p>之前一直用阿里的Leanote来记录笔记，也用Leanote搭建过个人博客，但是总感觉和太过庞杂，想要简洁一些可操作性强一点的个人博客，偶然看到netlify托管网站，然后看到了Hexo + Netlify 搭建的静态网站突然感觉这就是我想要的方式，于是乎搭建了此博客，具体搭建可查看我的<a href=\"/20181216/build-own-blog/\">Hexo+GitHub+Netlify搭建属于自己的博客网站</a>。</p>\n<a id=\"more\"></a>\n<h2 id=\"记录第一篇博客\"><a href=\"#记录第一篇博客\" class=\"headerlink\" title=\"记录第一篇博客\"></a>记录第一篇博客</h2><blockquote>\n<p><strong>“吾生也有涯，而知也无涯。”</strong></p>\n</blockquote>\n<p>2018年12月12日搭建了此博客，记录一下这一天。此博客用Hexo + Netlify 搭建的静态网站。</p>\n<p>之前一直用阿里的Leanote来记录笔记，也用Leanote搭建过个人博客，但是总感觉和太过庞杂，想要简洁一些可操作性强一点的个人博客，偶然看到netlify托管网站，然后看到了Hexo + Netlify 搭建的静态网站突然感觉这就是我想要的方式，于是乎搭建了此博客，具体搭建可查看我的<a href=\"/20181216/build-own-blog/\">Hexo+GitHub+Netlify搭建属于自己的博客网站</a>。</p>\n<p>原本只是简单的写了点作为记录，但是今天（2018年12月13日）还是想需要正式一下这篇文章，昨天的博客主题还是Hexo默认主题，今天看到了<a href=\"https://godbmw.com/\" target=\"_blank\" rel=\"noopener\">hexo-theme-bmw</a>主题很清爽（98年诞生的小姐姐，想想自己™白活了）然后就借鉴来了，于是乎对原有内容重新构建一下，为了不给以后的自己有可乘之机。</p>\n<p><a href=\"https://www.loveinliuy.com/\" target=\"_blank\" rel=\"noopener\">“每一个技术的学习，都是从模仿开始。”</a> 出自朋友的博客网站，也希望在此能结识更多的朋友。</p>\n<h2 id=\"目前状况\"><a href=\"#目前状况\" class=\"headerlink\" title=\"目前状况\"></a>目前状况</h2><p>混迹于二线城市，目前从事于一家创业公司。<br>15年毕业到18年5月份从事Java技术栈相关工作，之后现在主要Nodejs、Python等技术栈。</p>\n<p>创建博客的主要原因是想提升一下自己，并对自己有一个长远的规划。现在总感觉自己的记忆在衰退，很多已经做过的事情再次接手时总想起人生的终极问题：我是谁？我从哪里来？我要到哪里去？<br>我想还是需要将生活和学习的点滴记录下来，无论是踩过的还是坑爬过的山，记录的过程中都是对过往进行总结和思考，也是对自己的成长的总结。</p>\n<h2 id=\"规划和期望\"><a href=\"#规划和期望\" class=\"headerlink\" title=\"规划和期望\"></a>规划和期望</h2><p>做博客当然要给自己一个规划和要求，希望自己能坚持每周分享一篇博，至于内容还没有硬性要求，只要自己满意就好，养成良好的记录和总结的习惯。<br>记录生活、也记录工作和学习，也希望在记录的时候认识更多志同道合的人，一起分享。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>此博客刚刚创建，那么总有不断完善的过程，目前规划是现将博客基本结构搭建起来，然后分享一下搭建和改善的过程，这是一个大的工作量，但是是一个长期任务，希望不要是这样就草草结束，不希望一切都是最初的样子，那样又有什么意义呢？</p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p><strong>“吾生也有涯，而知也无涯。”</strong></p>\n</blockquote>\n<p>2018年12月12日搭建了此博客，记录一下这一天。此博客用Hexo + Netlify 搭建的静态网站。</p>\n<p>之前一直用阿里的Leanote来记录笔记，也用Leanote搭建过个人博客，但是总感觉和太过庞杂，想要简洁一些可操作性强一点的个人博客，偶然看到netlify托管网站，然后看到了Hexo + Netlify 搭建的静态网站突然感觉这就是我想要的方式，于是乎搭建了此博客，具体搭建可查看我的<a href=\"/20181216/build-own-blog/\">Hexo+GitHub+Netlify搭建属于自己的博客网站</a>。</p>","more":"<h2 id=\"记录第一篇博客\"><a href=\"#记录第一篇博客\" class=\"headerlink\" title=\"记录第一篇博客\"></a>记录第一篇博客</h2><blockquote>\n<p><strong>“吾生也有涯，而知也无涯。”</strong></p>\n</blockquote>\n<p>2018年12月12日搭建了此博客，记录一下这一天。此博客用Hexo + Netlify 搭建的静态网站。</p>\n<p>之前一直用阿里的Leanote来记录笔记，也用Leanote搭建过个人博客，但是总感觉和太过庞杂，想要简洁一些可操作性强一点的个人博客，偶然看到netlify托管网站，然后看到了Hexo + Netlify 搭建的静态网站突然感觉这就是我想要的方式，于是乎搭建了此博客，具体搭建可查看我的<a href=\"/20181216/build-own-blog/\">Hexo+GitHub+Netlify搭建属于自己的博客网站</a>。</p>\n<p>原本只是简单的写了点作为记录，但是今天（2018年12月13日）还是想需要正式一下这篇文章，昨天的博客主题还是Hexo默认主题，今天看到了<a href=\"https://godbmw.com/\" target=\"_blank\" rel=\"noopener\">hexo-theme-bmw</a>主题很清爽（98年诞生的小姐姐，想想自己™白活了）然后就借鉴来了，于是乎对原有内容重新构建一下，为了不给以后的自己有可乘之机。</p>\n<p><a href=\"https://www.loveinliuy.com/\" target=\"_blank\" rel=\"noopener\">“每一个技术的学习，都是从模仿开始。”</a> 出自朋友的博客网站，也希望在此能结识更多的朋友。</p>\n<h2 id=\"目前状况\"><a href=\"#目前状况\" class=\"headerlink\" title=\"目前状况\"></a>目前状况</h2><p>混迹于二线城市，目前从事于一家创业公司。<br>15年毕业到18年5月份从事Java技术栈相关工作，之后现在主要Nodejs、Python等技术栈。</p>\n<p>创建博客的主要原因是想提升一下自己，并对自己有一个长远的规划。现在总感觉自己的记忆在衰退，很多已经做过的事情再次接手时总想起人生的终极问题：我是谁？我从哪里来？我要到哪里去？<br>我想还是需要将生活和学习的点滴记录下来，无论是踩过的还是坑爬过的山，记录的过程中都是对过往进行总结和思考，也是对自己的成长的总结。</p>\n<h2 id=\"规划和期望\"><a href=\"#规划和期望\" class=\"headerlink\" title=\"规划和期望\"></a>规划和期望</h2><p>做博客当然要给自己一个规划和要求，希望自己能坚持每周分享一篇博，至于内容还没有硬性要求，只要自己满意就好，养成良好的记录和总结的习惯。<br>记录生活、也记录工作和学习，也希望在记录的时候认识更多志同道合的人，一起分享。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>此博客刚刚创建，那么总有不断完善的过程，目前规划是现将博客基本结构搭建起来，然后分享一下搭建和改善的过程，这是一个大的工作量，但是是一个长期任务，希望不要是这样就草草结束，不希望一切都是最初的样子，那样又有什么意义呢？</p>"},{"layout":"_draft","title":"Git使用一:Git安装","date":"2018-12-15T02:00:49.000Z","_content":"\n**Git --快速的版本控制工具**\nGit是一个免费的开源 分布式版本控制系统，旨在快速，高效地处理从小型到大型项目的所有事务。\nGit 易于学习， 占地面积小，具有闪电般快速的性能。它超越了Subversion，CVS，Perforce和ClearCase等SCM工具，具有廉价本地分支，便捷的临时区域和 多个工作流程等功能。\n\n- *本文旨在快速的了解和使用Git*\n\n<!--more-->\n\n**Git --快速的版本控制工具**\nGit是一个免费的开源 分布式版本控制系统，旨在快速，高效地处理从小型到大型项目的所有事务。\nGit 易于学习， 占地面积小，具有闪电般快速的性能。它超越了Subversion，CVS，Perforce和ClearCase等SCM工具，具有廉价本地分支，便捷的临时区域和 多个工作流程等功能。\n\n- *本文旨在快速的了解和使用Git*\n\n## Git安装\n\n[Git 官网下载安装包](https://git-scm.com/download/)\n\n\n## 感谢\n> 感谢[廖雪峰老师的Git教程](https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)，这也是我了解和学习Git的地方。\n\n","source":"_drafts/Git使用一-Git安装.md","raw":"---\nlayout: _draft\ntitle: 'Git使用一:Git安装'\ndate: 2018-12-15 10:00:49\ntags:\ncategories: Git\n---\n\n**Git --快速的版本控制工具**\nGit是一个免费的开源 分布式版本控制系统，旨在快速，高效地处理从小型到大型项目的所有事务。\nGit 易于学习， 占地面积小，具有闪电般快速的性能。它超越了Subversion，CVS，Perforce和ClearCase等SCM工具，具有廉价本地分支，便捷的临时区域和 多个工作流程等功能。\n\n- *本文旨在快速的了解和使用Git*\n\n<!--more-->\n\n**Git --快速的版本控制工具**\nGit是一个免费的开源 分布式版本控制系统，旨在快速，高效地处理从小型到大型项目的所有事务。\nGit 易于学习， 占地面积小，具有闪电般快速的性能。它超越了Subversion，CVS，Perforce和ClearCase等SCM工具，具有廉价本地分支，便捷的临时区域和 多个工作流程等功能。\n\n- *本文旨在快速的了解和使用Git*\n\n## Git安装\n\n[Git 官网下载安装包](https://git-scm.com/download/)\n\n\n## 感谢\n> 感谢[廖雪峰老师的Git教程](https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)，这也是我了解和学习Git的地方。\n\n","slug":"Git使用一-Git安装","published":0,"updated":"2018-12-26T03:22:05.214Z","_id":"cjq4m5d8w0000osqu57csmoid","comments":1,"photos":[],"link":"","content":"<p><strong>Git –快速的版本控制工具</strong><br>Git是一个免费的开源 分布式版本控制系统，旨在快速，高效地处理从小型到大型项目的所有事务。<br>Git 易于学习， 占地面积小，具有闪电般快速的性能。它超越了Subversion，CVS，Perforce和ClearCase等SCM工具，具有廉价本地分支，便捷的临时区域和 多个工作流程等功能。</p>\n<ul>\n<li><em>本文旨在快速的了解和使用Git</em></li>\n</ul>\n<a id=\"more\"></a>\n<p><strong>Git –快速的版本控制工具</strong><br>Git是一个免费的开源 分布式版本控制系统，旨在快速，高效地处理从小型到大型项目的所有事务。<br>Git 易于学习， 占地面积小，具有闪电般快速的性能。它超越了Subversion，CVS，Perforce和ClearCase等SCM工具，具有廉价本地分支，便捷的临时区域和 多个工作流程等功能。</p>\n<ul>\n<li><em>本文旨在快速的了解和使用Git</em></li>\n</ul>\n<h2 id=\"Git安装\"><a href=\"#Git安装\" class=\"headerlink\" title=\"Git安装\"></a>Git安装</h2><p><a href=\"https://git-scm.com/download/\" target=\"_blank\" rel=\"noopener\">Git 官网下载安装包</a></p>\n<h2 id=\"感谢\"><a href=\"#感谢\" class=\"headerlink\" title=\"感谢\"></a>感谢</h2><blockquote>\n<p>感谢<a href=\"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\" target=\"_blank\" rel=\"noopener\">廖雪峰老师的Git教程</a>，这也是我了解和学习Git的地方。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p><strong>Git –快速的版本控制工具</strong><br>Git是一个免费的开源 分布式版本控制系统，旨在快速，高效地处理从小型到大型项目的所有事务。<br>Git 易于学习， 占地面积小，具有闪电般快速的性能。它超越了Subversion，CVS，Perforce和ClearCase等SCM工具，具有廉价本地分支，便捷的临时区域和 多个工作流程等功能。</p>\n<ul>\n<li><em>本文旨在快速的了解和使用Git</em></li>\n</ul>","more":"<p><strong>Git –快速的版本控制工具</strong><br>Git是一个免费的开源 分布式版本控制系统，旨在快速，高效地处理从小型到大型项目的所有事务。<br>Git 易于学习， 占地面积小，具有闪电般快速的性能。它超越了Subversion，CVS，Perforce和ClearCase等SCM工具，具有廉价本地分支，便捷的临时区域和 多个工作流程等功能。</p>\n<ul>\n<li><em>本文旨在快速的了解和使用Git</em></li>\n</ul>\n<h2 id=\"Git安装\"><a href=\"#Git安装\" class=\"headerlink\" title=\"Git安装\"></a>Git安装</h2><p><a href=\"https://git-scm.com/download/\" target=\"_blank\" rel=\"noopener\">Git 官网下载安装包</a></p>\n<h2 id=\"感谢\"><a href=\"#感谢\" class=\"headerlink\" title=\"感谢\"></a>感谢</h2><blockquote>\n<p>感谢<a href=\"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\" target=\"_blank\" rel=\"noopener\">廖雪峰老师的Git教程</a>，这也是我了解和学习Git的地方。</p>\n</blockquote>"},{"_content":"","source":"_posts/Shell脚本备份Mongodb数据库.md","raw":"","slug":"Shell脚本备份Mongodb数据库","published":1,"date":"2018-12-26T07:46:03.215Z","updated":"2018-12-26T07:46:03.215Z","_id":"cjq4vktw30003osquj2gdc904","title":"","comments":1,"layout":"post","photos":[],"link":"","content":"","site":{"data":{}},"excerpt":"","more":""}],"PostAsset":[],"PostCategory":[{"post_id":"cjpwe2pk10000toquj3iey113","category_id":"cjpwe2pk60004toqu22ypxi3v","_id":"cjpwe2pkg000htoquhgbvtqc5"},{"post_id":"cjpwe2pkh000ktoquleprugmb","category_id":"cjpwe2pkf000gtoqu23j1gd6b","_id":"cjpwe2pkl000stoqucuszq0uc"},{"post_id":"cjpwe2pka000atoqumfwqno97","category_id":"cjpwe2pkf000gtoqu23j1gd6b","_id":"cjpwe2pkn0011toquyun10sgi"},{"post_id":"cjpwe2pkd000etoqu3urrgu6v","category_id":"cjpwe2pkm000xtoqunrjwkx66","_id":"cjpwe2pkn0015toqum1tmbmxy"},{"post_id":"cjpwe2pke000ftoqu2wsvd590","category_id":"cjpwe2pkn0012toquzjvoq3zy","_id":"cjpwe2pko0019toqu8lc3sy2n"},{"post_id":"cjpwe2pki000ltoqu18pu8xil","category_id":"cjpwe2pkn0016toqu3eqh4my4","_id":"cjpwe2pkp001dtoqu8e3irgm0"},{"post_id":"cjpwe2pkj000ptoqu7aca15je","category_id":"cjpwe2pko001atoquvwyqxnqm","_id":"cjpwe2pkq001htoquewt5vq0h"},{"post_id":"cjpwe2pkk000rtoquicgikxic","category_id":"cjpwe2pkn0016toqu3eqh4my4","_id":"cjpwe2pkr001ktoqua7lpyj3q"},{"post_id":"cjpwe2pk40002toqu779wgp69","category_id":"cjpxqsszi00008oquv4f6jyp1","_id":"cjpxqsszp00038oqulj5bqgu9"},{"post_id":"cjq4m5d8w0000osqu57csmoid","category_id":"cjq4m5d900001osqu2d59gt00","_id":"cjq4m5d910002osqu3v1kmqp9"},{"post_id":"cjpwe2pk80006toqu5refn8p4","category_id":"cjq4vmxv70004osqutztn8cqb","_id":"cjq4vmxv70005osquoosvvk4q"},{"post_id":"cjpwe2pk90008toquymhd76s0","category_id":"cjq4vnn0u000aosquittkp6yj","_id":"cjq4vnn0v000dosqu5qhe1w4r"}],"PostTag":[{"post_id":"cjpwe2pk10000toquj3iey113","tag_id":"cjpwe2pk70005toqu2i896ddp","_id":"cjpwe2pkd000dtoquypryev68"},{"post_id":"cjpwe2pka000atoqumfwqno97","tag_id":"cjpwe2pkl000utoquxlyre7qr","_id":"cjpwe2pkn0010toquoavw6jo4"},{"post_id":"cjpwe2pkd000etoqu3urrgu6v","tag_id":"cjpwe2pkm000ztoqui1d8nlrc","_id":"cjpwe2pkn0014toquyslsytuo"},{"post_id":"cjpwe2pke000ftoqu2wsvd590","tag_id":"cjpwe2pkn0013toquf6k85wnu","_id":"cjpwe2pko0018toquhjpl4o13"},{"post_id":"cjpwe2pkh000ktoquleprugmb","tag_id":"cjpwe2pko0017toquk5vs25fo","_id":"cjpwe2pkp001ctoqu59o6m3wo"},{"post_id":"cjpwe2pki000ltoqu18pu8xil","tag_id":"cjpwe2pko001btoqupcyy1epf","_id":"cjpwe2pkp001gtoquxb0x3gba"},{"post_id":"cjpwe2pkj000ptoqu7aca15je","tag_id":"cjpwe2pkp001ftoqu2xggb3a3","_id":"cjpwe2pkr001jtoqului4g46o"},{"post_id":"cjpwe2pkk000rtoquicgikxic","tag_id":"cjpwe2pko001btoqupcyy1epf","_id":"cjpwe2pkr001ltoquzbz3pyp3"},{"post_id":"cjpwe2pk40002toqu779wgp69","tag_id":"cjpxqsszo00018oqu4fv6ngjf","_id":"cjpxqsszp00028oqu0yv6fx7o"},{"post_id":"cjpwe2pk80006toqu5refn8p4","tag_id":"cjq4vncr00008osqurhp9n1e3","_id":"cjq4vncr10009osqu5prkytpv"},{"post_id":"cjpwe2pk90008toquymhd76s0","tag_id":"cjpwe2pkj000otoqu9nf6c3z2","_id":"cjq4vo8tc000fosqurdyck31y"},{"post_id":"cjpwe2pk90008toquymhd76s0","tag_id":"cjq4vo8tc000eosqulzhl90o3","_id":"cjq4vo8tc000gosqutq6ig9ot"}],"Tag":[{"name":"Git","_id":"cjpwe2pk70005toqu2i896ddp"},{"name":"MongoDB","_id":"cjpwe2pkg000itoquao1g2eue"},{"name":"Python","_id":"cjpwe2pkj000otoqu9nf6c3z2"},{"name":"JDk","_id":"cjpwe2pkl000utoquxlyre7qr"},{"name":"博客搭建","_id":"cjpwe2pkm000ztoqui1d8nlrc"},{"name":"Maven, jar","_id":"cjpwe2pkn0013toquf6k85wnu"},{"name":"网络","_id":"cjpwe2pko0017toquk5vs25fo"},{"name":"随笔","_id":"cjpwe2pko001btoqupcyy1epf"},{"name":"观后感","_id":"cjpwe2pkp001ftoqu2xggb3a3"},{"name":"Neo4j","_id":"cjpxqsszo00018oqu4fv6ngjf"},{"name":"MongoDB,Linux","_id":"cjq4vnbi00006osquq61o9wg5"},{"name":"MongoDB, Linux","_id":"cjq4vncr00008osqurhp9n1e3"},{"name":"Python, Linux","_id":"cjq4vnn0u000bosquk1vzuksz"},{"name":"Linux","_id":"cjq4vo8tc000eosqulzhl90o3"}]}}