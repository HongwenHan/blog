{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/bmw/source/css/github-markdown.css","path":"css/github-markdown.css","modified":0,"renderable":1},{"_id":"themes/bmw/source/css/base.css","path":"css/base.css","modified":0,"renderable":1},{"_id":"themes/bmw/source/css/highlight.css","path":"css/highlight.css","modified":0,"renderable":1},{"_id":"themes/bmw/source/css/base.css.map","path":"css/base.css.map","modified":0,"renderable":1},{"_id":"themes/bmw/source/css/prism.css","path":"css/prism.css","modified":0,"renderable":1},{"_id":"themes/bmw/source/icon/demo_fontclass.html","path":"icon/demo_fontclass.html","modified":0,"renderable":1},{"_id":"themes/bmw/source/icon/iconfont.css","path":"icon/iconfont.css","modified":0,"renderable":1},{"_id":"themes/bmw/source/icon/iconfont.js","path":"icon/iconfont.js","modified":0,"renderable":1},{"_id":"themes/bmw/source/icon/iconfont.eot","path":"icon/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/bmw/source/images/alihb.png","path":"images/alihb.png","modified":0,"renderable":1},{"_id":"themes/bmw/source/icon/iconfont.svg","path":"icon/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/bmw/source/icon/iconfont.woff","path":"icon/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/bmw/source/icon/iconfont.ttf","path":"icon/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/bmw/source/images/alipay.png","path":"images/alipay.png","modified":0,"renderable":1},{"_id":"themes/bmw/source/images/favicon.ico","path":"images/favicon.ico","modified":0,"renderable":1},{"_id":"themes/bmw/source/images/godbmw.jpeg","path":"images/godbmw.jpeg","modified":0,"renderable":1},{"_id":"themes/bmw/source/images/hhongwen.jpg","path":"images/hhongwen.jpg","modified":0,"renderable":1},{"_id":"themes/bmw/source/images/loveinliuy.png","path":"images/loveinliuy.png","modified":0,"renderable":1},{"_id":"themes/bmw/source/js/util.js","path":"js/util.js","modified":0,"renderable":1},{"_id":"themes/bmw/source/scss/animation.scss","path":"scss/animation.scss","modified":0,"renderable":1},{"_id":"themes/bmw/source/scss/article.scss","path":"scss/article.scss","modified":0,"renderable":1},{"_id":"themes/bmw/source/scss/base.scss","path":"scss/base.scss","modified":0,"renderable":1},{"_id":"themes/bmw/source/images/smile.png","path":"images/smile.png","modified":0,"renderable":1},{"_id":"themes/bmw/source/images/touch-icon.png","path":"images/touch-icon.png","modified":0,"renderable":1},{"_id":"themes/bmw/source/images/wechat.png","path":"images/wechat.png","modified":0,"renderable":1},{"_id":"themes/bmw/source/scss/mathjax.scss","path":"scss/mathjax.scss","modified":0,"renderable":1},{"_id":"themes/bmw/source/scss/vcomments.scss","path":"scss/vcomments.scss","modified":0,"renderable":1},{"_id":"themes/bmw/source/stylus/highlight.styl","path":"stylus/highlight.styl","modified":0,"renderable":1},{"_id":"themes/bmw/source/js/valine.min.js","path":"js/valine.min.js","modified":0,"renderable":1},{"_id":"themes/bmw/source/scss/layout/about.scss","path":"scss/layout/about.scss","modified":0,"renderable":1},{"_id":"themes/bmw/source/scss/layout/friend.scss","path":"scss/layout/friend.scss","modified":0,"renderable":1},{"_id":"themes/bmw/source/scss/layout/category.scss","path":"scss/layout/category.scss","modified":0,"renderable":1},{"_id":"themes/bmw/source/scss/layout/home.scss","path":"scss/layout/home.scss","modified":0,"renderable":1},{"_id":"themes/bmw/source/scss/layout/post.scss","path":"scss/layout/post.scss","modified":0,"renderable":1},{"_id":"themes/bmw/source/scss/layout/tag.scss","path":"scss/layout/tag.scss","modified":0,"renderable":1},{"_id":"themes/bmw/source/scss/layout/index.scss","path":"scss/layout/index.scss","modified":0,"renderable":1},{"_id":"themes/bmw/source/scss/partial/navigation.scss","path":"scss/partial/navigation.scss","modified":0,"renderable":1},{"_id":"themes/bmw/source/scss/partial/footer.scss","path":"scss/partial/footer.scss","modified":0,"renderable":1},{"_id":"themes/bmw/source/scss/partial/reward.scss","path":"scss/partial/reward.scss","modified":0,"renderable":1},{"_id":"themes/bmw/source/scss/partial/timeline.scss","path":"scss/partial/timeline.scss","modified":0,"renderable":1}],"Cache":[{"_id":"themes/bmw/.gitignore","hash":"f94054f0d11037f462659903f2f87d680b71a855","modified":1544705236118},{"_id":"themes/bmw/LICENSE","hash":"6b94affcc30b97ab0889de7e3908ae6cd4a20463","modified":1544705236119},{"_id":"themes/bmw/_config.yml","hash":"48f17db86a2cb519c23ebb1a276805dfc96115ed","modified":1544710748679},{"_id":"themes/bmw/README.md","hash":"f9f59d7ec06a60e8320f27505308d80ae80f29d9","modified":1544705236120},{"_id":"themes/bmw/demo._config.yml","hash":"ecf6de9435fb45e45ba89d71814190674978fcb1","modified":1544705236122},{"_id":"source/_posts/Centos7安装Python3-7.md","hash":"f42c43072c6bd1739b958b150d1a53d45433b8c6","modified":1544712709504},{"_id":"source/_posts/Centos7安装MongoDB4-0.md","hash":"9cba233d584b6e6d45ad73ce3e13bda28985f956","modified":1544712992494},{"_id":"source/_posts/Linux链接网络.md","hash":"df58877912525d003608172c8b454376f47eabe1","modified":1544712602098},{"_id":"source/_posts/Linux下安装JDK.md","hash":"65c3566d360d7f2178685b44ce8eb97eb5c8245f","modified":1544712624486},{"_id":"source/_posts/hello-world.md","hash":"aec2770c5c03832a9f5d7c6801052251842a2af0","modified":1544709169524},{"_id":"source/_posts/Maven将jar倒入本地maven仓库.md","hash":"a119d33bcbcc28fdc06543146716cc6fd2d14f56","modified":1544712316413},{"_id":"source/_posts/我的第一个博客.md","hash":"af66001937a6eb011ee5bfcd12e54e38bfffabec","modified":1544705236110},{"_id":"source/about/index.md","hash":"1a9df1c2835018b9805bf6b2b1b1fb22985f776e","modified":1544779204769},{"_id":"source/categories/index.md","hash":"02a623145654aeda6d21f39a6a16ae0de21a35c5","modified":1544705236113},{"_id":"source/friends/index.md","hash":"d7a91defc47c2c5e824feed540228db0ed40f501","modified":1544705236115},{"_id":"source/tags/index.md","hash":"340f1a22cd2dd2801ff894cc3633bbace9918b20","modified":1544705236116},{"_id":"themes/bmw/layout/archive.ejs","hash":"2ad7c6bf3a1a2faca580d6702606ca0ab220543f","modified":1544705236133},{"_id":"themes/bmw/layout/category.ejs","hash":"2ad7c6bf3a1a2faca580d6702606ca0ab220543f","modified":1544705236134},{"_id":"themes/bmw/layout/layout.ejs","hash":"fba22fd5c1105a53c13e96966b827d0f14155e84","modified":1544705236137},{"_id":"themes/bmw/layout/index.ejs","hash":"fb1ddc6e6d3972a75792b6e6b414f743e09903f7","modified":1544709149669},{"_id":"themes/bmw/layout/post.ejs","hash":"6db6be609b28defa76da5789c451b8966c0d191e","modified":1544705236138},{"_id":"themes/bmw/layout/tag.ejs","hash":"2ad7c6bf3a1a2faca580d6702606ca0ab220543f","modified":1544705236138},{"_id":"themes/bmw/layout/_partial/comment.ejs","hash":"42d1004d4a565edadea4011bc96ab7b596ef086f","modified":1544705236125},{"_id":"themes/bmw/layout/_partial/fancybox.ejs","hash":"a592090cf1ca297557025b34fe6e42b2351a8c8f","modified":1544705236126},{"_id":"themes/bmw/layout/_partial/footer.ejs","hash":"c197f17feefc53033a78302f0c202f4b16f55b80","modified":1544705236127},{"_id":"themes/bmw/layout/_partial/header.ejs","hash":"4f1bc87361a39c14d724dac3ff9b73b17987fe80","modified":1544705236127},{"_id":"themes/bmw/layout/_partial/mathjax.ejs","hash":"7eda63f9521cd46791cf194c1e5a836c06eece6f","modified":1544705236128},{"_id":"themes/bmw/layout/_partial/navigation.ejs","hash":"ccb8a83cebdee37fb20e823c0fd0dee1a50473d8","modified":1544705236129},{"_id":"themes/bmw/layout/_partial/player.ejs","hash":"cb775da5566902d99822ab35650ca75bdda19110","modified":1544705236130},{"_id":"themes/bmw/layout/_partial/reward.ejs","hash":"bde589e87662ab36c501482ab82f2936cf049868","modified":1544705236131},{"_id":"themes/bmw/layout/_partial/timer.ejs","hash":"0fcca47acd4eb686cf25fb366b0b29046a1b5512","modified":1544705236133},{"_id":"themes/bmw/layout/_partial/social.ejs","hash":"cf60dfe8c36c0ba8fd2160182f001c4131ae93af","modified":1544705236132},{"_id":"themes/bmw/layout/component/passage-viewer.ejs","hash":"549eeb3c541a832430fc701ad7552164e717c7f8","modified":1544705236136},{"_id":"themes/bmw/layout/component/back-to-up.ejs","hash":"d202c36d4c017ebeec766eee3ae6abebb6580d10","modified":1544705236135},{"_id":"themes/bmw/layout/component/timeline.ejs","hash":"509c72cdb2640d005dd3c4b2a15630875469262b","modified":1544705236136},{"_id":"themes/bmw/source/css/github-markdown.css","hash":"8fd7083b01da6ae8c84253dc7120424aa451fa44","modified":1544705236141},{"_id":"themes/bmw/source/css/base.css","hash":"4c5694ba4383ed9722afcd5698c3107cf8a4fd75","modified":1544705236140},{"_id":"themes/bmw/source/css/highlight.css","hash":"ab7490c6de57fdc9a053de30a3b19d06a8f0c610","modified":1544705236142},{"_id":"themes/bmw/source/css/base.css.map","hash":"bb3be9adbdeff7685241878cd2c1904781fa783a","modified":1544705236141},{"_id":"themes/bmw/source/css/prism.css","hash":"43e01a91ef2c8d6df3e147487495416e0aea4559","modified":1544705236142},{"_id":"themes/bmw/source/icon/demo_fontclass.html","hash":"9e7897f27086d6f7fe7bc91738306e96d3a2036a","modified":1544705236143},{"_id":"themes/bmw/source/icon/iconfont.css","hash":"84cce1056019dde37356fa0da4edc80b4deaedb7","modified":1544705236144},{"_id":"themes/bmw/source/icon/iconfont.js","hash":"c5e9d861865c112c1b9971e0409503ed95c815c0","modified":1544705236145},{"_id":"themes/bmw/source/icon/iconfont.eot","hash":"adc3cc9072b4d2f3939fb2f177ddcf7bd4ab009a","modified":1544705236144},{"_id":"themes/bmw/source/images/alihb.png","hash":"a46686ac74eeb9a86a043f4c24d5d15278d9c409","modified":1544705236147},{"_id":"themes/bmw/source/icon/iconfont.svg","hash":"be82d0f1142bec616f9e612f0e09c8e12f2b270b","modified":1544705236146},{"_id":"themes/bmw/source/icon/iconfont.woff","hash":"6dd1f927e13de5db063a4898e563a70a14e13b80","modified":1544705236147},{"_id":"themes/bmw/source/icon/iconfont.ttf","hash":"0a3b2a7882c61d6b4c85fe4e72f9f26948c6758d","modified":1544705236146},{"_id":"themes/bmw/source/images/alipay.png","hash":"b84b7646fe28e49acb615854085b5e31f63158f5","modified":1544705236148},{"_id":"themes/bmw/source/images/favicon.ico","hash":"cc7c201861748e92f4809507096df74a40ef496a","modified":1544705236148},{"_id":"themes/bmw/source/images/godbmw.jpeg","hash":"8e5ad0c2e6f3527f9a6911b4a51972af59d97f83","modified":1544705236149},{"_id":"themes/bmw/source/images/hhongwen.jpg","hash":"3602c3f35bd36fa1aa0618e88d560a5dd5ff9f45","modified":1544705236150},{"_id":"themes/bmw/source/images/loveinliuy.png","hash":"5f88ab5c6e4309e76bf86a517a6ae2697db876a3","modified":1544705236150},{"_id":"themes/bmw/source/js/util.js","hash":"996a1e786c8dd62bfbd303e4dc50288641872945","modified":1544705236152},{"_id":"themes/bmw/source/scss/animation.scss","hash":"93e5404428211df66b5d22c4f897967fa0292321","modified":1544705236154},{"_id":"themes/bmw/source/scss/article.scss","hash":"442b2df5e113a3bdde90d9817c8ae6ac86ceb784","modified":1544705236154},{"_id":"themes/bmw/source/scss/base.scss","hash":"9a4c78459596363a6211e08e083b08573af63836","modified":1544705236155},{"_id":"themes/bmw/source/images/smile.png","hash":"437e7c49e786bbbe7d11ef9080a112f47ffd5023","modified":1544705236151},{"_id":"themes/bmw/source/images/touch-icon.png","hash":"df5a490c2e8d549ca767505fbe46eed3cbe3df43","modified":1544705236151},{"_id":"themes/bmw/source/images/wechat.png","hash":"f764487e6976aa2556655edf276decaa0f07bc87","modified":1544705236152},{"_id":"themes/bmw/source/scss/mathjax.scss","hash":"cd203121393c8dd4465fe8e8f6bbf54e15827c5d","modified":1544705236159},{"_id":"themes/bmw/source/scss/vcomments.scss","hash":"f740855ccbc16815010960d79af98e2f9ac987c7","modified":1544705236161},{"_id":"themes/bmw/source/stylus/highlight.styl","hash":"033d06cf21c9d363408357b4991ef02a4f4215ca","modified":1544705236163},{"_id":"themes/bmw/source/js/valine.min.js","hash":"81c1eb7f0d98caf37bd0511731c48140ea2ddccd","modified":1544705236153},{"_id":"themes/bmw/source/scss/layout/about.scss","hash":"e411c5515fea5f0575f578e8a2ddbcc460e8987e","modified":1544705236156},{"_id":"themes/bmw/source/scss/layout/friend.scss","hash":"9d11caa9d09e0a12d77409be0b99f1336999e1dd","modified":1544705236157},{"_id":"themes/bmw/source/scss/layout/category.scss","hash":"5218ac4cb2037cc8baed30241d2afbd3d6f335a0","modified":1544705236156},{"_id":"themes/bmw/source/scss/layout/home.scss","hash":"7fe959b99c8a683dcb4b696ce1ad8b6287d143dd","modified":1544705236157},{"_id":"themes/bmw/source/scss/layout/post.scss","hash":"73ccac900e43a5a1ef5a91123c0c91e01b29a762","modified":1544705236158},{"_id":"themes/bmw/source/scss/layout/tag.scss","hash":"a0aabd7b591b75195568aa60fdf1bf0e04db36be","modified":1544705236159},{"_id":"themes/bmw/source/scss/layout/index.scss","hash":"897bd1071ecab6a7516eb27f6bb3d14e43439a17","modified":1544705236157},{"_id":"themes/bmw/source/scss/partial/navigation.scss","hash":"a9865aecc94cf8eeb0b2d1e47b8e6efa1136edf9","modified":1544705236160},{"_id":"themes/bmw/source/scss/partial/footer.scss","hash":"b694612b68db7999f5013a7d4bca7285fbc73a13","modified":1544705236160},{"_id":"themes/bmw/source/scss/partial/reward.scss","hash":"7d0b09ba7b6421b85cc75570c599776aa33e2bfb","modified":1544705236161},{"_id":"themes/bmw/source/scss/partial/timeline.scss","hash":"e59e1820dfbae80a178e41e0082c4a76d5930de0","modified":1544705236161}],"Category":[{"name":"随笔","_id":"cjpmpmfrj000acguiibd5v3mf"},{"name":"Java","_id":"cjpmpmfro000dcguif68ky0sx"},{"name":"Linux","_id":"cjpmpnn0g000ncgui15l9ns6t"}],"Data":[],"Page":[{"title":"about","date":"2018-12-13T02:59:24.000Z","type":"about","categories":null,"tags":null,"_content":"\n“吾生也有涯，而知也无涯。”\n\n2018年12月12日搭建了此博客，记录一下这一天。此博客用Hexo + Netlify 搭建的静态网站。\n\n之前一直用阿里的Leanote来记录笔记，也用Leanote搭建过个人博客，但是总感觉和太过庞杂，想要简洁一些可操作性强一点的个人博客，偶然看到netlify托管网站，然后看到了Hexo + Netlify 搭建的静态网站突然感觉这就是我想要的方式，于是乎搭建了此博客。\n\n原本只是简单的写了点作为记录，但是今天（2018年12月13日）还是想需要正式一下这篇文章，昨天的博客主题还是Hexo默认主题，今天看到了[hexo-theme-bmw](https://godbmw.com/)主题很清爽（98年诞生的小姐姐，想想自己™白活了）然后就借鉴来了，于是乎对原有内容重新构建一下，为了不给以后的自己有可乘之机。\n\n“每一个技术的学习，都是从模仿开始。” 这句话是朋友博客上拷贝来的，记录一下。\n\n## 目前状况\n\n混迹于二线城市，目前从事于一家创业公司。\n15年毕业到18年5月份从事Java技术栈相关工作，之后现在主要Nodejs、Python等技术栈。\n\n创建博客的主要原因是想提升一下自己，并对自己有一个长远的规划。现在总感觉自己的记忆在衰退，很多已经做过的事情再次接手时总想起人生的终极问题：我是谁？我从哪里来？我要到哪里去？\n我想还是需要将生活和学习的点滴记录下来，无论是踩过的还是坑爬过的山，记录的过程中都是对过往进行总结和思考，也是对自己的成长的总结。\n\n## 规划和期望\n\n做博客当然要给自己一个规划和要求，希望自己能坚持每周分享一篇博，至于内容还没有硬性要求，只要自己满意就好，养成良好的记录和总结的习惯。\n记录生活、也记录工作和学习，也希望在记录的时候认识更多志同道合的人，一起分享。\n\n## 总结\n\n此博客刚刚创建，那么总有不断完善的过程，目前规划是现将博客基本结构搭建起来，然后分享一下搭建和改善的过程，这是一个大的工作量，但是是一个长期任务，希望不要是这样就草草结束，不希望一切都是最初的样子，那样又有什么意义呢？\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2018-12-13 10:59:24\ntype: \"about\"\ncategories:\ntags:\n---\n\n“吾生也有涯，而知也无涯。”\n\n2018年12月12日搭建了此博客，记录一下这一天。此博客用Hexo + Netlify 搭建的静态网站。\n\n之前一直用阿里的Leanote来记录笔记，也用Leanote搭建过个人博客，但是总感觉和太过庞杂，想要简洁一些可操作性强一点的个人博客，偶然看到netlify托管网站，然后看到了Hexo + Netlify 搭建的静态网站突然感觉这就是我想要的方式，于是乎搭建了此博客。\n\n原本只是简单的写了点作为记录，但是今天（2018年12月13日）还是想需要正式一下这篇文章，昨天的博客主题还是Hexo默认主题，今天看到了[hexo-theme-bmw](https://godbmw.com/)主题很清爽（98年诞生的小姐姐，想想自己™白活了）然后就借鉴来了，于是乎对原有内容重新构建一下，为了不给以后的自己有可乘之机。\n\n“每一个技术的学习，都是从模仿开始。” 这句话是朋友博客上拷贝来的，记录一下。\n\n## 目前状况\n\n混迹于二线城市，目前从事于一家创业公司。\n15年毕业到18年5月份从事Java技术栈相关工作，之后现在主要Nodejs、Python等技术栈。\n\n创建博客的主要原因是想提升一下自己，并对自己有一个长远的规划。现在总感觉自己的记忆在衰退，很多已经做过的事情再次接手时总想起人生的终极问题：我是谁？我从哪里来？我要到哪里去？\n我想还是需要将生活和学习的点滴记录下来，无论是踩过的还是坑爬过的山，记录的过程中都是对过往进行总结和思考，也是对自己的成长的总结。\n\n## 规划和期望\n\n做博客当然要给自己一个规划和要求，希望自己能坚持每周分享一篇博，至于内容还没有硬性要求，只要自己满意就好，养成良好的记录和总结的习惯。\n记录生活、也记录工作和学习，也希望在记录的时候认识更多志同道合的人，一起分享。\n\n## 总结\n\n此博客刚刚创建，那么总有不断完善的过程，目前规划是现将博客基本结构搭建起来，然后分享一下搭建和改善的过程，这是一个大的工作量，但是是一个长期任务，希望不要是这样就草草结束，不希望一切都是最初的样子，那样又有什么意义呢？\n","updated":"2018-12-14T09:20:04.769Z","path":"about/index.html","_id":"cjpmpmfrb0001cguigvzbuhj6","comments":1,"layout":"page","content":"<p>“吾生也有涯，而知也无涯。”</p>\n<p>2018年12月12日搭建了此博客，记录一下这一天。此博客用Hexo + Netlify 搭建的静态网站。</p>\n<p>之前一直用阿里的Leanote来记录笔记，也用Leanote搭建过个人博客，但是总感觉和太过庞杂，想要简洁一些可操作性强一点的个人博客，偶然看到netlify托管网站，然后看到了Hexo + Netlify 搭建的静态网站突然感觉这就是我想要的方式，于是乎搭建了此博客。</p>\n<p>原本只是简单的写了点作为记录，但是今天（2018年12月13日）还是想需要正式一下这篇文章，昨天的博客主题还是Hexo默认主题，今天看到了<a href=\"https://godbmw.com/\" target=\"_blank\" rel=\"noopener\">hexo-theme-bmw</a>主题很清爽（98年诞生的小姐姐，想想自己™白活了）然后就借鉴来了，于是乎对原有内容重新构建一下，为了不给以后的自己有可乘之机。</p>\n<p>“每一个技术的学习，都是从模仿开始。” 这句话是朋友博客上拷贝来的，记录一下。</p>\n<h2 id=\"目前状况\"><a href=\"#目前状况\" class=\"headerlink\" title=\"目前状况\"></a>目前状况</h2><p>混迹于二线城市，目前从事于一家创业公司。<br>15年毕业到18年5月份从事Java技术栈相关工作，之后现在主要Nodejs、Python等技术栈。</p>\n<p>创建博客的主要原因是想提升一下自己，并对自己有一个长远的规划。现在总感觉自己的记忆在衰退，很多已经做过的事情再次接手时总想起人生的终极问题：我是谁？我从哪里来？我要到哪里去？<br>我想还是需要将生活和学习的点滴记录下来，无论是踩过的还是坑爬过的山，记录的过程中都是对过往进行总结和思考，也是对自己的成长的总结。</p>\n<h2 id=\"规划和期望\"><a href=\"#规划和期望\" class=\"headerlink\" title=\"规划和期望\"></a>规划和期望</h2><p>做博客当然要给自己一个规划和要求，希望自己能坚持每周分享一篇博，至于内容还没有硬性要求，只要自己满意就好，养成良好的记录和总结的习惯。<br>记录生活、也记录工作和学习，也希望在记录的时候认识更多志同道合的人，一起分享。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>此博客刚刚创建，那么总有不断完善的过程，目前规划是现将博客基本结构搭建起来，然后分享一下搭建和改善的过程，这是一个大的工作量，但是是一个长期任务，希望不要是这样就草草结束，不希望一切都是最初的样子，那样又有什么意义呢？</p>\n","site":{"data":{}},"excerpt":"","more":"<p>“吾生也有涯，而知也无涯。”</p>\n<p>2018年12月12日搭建了此博客，记录一下这一天。此博客用Hexo + Netlify 搭建的静态网站。</p>\n<p>之前一直用阿里的Leanote来记录笔记，也用Leanote搭建过个人博客，但是总感觉和太过庞杂，想要简洁一些可操作性强一点的个人博客，偶然看到netlify托管网站，然后看到了Hexo + Netlify 搭建的静态网站突然感觉这就是我想要的方式，于是乎搭建了此博客。</p>\n<p>原本只是简单的写了点作为记录，但是今天（2018年12月13日）还是想需要正式一下这篇文章，昨天的博客主题还是Hexo默认主题，今天看到了<a href=\"https://godbmw.com/\" target=\"_blank\" rel=\"noopener\">hexo-theme-bmw</a>主题很清爽（98年诞生的小姐姐，想想自己™白活了）然后就借鉴来了，于是乎对原有内容重新构建一下，为了不给以后的自己有可乘之机。</p>\n<p>“每一个技术的学习，都是从模仿开始。” 这句话是朋友博客上拷贝来的，记录一下。</p>\n<h2 id=\"目前状况\"><a href=\"#目前状况\" class=\"headerlink\" title=\"目前状况\"></a>目前状况</h2><p>混迹于二线城市，目前从事于一家创业公司。<br>15年毕业到18年5月份从事Java技术栈相关工作，之后现在主要Nodejs、Python等技术栈。</p>\n<p>创建博客的主要原因是想提升一下自己，并对自己有一个长远的规划。现在总感觉自己的记忆在衰退，很多已经做过的事情再次接手时总想起人生的终极问题：我是谁？我从哪里来？我要到哪里去？<br>我想还是需要将生活和学习的点滴记录下来，无论是踩过的还是坑爬过的山，记录的过程中都是对过往进行总结和思考，也是对自己的成长的总结。</p>\n<h2 id=\"规划和期望\"><a href=\"#规划和期望\" class=\"headerlink\" title=\"规划和期望\"></a>规划和期望</h2><p>做博客当然要给自己一个规划和要求，希望自己能坚持每周分享一篇博，至于内容还没有硬性要求，只要自己满意就好，养成良好的记录和总结的习惯。<br>记录生活、也记录工作和学习，也希望在记录的时候认识更多志同道合的人，一起分享。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>此博客刚刚创建，那么总有不断完善的过程，目前规划是现将博客基本结构搭建起来，然后分享一下搭建和改善的过程，这是一个大的工作量，但是是一个长期任务，希望不要是这样就草草结束，不希望一切都是最初的样子，那样又有什么意义呢？</p>\n"},{"title":"categories","date":"2018-12-13T02:58:51.000Z","type":"categories","categories":null,"tags":null,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2018-12-13 10:58:51\ntype: \"categories\"\ncategories:\ntags:\n---\n","updated":"2018-12-13T12:47:16.113Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjpmpmfrd0003cguiks6vjeem","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2018-12-13T02:55:49.000Z","type":"tags","categories":null,"tags":null,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2018-12-13 10:55:49\ntype: \"tags\"\ncategories:\ntags: \n---\n","updated":"2018-12-13T12:47:16.116Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjpmpmfrf0005cguion6bjl26","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"friends","date":"2018-12-13T02:59:38.000Z","type":"friends","categories":null,"tags":null,"_content":"","source":"friends/index.md","raw":"---\ntitle: friends\ndate: 2018-12-13 10:59:38\ntype: \"friends\"\ncategories: \ntags:\n---\n","updated":"2018-12-13T12:47:16.115Z","path":"friends/index.html","comments":1,"layout":"page","_id":"cjpmpmfrg0007cgui6a6u8ns5","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Centos7安装MongoDB4.0","date":"2018-12-13T14:33:19.000Z","_content":"\n由于项目需要使用MongoDB，所以记录一下在Centos7下安装MongoDB的方法。\nMongoDB 是一个基于分布式文件存储的数据库。由 C++ 语言编写。旨在为 WEB 应用提供可扩展的高性能数据存储解决方案。\nMongoDB 是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。\n\n<!--more-->\n\n由于项目需要使用MongoDB，所以记录一下在Centos7下安装MongoDB的方法。\nMongoDB 是一个基于分布式文件存储的数据库。由 C++ 语言编写。旨在为 WEB 应用提供可扩展的高性能数据存储解决方案。\nMongoDB 是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。\n\n## 安装包下载\n> [MongoDB点击跳转下载地址](https://www.mongodb.com/download-center#community)，打开地址后选择Community Server,然后选择Linux下载对应的版本安装包即可，但是下拉列表中有很多Linux安装包，Centos选择带RHEL的安装包，这里选**择RHEl 7 Linux 64-bit x64**版本的安装包即可，下载后上传到对应Linux服务器。\n\n## MongoDB安装\n> 在安装时均使用root用户，如果非root用户则在命令前加sudo命令，用来以root身份运行\n\n```linux\n# 1.在usr/local/下创建mongodb文件夹\ncd /usr/local/\nmkdir mongodb\n\n# 2.解压文件\ntar -xzvf mongodb-linux-x86_64-rhel70-4.0.1.tgz\n\n# 3.将解压后的文件下所有内容移动到mongodb文件夹下\n# 注意这里不是将mongodb-linux-x86_64-rhel70-4.0.1文件夹移动到创建好的mongodb下，而是文件下的内容\nmv mongodb-linux-x86_64-rhel70-4.0.1/*  /usr/local/mongodb/\n\n# 4.添加mongodb的环境变量\nvi /etc/profile\n\n# 5.在文件末尾插入如下内容\nexport MONGODB_HOME=/usr/local/mongodb  \nexport PATH=$PATH:$MONGODB_HOME/bin\n\n# 6.修改保存后要重启系统配置，执行命令如下\nsource /etc/profile\n```\n\n> 经过上述步骤，基本的配置已经完成了，接下来创建mongodb数据文件和日志文件的存放位置，并且对启动项进行配置，启动项配置其中包含数据库文件路径和日志文件路径，填写上述将要创建的文件夹或文件路径。具体步骤如下：\n\n```linux\n# 1.创建数据库文件存放路径\ncd /usr/local/mongodb\nmkdir -p data/db\nchmod -r 777 data/db\n\n# 2.创建日志文件\ncd /usr/local/mongodb\nmkdir logs\ncd logs\ntouch mongodb.log\n\n# 3.创建启动文件\ncd /usr/local/mongodb/bin\ntouch mongodb.conf\n\n# 4.编辑启动文件\nvi mongodb.conf\n\n# 5.在文件中插入如下内容\ndbpath = /usr/local/mongodb/data/db  #数据文件存放目录\nlogpath = /usr/local/mongodb/logs/mongodb.log #日志存放目录\nport = 27017 #端口\nfork = true #以守护程序的方式启用，即在后台运行\nlogappend = true\nmaxConns = 5000\nstorageEngine = mmapv1\n\n```\n\n## 启动数据库\n> 经过配置后即可启动数据库了，启动数据库文件在bin目录下执行下术命令\n\n```linux\n# 切换到bin目录下\ncd /usr/local/mongodb/bin\n\n# 启动数据库\n./mongod mongodb.conf\n\n# 访问数据库\n./mongo\n\n```\n\n## 小结\n> 安装mongodb和配置是很简单的，过程还是比较顺利。大家一起学习！","source":"_posts/Centos7安装MongoDB4-0.md","raw":"---\ntitle: Centos7安装MongoDB4.0\ndate: 2018-12-13 22:33:19\ntags: MongoDB\ncategories: Linux\n---\n\n由于项目需要使用MongoDB，所以记录一下在Centos7下安装MongoDB的方法。\nMongoDB 是一个基于分布式文件存储的数据库。由 C++ 语言编写。旨在为 WEB 应用提供可扩展的高性能数据存储解决方案。\nMongoDB 是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。\n\n<!--more-->\n\n由于项目需要使用MongoDB，所以记录一下在Centos7下安装MongoDB的方法。\nMongoDB 是一个基于分布式文件存储的数据库。由 C++ 语言编写。旨在为 WEB 应用提供可扩展的高性能数据存储解决方案。\nMongoDB 是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。\n\n## 安装包下载\n> [MongoDB点击跳转下载地址](https://www.mongodb.com/download-center#community)，打开地址后选择Community Server,然后选择Linux下载对应的版本安装包即可，但是下拉列表中有很多Linux安装包，Centos选择带RHEL的安装包，这里选**择RHEl 7 Linux 64-bit x64**版本的安装包即可，下载后上传到对应Linux服务器。\n\n## MongoDB安装\n> 在安装时均使用root用户，如果非root用户则在命令前加sudo命令，用来以root身份运行\n\n```linux\n# 1.在usr/local/下创建mongodb文件夹\ncd /usr/local/\nmkdir mongodb\n\n# 2.解压文件\ntar -xzvf mongodb-linux-x86_64-rhel70-4.0.1.tgz\n\n# 3.将解压后的文件下所有内容移动到mongodb文件夹下\n# 注意这里不是将mongodb-linux-x86_64-rhel70-4.0.1文件夹移动到创建好的mongodb下，而是文件下的内容\nmv mongodb-linux-x86_64-rhel70-4.0.1/*  /usr/local/mongodb/\n\n# 4.添加mongodb的环境变量\nvi /etc/profile\n\n# 5.在文件末尾插入如下内容\nexport MONGODB_HOME=/usr/local/mongodb  \nexport PATH=$PATH:$MONGODB_HOME/bin\n\n# 6.修改保存后要重启系统配置，执行命令如下\nsource /etc/profile\n```\n\n> 经过上述步骤，基本的配置已经完成了，接下来创建mongodb数据文件和日志文件的存放位置，并且对启动项进行配置，启动项配置其中包含数据库文件路径和日志文件路径，填写上述将要创建的文件夹或文件路径。具体步骤如下：\n\n```linux\n# 1.创建数据库文件存放路径\ncd /usr/local/mongodb\nmkdir -p data/db\nchmod -r 777 data/db\n\n# 2.创建日志文件\ncd /usr/local/mongodb\nmkdir logs\ncd logs\ntouch mongodb.log\n\n# 3.创建启动文件\ncd /usr/local/mongodb/bin\ntouch mongodb.conf\n\n# 4.编辑启动文件\nvi mongodb.conf\n\n# 5.在文件中插入如下内容\ndbpath = /usr/local/mongodb/data/db  #数据文件存放目录\nlogpath = /usr/local/mongodb/logs/mongodb.log #日志存放目录\nport = 27017 #端口\nfork = true #以守护程序的方式启用，即在后台运行\nlogappend = true\nmaxConns = 5000\nstorageEngine = mmapv1\n\n```\n\n## 启动数据库\n> 经过配置后即可启动数据库了，启动数据库文件在bin目录下执行下术命令\n\n```linux\n# 切换到bin目录下\ncd /usr/local/mongodb/bin\n\n# 启动数据库\n./mongod mongodb.conf\n\n# 访问数据库\n./mongo\n\n```\n\n## 小结\n> 安装mongodb和配置是很简单的，过程还是比较顺利。大家一起学习！","slug":"Centos7安装MongoDB4-0","published":1,"updated":"2018-12-13T14:56:32.494Z","_id":"cjpmpmfr60000cgui5py6kffu","comments":1,"layout":"post","photos":[],"link":"","content":"<p>由于项目需要使用MongoDB，所以记录一下在Centos7下安装MongoDB的方法。<br>MongoDB 是一个基于分布式文件存储的数据库。由 C++ 语言编写。旨在为 WEB 应用提供可扩展的高性能数据存储解决方案。<br>MongoDB 是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。</p>\n<a id=\"more\"></a>\n<p>由于项目需要使用MongoDB，所以记录一下在Centos7下安装MongoDB的方法。<br>MongoDB 是一个基于分布式文件存储的数据库。由 C++ 语言编写。旨在为 WEB 应用提供可扩展的高性能数据存储解决方案。<br>MongoDB 是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。</p>\n<h2 id=\"安装包下载\"><a href=\"#安装包下载\" class=\"headerlink\" title=\"安装包下载\"></a>安装包下载</h2><blockquote>\n<p><a href=\"https://www.mongodb.com/download-center#community\" target=\"_blank\" rel=\"noopener\">MongoDB点击跳转下载地址</a>，打开地址后选择Community Server,然后选择Linux下载对应的版本安装包即可，但是下拉列表中有很多Linux安装包，Centos选择带RHEL的安装包，这里选<strong>择RHEl 7 Linux 64-bit x64</strong>版本的安装包即可，下载后上传到对应Linux服务器。</p>\n</blockquote>\n<h2 id=\"MongoDB安装\"><a href=\"#MongoDB安装\" class=\"headerlink\" title=\"MongoDB安装\"></a>MongoDB安装</h2><blockquote>\n<p>在安装时均使用root用户，如果非root用户则在命令前加sudo命令，用来以root身份运行</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 1.在usr/local/下创建mongodb文件夹</span><br><span class=\"line\">cd /usr/local/</span><br><span class=\"line\">mkdir mongodb</span><br><span class=\"line\"></span><br><span class=\"line\"># 2.解压文件</span><br><span class=\"line\">tar -xzvf mongodb-linux-x86_64-rhel70-4.0.1.tgz</span><br><span class=\"line\"></span><br><span class=\"line\"># 3.将解压后的文件下所有内容移动到mongodb文件夹下</span><br><span class=\"line\"># 注意这里不是将mongodb-linux-x86_64-rhel70-4.0.1文件夹移动到创建好的mongodb下，而是文件下的内容</span><br><span class=\"line\">mv mongodb-linux-x86_64-rhel70-4.0.1/*  /usr/local/mongodb/</span><br><span class=\"line\"></span><br><span class=\"line\"># 4.添加mongodb的环境变量</span><br><span class=\"line\">vi /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\"># 5.在文件末尾插入如下内容</span><br><span class=\"line\">export MONGODB_HOME=/usr/local/mongodb  </span><br><span class=\"line\">export PATH=$PATH:$MONGODB_HOME/bin</span><br><span class=\"line\"></span><br><span class=\"line\"># 6.修改保存后要重启系统配置，执行命令如下</span><br><span class=\"line\">source /etc/profile</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>经过上述步骤，基本的配置已经完成了，接下来创建mongodb数据文件和日志文件的存放位置，并且对启动项进行配置，启动项配置其中包含数据库文件路径和日志文件路径，填写上述将要创建的文件夹或文件路径。具体步骤如下：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 1.创建数据库文件存放路径</span><br><span class=\"line\">cd /usr/local/mongodb</span><br><span class=\"line\">mkdir -p data/db</span><br><span class=\"line\">chmod -r 777 data/db</span><br><span class=\"line\"></span><br><span class=\"line\"># 2.创建日志文件</span><br><span class=\"line\">cd /usr/local/mongodb</span><br><span class=\"line\">mkdir logs</span><br><span class=\"line\">cd logs</span><br><span class=\"line\">touch mongodb.log</span><br><span class=\"line\"></span><br><span class=\"line\"># 3.创建启动文件</span><br><span class=\"line\">cd /usr/local/mongodb/bin</span><br><span class=\"line\">touch mongodb.conf</span><br><span class=\"line\"></span><br><span class=\"line\"># 4.编辑启动文件</span><br><span class=\"line\">vi mongodb.conf</span><br><span class=\"line\"></span><br><span class=\"line\"># 5.在文件中插入如下内容</span><br><span class=\"line\">dbpath = /usr/local/mongodb/data/db  #数据文件存放目录</span><br><span class=\"line\">logpath = /usr/local/mongodb/logs/mongodb.log #日志存放目录</span><br><span class=\"line\">port = 27017 #端口</span><br><span class=\"line\">fork = true #以守护程序的方式启用，即在后台运行</span><br><span class=\"line\">logappend = true</span><br><span class=\"line\">maxConns = 5000</span><br><span class=\"line\">storageEngine = mmapv1</span><br></pre></td></tr></table></figure>\n<h2 id=\"启动数据库\"><a href=\"#启动数据库\" class=\"headerlink\" title=\"启动数据库\"></a>启动数据库</h2><blockquote>\n<p>经过配置后即可启动数据库了，启动数据库文件在bin目录下执行下术命令</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 切换到bin目录下</span><br><span class=\"line\">cd /usr/local/mongodb/bin</span><br><span class=\"line\"></span><br><span class=\"line\"># 启动数据库</span><br><span class=\"line\">./mongod mongodb.conf</span><br><span class=\"line\"></span><br><span class=\"line\"># 访问数据库</span><br><span class=\"line\">./mongo</span><br></pre></td></tr></table></figure>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><blockquote>\n<p>安装mongodb和配置是很简单的，过程还是比较顺利。大家一起学习！</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>由于项目需要使用MongoDB，所以记录一下在Centos7下安装MongoDB的方法。<br>MongoDB 是一个基于分布式文件存储的数据库。由 C++ 语言编写。旨在为 WEB 应用提供可扩展的高性能数据存储解决方案。<br>MongoDB 是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。</p>","more":"<p>由于项目需要使用MongoDB，所以记录一下在Centos7下安装MongoDB的方法。<br>MongoDB 是一个基于分布式文件存储的数据库。由 C++ 语言编写。旨在为 WEB 应用提供可扩展的高性能数据存储解决方案。<br>MongoDB 是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。</p>\n<h2 id=\"安装包下载\"><a href=\"#安装包下载\" class=\"headerlink\" title=\"安装包下载\"></a>安装包下载</h2><blockquote>\n<p><a href=\"https://www.mongodb.com/download-center#community\" target=\"_blank\" rel=\"noopener\">MongoDB点击跳转下载地址</a>，打开地址后选择Community Server,然后选择Linux下载对应的版本安装包即可，但是下拉列表中有很多Linux安装包，Centos选择带RHEL的安装包，这里选<strong>择RHEl 7 Linux 64-bit x64</strong>版本的安装包即可，下载后上传到对应Linux服务器。</p>\n</blockquote>\n<h2 id=\"MongoDB安装\"><a href=\"#MongoDB安装\" class=\"headerlink\" title=\"MongoDB安装\"></a>MongoDB安装</h2><blockquote>\n<p>在安装时均使用root用户，如果非root用户则在命令前加sudo命令，用来以root身份运行</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 1.在usr/local/下创建mongodb文件夹</span><br><span class=\"line\">cd /usr/local/</span><br><span class=\"line\">mkdir mongodb</span><br><span class=\"line\"></span><br><span class=\"line\"># 2.解压文件</span><br><span class=\"line\">tar -xzvf mongodb-linux-x86_64-rhel70-4.0.1.tgz</span><br><span class=\"line\"></span><br><span class=\"line\"># 3.将解压后的文件下所有内容移动到mongodb文件夹下</span><br><span class=\"line\"># 注意这里不是将mongodb-linux-x86_64-rhel70-4.0.1文件夹移动到创建好的mongodb下，而是文件下的内容</span><br><span class=\"line\">mv mongodb-linux-x86_64-rhel70-4.0.1/*  /usr/local/mongodb/</span><br><span class=\"line\"></span><br><span class=\"line\"># 4.添加mongodb的环境变量</span><br><span class=\"line\">vi /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\"># 5.在文件末尾插入如下内容</span><br><span class=\"line\">export MONGODB_HOME=/usr/local/mongodb  </span><br><span class=\"line\">export PATH=$PATH:$MONGODB_HOME/bin</span><br><span class=\"line\"></span><br><span class=\"line\"># 6.修改保存后要重启系统配置，执行命令如下</span><br><span class=\"line\">source /etc/profile</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>经过上述步骤，基本的配置已经完成了，接下来创建mongodb数据文件和日志文件的存放位置，并且对启动项进行配置，启动项配置其中包含数据库文件路径和日志文件路径，填写上述将要创建的文件夹或文件路径。具体步骤如下：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 1.创建数据库文件存放路径</span><br><span class=\"line\">cd /usr/local/mongodb</span><br><span class=\"line\">mkdir -p data/db</span><br><span class=\"line\">chmod -r 777 data/db</span><br><span class=\"line\"></span><br><span class=\"line\"># 2.创建日志文件</span><br><span class=\"line\">cd /usr/local/mongodb</span><br><span class=\"line\">mkdir logs</span><br><span class=\"line\">cd logs</span><br><span class=\"line\">touch mongodb.log</span><br><span class=\"line\"></span><br><span class=\"line\"># 3.创建启动文件</span><br><span class=\"line\">cd /usr/local/mongodb/bin</span><br><span class=\"line\">touch mongodb.conf</span><br><span class=\"line\"></span><br><span class=\"line\"># 4.编辑启动文件</span><br><span class=\"line\">vi mongodb.conf</span><br><span class=\"line\"></span><br><span class=\"line\"># 5.在文件中插入如下内容</span><br><span class=\"line\">dbpath = /usr/local/mongodb/data/db  #数据文件存放目录</span><br><span class=\"line\">logpath = /usr/local/mongodb/logs/mongodb.log #日志存放目录</span><br><span class=\"line\">port = 27017 #端口</span><br><span class=\"line\">fork = true #以守护程序的方式启用，即在后台运行</span><br><span class=\"line\">logappend = true</span><br><span class=\"line\">maxConns = 5000</span><br><span class=\"line\">storageEngine = mmapv1</span><br></pre></td></tr></table></figure>\n<h2 id=\"启动数据库\"><a href=\"#启动数据库\" class=\"headerlink\" title=\"启动数据库\"></a>启动数据库</h2><blockquote>\n<p>经过配置后即可启动数据库了，启动数据库文件在bin目录下执行下术命令</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 切换到bin目录下</span><br><span class=\"line\">cd /usr/local/mongodb/bin</span><br><span class=\"line\"></span><br><span class=\"line\"># 启动数据库</span><br><span class=\"line\">./mongod mongodb.conf</span><br><span class=\"line\"></span><br><span class=\"line\"># 访问数据库</span><br><span class=\"line\">./mongo</span><br></pre></td></tr></table></figure>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><blockquote>\n<p>安装mongodb和配置是很简单的，过程还是比较顺利。大家一起学习！</p>\n</blockquote>"},{"title":"Linux链接网络","date":"2018-12-13T14:32:15.000Z","_content":"\nLinux在安装系统结束后总要面临一个主要问题，网络连接。习惯了Windows的图形界面连接网络是轻而易举的事，但是对于Linux命令操作很不容易上手，在此做记录方便后期使用也供大家参考。\n\n<!--more-->\n\nLinux在安装系统结束后总要面临一个主要问题，网络连接。习惯了Windows的图形界面连接网络是轻而易举的事，但是对于Linux命令操作很不容易上手，在此做记录方便后期使用也供大家参考。\n\n## 查看网卡\n\n> 输入命令后，打开网卡所在文件\n\n\n``` bash\n    #/etc/sysconfig/network-scripts/\n    #vi ifcfg-eth0\n    \n    EVICE=eth0\n    HWADDR=6E:D6:7D:EE:4D:93\n    TYPE=Ethernet\n    UUID=08212c73-eb02-4ad7-9969-ed3bc7a352ed\n    ONBOOT=no\n    NM_CONTROLLED=yes\n    BOOTPROTO=dhcp\n```\n\n> HWADDR:Linux的MAC地址\n> ONBOOT=yes:开启网络连接\n> 网卡自动获取IP配置将ONBOOT=no 改为ONBOOT=yes即可\n> 编辑、保存、然后重启网卡\n\n``` bash\n    # service network restart\n```\n\n## 存在多个网卡\n> 如果存在多个网卡会在/etc/sysconfig/network-scripts/ 目录下存在多个ifcfg-eth0文件，如ifcfg-eth1、ifcfg-eth2、ifcfg-eth3等，具体哪个网卡好用需要挨个试探，只保持其中一个网卡的配置为ONBOOT=yes，然后重启网卡。\n\n## 网卡配置静态IP\n> 配置静态IP同样修改好用的网卡，如ifcfg-eth0，具体配置如下\n\n``` bash\n    #/etc/sysconfig/network-scripts/\n    #vi ifcfg-eth0\n    \n    DEVICE=eth0\n    HWADDR=2E:8A:C5:9A:AC:70\n    TYPE=Ethernet\n    UUID=439416c6-5dc9-43e0-b0de-12986a2cc25b\n    #开启自动启用网络连接\n    ONBOOT=yes\n    NM_CONTROLLED=yes\n     #启用静态IP地址\n    BOOTPROTO=static\n    #设置IP地址\n    IPADDR=172.18.15.195\n    #设置子网掩码\n    NETMASK=255.255.224.0\n    #设置网关\n    GATEWAY=172.18.10.1\n    #设置主DNS\n    DNS1=172.18.12.62\n    DNS2=\n    #禁止IPV6\n    IPV6INIT=no\n    USERCTL=no\n```\n\n> 修改后执行下列名重启网卡\n\n``` bash\n    service ip6tables stop   #停止IPV6服务\n    chkconfig ip6tables off  #禁止IPV6开机启动\n    service network restart  #重启网络连接\n```\n    \n## 报错总结\n>  Device eth2 has different MAC address than expected, ignoring.\n> 错误原因：实际Mac地址与网卡内配置的HWADDR地址不同导致，查看正确Mac地址\n\n``` bash\n    #ifconfig -a\n    #HWaddr即为eth0对应的Mac地址，只要找到对应网卡的Mac地址修改对应的网卡文件的HWADDR即可\n    eth0      \n          Link encap:Ethernet  HWaddr 2A:B4:AD:CE:5A:57\n          BROADCAST MULTICAST  MTU:1500  Metric:1\n          RX packets:0 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:1000\n          RX bytes:0 (0.0 b)  TX bytes:0 (0.0 b)\n          Interrupt:35\n```\n\n> 修改后重复上述重启网卡即可\n\n\n\n\n","source":"_posts/Linux链接网络.md","raw":"---\ntitle: Linux链接网络\ndate: 2018-12-13 22:32:15\ntags: 网络\ncategories: Linux\n---\n\nLinux在安装系统结束后总要面临一个主要问题，网络连接。习惯了Windows的图形界面连接网络是轻而易举的事，但是对于Linux命令操作很不容易上手，在此做记录方便后期使用也供大家参考。\n\n<!--more-->\n\nLinux在安装系统结束后总要面临一个主要问题，网络连接。习惯了Windows的图形界面连接网络是轻而易举的事，但是对于Linux命令操作很不容易上手，在此做记录方便后期使用也供大家参考。\n\n## 查看网卡\n\n> 输入命令后，打开网卡所在文件\n\n\n``` bash\n    #/etc/sysconfig/network-scripts/\n    #vi ifcfg-eth0\n    \n    EVICE=eth0\n    HWADDR=6E:D6:7D:EE:4D:93\n    TYPE=Ethernet\n    UUID=08212c73-eb02-4ad7-9969-ed3bc7a352ed\n    ONBOOT=no\n    NM_CONTROLLED=yes\n    BOOTPROTO=dhcp\n```\n\n> HWADDR:Linux的MAC地址\n> ONBOOT=yes:开启网络连接\n> 网卡自动获取IP配置将ONBOOT=no 改为ONBOOT=yes即可\n> 编辑、保存、然后重启网卡\n\n``` bash\n    # service network restart\n```\n\n## 存在多个网卡\n> 如果存在多个网卡会在/etc/sysconfig/network-scripts/ 目录下存在多个ifcfg-eth0文件，如ifcfg-eth1、ifcfg-eth2、ifcfg-eth3等，具体哪个网卡好用需要挨个试探，只保持其中一个网卡的配置为ONBOOT=yes，然后重启网卡。\n\n## 网卡配置静态IP\n> 配置静态IP同样修改好用的网卡，如ifcfg-eth0，具体配置如下\n\n``` bash\n    #/etc/sysconfig/network-scripts/\n    #vi ifcfg-eth0\n    \n    DEVICE=eth0\n    HWADDR=2E:8A:C5:9A:AC:70\n    TYPE=Ethernet\n    UUID=439416c6-5dc9-43e0-b0de-12986a2cc25b\n    #开启自动启用网络连接\n    ONBOOT=yes\n    NM_CONTROLLED=yes\n     #启用静态IP地址\n    BOOTPROTO=static\n    #设置IP地址\n    IPADDR=172.18.15.195\n    #设置子网掩码\n    NETMASK=255.255.224.0\n    #设置网关\n    GATEWAY=172.18.10.1\n    #设置主DNS\n    DNS1=172.18.12.62\n    DNS2=\n    #禁止IPV6\n    IPV6INIT=no\n    USERCTL=no\n```\n\n> 修改后执行下列名重启网卡\n\n``` bash\n    service ip6tables stop   #停止IPV6服务\n    chkconfig ip6tables off  #禁止IPV6开机启动\n    service network restart  #重启网络连接\n```\n    \n## 报错总结\n>  Device eth2 has different MAC address than expected, ignoring.\n> 错误原因：实际Mac地址与网卡内配置的HWADDR地址不同导致，查看正确Mac地址\n\n``` bash\n    #ifconfig -a\n    #HWaddr即为eth0对应的Mac地址，只要找到对应网卡的Mac地址修改对应的网卡文件的HWADDR即可\n    eth0      \n          Link encap:Ethernet  HWaddr 2A:B4:AD:CE:5A:57\n          BROADCAST MULTICAST  MTU:1500  Metric:1\n          RX packets:0 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:1000\n          RX bytes:0 (0.0 b)  TX bytes:0 (0.0 b)\n          Interrupt:35\n```\n\n> 修改后重复上述重启网卡即可\n\n\n\n\n","slug":"Linux链接网络","published":1,"updated":"2018-12-13T14:50:02.098Z","_id":"cjpmpmfrc0002cguizjc6xmte","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Linux在安装系统结束后总要面临一个主要问题，网络连接。习惯了Windows的图形界面连接网络是轻而易举的事，但是对于Linux命令操作很不容易上手，在此做记录方便后期使用也供大家参考。</p>\n<a id=\"more\"></a>\n<p>Linux在安装系统结束后总要面临一个主要问题，网络连接。习惯了Windows的图形界面连接网络是轻而易举的事，但是对于Linux命令操作很不容易上手，在此做记录方便后期使用也供大家参考。</p>\n<h2 id=\"查看网卡\"><a href=\"#查看网卡\" class=\"headerlink\" title=\"查看网卡\"></a>查看网卡</h2><blockquote>\n<p>输入命令后，打开网卡所在文件</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#/etc/sysconfig/network-scripts/</span></span><br><span class=\"line\"><span class=\"comment\">#vi ifcfg-eth0</span></span><br><span class=\"line\"></span><br><span class=\"line\">EVICE=eth0</span><br><span class=\"line\">HWADDR=6E:D6:7D:EE:4D:93</span><br><span class=\"line\">TYPE=Ethernet</span><br><span class=\"line\">UUID=08212c73-eb02-4ad7-9969-ed3bc7a352ed</span><br><span class=\"line\">ONBOOT=no</span><br><span class=\"line\">NM_CONTROLLED=yes</span><br><span class=\"line\">BOOTPROTO=dhcp</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>HWADDR:Linux的MAC地址<br>ONBOOT=yes:开启网络连接<br>网卡自动获取IP配置将ONBOOT=no 改为ONBOOT=yes即可<br>编辑、保存、然后重启网卡</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># service network restart</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"存在多个网卡\"><a href=\"#存在多个网卡\" class=\"headerlink\" title=\"存在多个网卡\"></a>存在多个网卡</h2><blockquote>\n<p>如果存在多个网卡会在/etc/sysconfig/network-scripts/ 目录下存在多个ifcfg-eth0文件，如ifcfg-eth1、ifcfg-eth2、ifcfg-eth3等，具体哪个网卡好用需要挨个试探，只保持其中一个网卡的配置为ONBOOT=yes，然后重启网卡。</p>\n</blockquote>\n<h2 id=\"网卡配置静态IP\"><a href=\"#网卡配置静态IP\" class=\"headerlink\" title=\"网卡配置静态IP\"></a>网卡配置静态IP</h2><blockquote>\n<p>配置静态IP同样修改好用的网卡，如ifcfg-eth0，具体配置如下</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#/etc/sysconfig/network-scripts/</span></span><br><span class=\"line\"><span class=\"comment\">#vi ifcfg-eth0</span></span><br><span class=\"line\"></span><br><span class=\"line\">DEVICE=eth0</span><br><span class=\"line\">HWADDR=2E:8A:C5:9A:AC:70</span><br><span class=\"line\">TYPE=Ethernet</span><br><span class=\"line\">UUID=439416c6-5dc9-43e0-b0de-12986a2cc25b</span><br><span class=\"line\"><span class=\"comment\">#开启自动启用网络连接</span></span><br><span class=\"line\">ONBOOT=yes</span><br><span class=\"line\">NM_CONTROLLED=yes</span><br><span class=\"line\"> <span class=\"comment\">#启用静态IP地址</span></span><br><span class=\"line\">BOOTPROTO=static</span><br><span class=\"line\"><span class=\"comment\">#设置IP地址</span></span><br><span class=\"line\">IPADDR=172.18.15.195</span><br><span class=\"line\"><span class=\"comment\">#设置子网掩码</span></span><br><span class=\"line\">NETMASK=255.255.224.0</span><br><span class=\"line\"><span class=\"comment\">#设置网关</span></span><br><span class=\"line\">GATEWAY=172.18.10.1</span><br><span class=\"line\"><span class=\"comment\">#设置主DNS</span></span><br><span class=\"line\">DNS1=172.18.12.62</span><br><span class=\"line\">DNS2=</span><br><span class=\"line\"><span class=\"comment\">#禁止IPV6</span></span><br><span class=\"line\">IPV6INIT=no</span><br><span class=\"line\">USERCTL=no</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>修改后执行下列名重启网卡</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service ip6tables stop   <span class=\"comment\">#停止IPV6服务</span></span><br><span class=\"line\">chkconfig ip6tables off  <span class=\"comment\">#禁止IPV6开机启动</span></span><br><span class=\"line\">service network restart  <span class=\"comment\">#重启网络连接</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"报错总结\"><a href=\"#报错总结\" class=\"headerlink\" title=\"报错总结\"></a>报错总结</h2><blockquote>\n<p> Device eth2 has different MAC address than expected, ignoring.<br>错误原因：实际Mac地址与网卡内配置的HWADDR地址不同导致，查看正确Mac地址</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#ifconfig -a</span></span><br><span class=\"line\"><span class=\"comment\">#HWaddr即为eth0对应的Mac地址，只要找到对应网卡的Mac地址修改对应的网卡文件的HWADDR即可</span></span><br><span class=\"line\">eth0      </span><br><span class=\"line\">      Link encap:Ethernet  HWaddr 2A:B4:AD:CE:5A:57</span><br><span class=\"line\">      BROADCAST MULTICAST  MTU:1500  Metric:1</span><br><span class=\"line\">      RX packets:0 errors:0 dropped:0 overruns:0 frame:0</span><br><span class=\"line\">      TX packets:0 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class=\"line\">      collisions:0 txqueuelen:1000</span><br><span class=\"line\">      RX bytes:0 (0.0 b)  TX bytes:0 (0.0 b)</span><br><span class=\"line\">      Interrupt:35</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>修改后重复上述重启网卡即可</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>Linux在安装系统结束后总要面临一个主要问题，网络连接。习惯了Windows的图形界面连接网络是轻而易举的事，但是对于Linux命令操作很不容易上手，在此做记录方便后期使用也供大家参考。</p>","more":"<p>Linux在安装系统结束后总要面临一个主要问题，网络连接。习惯了Windows的图形界面连接网络是轻而易举的事，但是对于Linux命令操作很不容易上手，在此做记录方便后期使用也供大家参考。</p>\n<h2 id=\"查看网卡\"><a href=\"#查看网卡\" class=\"headerlink\" title=\"查看网卡\"></a>查看网卡</h2><blockquote>\n<p>输入命令后，打开网卡所在文件</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#/etc/sysconfig/network-scripts/</span></span><br><span class=\"line\"><span class=\"comment\">#vi ifcfg-eth0</span></span><br><span class=\"line\"></span><br><span class=\"line\">EVICE=eth0</span><br><span class=\"line\">HWADDR=6E:D6:7D:EE:4D:93</span><br><span class=\"line\">TYPE=Ethernet</span><br><span class=\"line\">UUID=08212c73-eb02-4ad7-9969-ed3bc7a352ed</span><br><span class=\"line\">ONBOOT=no</span><br><span class=\"line\">NM_CONTROLLED=yes</span><br><span class=\"line\">BOOTPROTO=dhcp</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>HWADDR:Linux的MAC地址<br>ONBOOT=yes:开启网络连接<br>网卡自动获取IP配置将ONBOOT=no 改为ONBOOT=yes即可<br>编辑、保存、然后重启网卡</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># service network restart</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"存在多个网卡\"><a href=\"#存在多个网卡\" class=\"headerlink\" title=\"存在多个网卡\"></a>存在多个网卡</h2><blockquote>\n<p>如果存在多个网卡会在/etc/sysconfig/network-scripts/ 目录下存在多个ifcfg-eth0文件，如ifcfg-eth1、ifcfg-eth2、ifcfg-eth3等，具体哪个网卡好用需要挨个试探，只保持其中一个网卡的配置为ONBOOT=yes，然后重启网卡。</p>\n</blockquote>\n<h2 id=\"网卡配置静态IP\"><a href=\"#网卡配置静态IP\" class=\"headerlink\" title=\"网卡配置静态IP\"></a>网卡配置静态IP</h2><blockquote>\n<p>配置静态IP同样修改好用的网卡，如ifcfg-eth0，具体配置如下</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#/etc/sysconfig/network-scripts/</span></span><br><span class=\"line\"><span class=\"comment\">#vi ifcfg-eth0</span></span><br><span class=\"line\"></span><br><span class=\"line\">DEVICE=eth0</span><br><span class=\"line\">HWADDR=2E:8A:C5:9A:AC:70</span><br><span class=\"line\">TYPE=Ethernet</span><br><span class=\"line\">UUID=439416c6-5dc9-43e0-b0de-12986a2cc25b</span><br><span class=\"line\"><span class=\"comment\">#开启自动启用网络连接</span></span><br><span class=\"line\">ONBOOT=yes</span><br><span class=\"line\">NM_CONTROLLED=yes</span><br><span class=\"line\"> <span class=\"comment\">#启用静态IP地址</span></span><br><span class=\"line\">BOOTPROTO=static</span><br><span class=\"line\"><span class=\"comment\">#设置IP地址</span></span><br><span class=\"line\">IPADDR=172.18.15.195</span><br><span class=\"line\"><span class=\"comment\">#设置子网掩码</span></span><br><span class=\"line\">NETMASK=255.255.224.0</span><br><span class=\"line\"><span class=\"comment\">#设置网关</span></span><br><span class=\"line\">GATEWAY=172.18.10.1</span><br><span class=\"line\"><span class=\"comment\">#设置主DNS</span></span><br><span class=\"line\">DNS1=172.18.12.62</span><br><span class=\"line\">DNS2=</span><br><span class=\"line\"><span class=\"comment\">#禁止IPV6</span></span><br><span class=\"line\">IPV6INIT=no</span><br><span class=\"line\">USERCTL=no</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>修改后执行下列名重启网卡</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service ip6tables stop   <span class=\"comment\">#停止IPV6服务</span></span><br><span class=\"line\">chkconfig ip6tables off  <span class=\"comment\">#禁止IPV6开机启动</span></span><br><span class=\"line\">service network restart  <span class=\"comment\">#重启网络连接</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"报错总结\"><a href=\"#报错总结\" class=\"headerlink\" title=\"报错总结\"></a>报错总结</h2><blockquote>\n<p> Device eth2 has different MAC address than expected, ignoring.<br>错误原因：实际Mac地址与网卡内配置的HWADDR地址不同导致，查看正确Mac地址</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#ifconfig -a</span></span><br><span class=\"line\"><span class=\"comment\">#HWaddr即为eth0对应的Mac地址，只要找到对应网卡的Mac地址修改对应的网卡文件的HWADDR即可</span></span><br><span class=\"line\">eth0      </span><br><span class=\"line\">      Link encap:Ethernet  HWaddr 2A:B4:AD:CE:5A:57</span><br><span class=\"line\">      BROADCAST MULTICAST  MTU:1500  Metric:1</span><br><span class=\"line\">      RX packets:0 errors:0 dropped:0 overruns:0 frame:0</span><br><span class=\"line\">      TX packets:0 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class=\"line\">      collisions:0 txqueuelen:1000</span><br><span class=\"line\">      RX bytes:0 (0.0 b)  TX bytes:0 (0.0 b)</span><br><span class=\"line\">      Interrupt:35</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>修改后重复上述重启网卡即可</p>\n</blockquote>"},{"title":"Centos7安装Python3.7","date":"2018-12-13T14:32:47.000Z","_content":"\n全新Centos7系统安装 Python3.7，虽然在Centos7已经预先存在了python2.7版本，但是不要慌，编译安装Python3.7是和原先的旧版本没有任何冲突的，原有的Python是在/usr/bin目录下，是可以共存的。\n下面介绍了安装步骤以及安装过程中遇到各种坑在此记录一下。T-T\n\n<!--more-->\n\n>全新Centos7系统安装 Python3.7，虽然在Centos7已经预先存在了python2.7版本，但是不要慌，编译安装Python3.7是和原先的旧版本没有任何冲突的，原有的Python是在/usr/bin目录下，是可以共存的。\n下面介绍了安装步骤以及安装过程中遇到各种坑在此记录一下。T-T\n\n----------\n\n## 下载Python\n> [官网下载Python](https://www.python.org/downloads/source/)，下载地址：https://www.python.org/downloads/source/， 选择要下载的版本，这里选择Download Gzipped source tarball 下载，不同时期可能下载页面不一样，请自行寻找，good luck for you。\n> 下载后将文件用ssh传到centos即可，存放目录放在opt/python（自建哈）下就可以，然后执行下术命令\n\n----------\n\n## Python安装\n> Python安装过程很简单，执行下述命令即可，但是在 make 和 make install 过程中会遇到很多问题，请先看**遇到问题**章节，可以预先要开错误。\n\n``` linux\n# 解压文件\n$ tar -xvzf Python-3.7.0.tgz\n# 进入解压后目录\ncd Python-3.7.0\n$ # 添加对应配置将要安装的目录  安装后就在/usr/python下\n$ ./configure --prefix=/usr/python\n# 执行安装\n$ make\n# 然后执行\n$ make install\n```\n\n> 如果上述操作遇到问题参考下面**遇到问题**章节，如果成功install后即可发现在/usr目录下会有python文件夹，原有的在/usr/bin目录下。\n系统中原来的python在/usr/bin/python，通过ls -l可以看到，python是一个软链接，链接到本目录下的python2.6。\n我们可以把这个删除，也可以新建一个python3的软链接，只不过执行时python要改成python3，或者python脚本头部声明要改为#!/usr/bin/python3。\n这里为了方便建议先重命名一下，然后建立个软链接就可以了，之前的程序头部也不用更改：\n\n```linux\n$ mv /usr/bin/python /usr/bin/python.bak\n$ ln -s /usr/python/bin/python3 /usr/bin/python\n```\n----------\n\n## 遇到问题\n> 在安装过程中遇到了几个错误，在此记录下，错误都是需要相关依赖导致安装失败，详细内容如下：\n\n### 错误： **configure: error: no acceptable C compiler found in $PATH**\n> 此问题是执行./configure --prefix=/usr/python时编译缺少gcc环境，具体错误及解决如下：\n\n``` linux\n# 错误如下：\nconfigure: error: in `/usr/local/src/pythonSoft/Python-3.7.0':\nconfigure: error: no acceptable C compiler found in $PATH\nSee `config.log' for more details\n\n# 解决办法，安装gcc环境\n$ yum install -y gcc\n\n# 安装成功后重新执行\n$ ./configure --prefix=/usr/python\n```\n\n### 错误： **can't decompress data; zlib not available**\n> 在执行make命令安装过程中会遇到错误can't decompress data; zlib not available，是因为缺少zlib依赖导致，安装zlib即可，命令如下\n\n``` linux\n# 安装zlib依赖\n$ yum -y install zlib*\n# 然后再执行\n$ make\n$ make install\n```\n\n### 错误： **ModuleNotFoundError: No module named '_ctypes'**\n> make install安装遇到ModuleNotFoundError: No module named '_ctypes'问题，执行如下命令：\n``` linux\n# Python3.7中缺少libffi-devel依赖\n$ yum install libffi-devel -y\n# 然后再执行即可\n$ make install\n```\n\n## 小结\n> **锣鼓喧天鞭炮齐鸣红旗招展人山人海**，到此Python终于安装结束了，互联网拯救了我，再次感谢如下博主资料：\nhttps://www.cnblogs.com/jellydong/p/7724169.html\nhttps://blog.csdn.net/qq_31306973/article/details/78538601\nhttps://blog.csdn.net/qq_36416904/article/details/79316972\nhttps://blog.csdn.net/blueheart20/article/details/72827666\n\n","source":"_posts/Centos7安装Python3-7.md","raw":"---\ntitle: Centos7安装Python3.7\ndate: 2018-12-13 22:32:47\ntags: Python\ncategories: Linux\n---\n\n全新Centos7系统安装 Python3.7，虽然在Centos7已经预先存在了python2.7版本，但是不要慌，编译安装Python3.7是和原先的旧版本没有任何冲突的，原有的Python是在/usr/bin目录下，是可以共存的。\n下面介绍了安装步骤以及安装过程中遇到各种坑在此记录一下。T-T\n\n<!--more-->\n\n>全新Centos7系统安装 Python3.7，虽然在Centos7已经预先存在了python2.7版本，但是不要慌，编译安装Python3.7是和原先的旧版本没有任何冲突的，原有的Python是在/usr/bin目录下，是可以共存的。\n下面介绍了安装步骤以及安装过程中遇到各种坑在此记录一下。T-T\n\n----------\n\n## 下载Python\n> [官网下载Python](https://www.python.org/downloads/source/)，下载地址：https://www.python.org/downloads/source/， 选择要下载的版本，这里选择Download Gzipped source tarball 下载，不同时期可能下载页面不一样，请自行寻找，good luck for you。\n> 下载后将文件用ssh传到centos即可，存放目录放在opt/python（自建哈）下就可以，然后执行下术命令\n\n----------\n\n## Python安装\n> Python安装过程很简单，执行下述命令即可，但是在 make 和 make install 过程中会遇到很多问题，请先看**遇到问题**章节，可以预先要开错误。\n\n``` linux\n# 解压文件\n$ tar -xvzf Python-3.7.0.tgz\n# 进入解压后目录\ncd Python-3.7.0\n$ # 添加对应配置将要安装的目录  安装后就在/usr/python下\n$ ./configure --prefix=/usr/python\n# 执行安装\n$ make\n# 然后执行\n$ make install\n```\n\n> 如果上述操作遇到问题参考下面**遇到问题**章节，如果成功install后即可发现在/usr目录下会有python文件夹，原有的在/usr/bin目录下。\n系统中原来的python在/usr/bin/python，通过ls -l可以看到，python是一个软链接，链接到本目录下的python2.6。\n我们可以把这个删除，也可以新建一个python3的软链接，只不过执行时python要改成python3，或者python脚本头部声明要改为#!/usr/bin/python3。\n这里为了方便建议先重命名一下，然后建立个软链接就可以了，之前的程序头部也不用更改：\n\n```linux\n$ mv /usr/bin/python /usr/bin/python.bak\n$ ln -s /usr/python/bin/python3 /usr/bin/python\n```\n----------\n\n## 遇到问题\n> 在安装过程中遇到了几个错误，在此记录下，错误都是需要相关依赖导致安装失败，详细内容如下：\n\n### 错误： **configure: error: no acceptable C compiler found in $PATH**\n> 此问题是执行./configure --prefix=/usr/python时编译缺少gcc环境，具体错误及解决如下：\n\n``` linux\n# 错误如下：\nconfigure: error: in `/usr/local/src/pythonSoft/Python-3.7.0':\nconfigure: error: no acceptable C compiler found in $PATH\nSee `config.log' for more details\n\n# 解决办法，安装gcc环境\n$ yum install -y gcc\n\n# 安装成功后重新执行\n$ ./configure --prefix=/usr/python\n```\n\n### 错误： **can't decompress data; zlib not available**\n> 在执行make命令安装过程中会遇到错误can't decompress data; zlib not available，是因为缺少zlib依赖导致，安装zlib即可，命令如下\n\n``` linux\n# 安装zlib依赖\n$ yum -y install zlib*\n# 然后再执行\n$ make\n$ make install\n```\n\n### 错误： **ModuleNotFoundError: No module named '_ctypes'**\n> make install安装遇到ModuleNotFoundError: No module named '_ctypes'问题，执行如下命令：\n``` linux\n# Python3.7中缺少libffi-devel依赖\n$ yum install libffi-devel -y\n# 然后再执行即可\n$ make install\n```\n\n## 小结\n> **锣鼓喧天鞭炮齐鸣红旗招展人山人海**，到此Python终于安装结束了，互联网拯救了我，再次感谢如下博主资料：\nhttps://www.cnblogs.com/jellydong/p/7724169.html\nhttps://blog.csdn.net/qq_31306973/article/details/78538601\nhttps://blog.csdn.net/qq_36416904/article/details/79316972\nhttps://blog.csdn.net/blueheart20/article/details/72827666\n\n","slug":"Centos7安装Python3-7","published":1,"updated":"2018-12-13T14:51:49.504Z","_id":"cjpmpmfre0004cgui76fu8jm0","comments":1,"layout":"post","photos":[],"link":"","content":"<p>全新Centos7系统安装 Python3.7，虽然在Centos7已经预先存在了python2.7版本，但是不要慌，编译安装Python3.7是和原先的旧版本没有任何冲突的，原有的Python是在/usr/bin目录下，是可以共存的。<br>下面介绍了安装步骤以及安装过程中遇到各种坑在此记录一下。T-T</p>\n<a id=\"more\"></a>\n<blockquote>\n<p>全新Centos7系统安装 Python3.7，虽然在Centos7已经预先存在了python2.7版本，但是不要慌，编译安装Python3.7是和原先的旧版本没有任何冲突的，原有的Python是在/usr/bin目录下，是可以共存的。<br>下面介绍了安装步骤以及安装过程中遇到各种坑在此记录一下。T-T</p>\n</blockquote>\n<hr>\n<h2 id=\"下载Python\"><a href=\"#下载Python\" class=\"headerlink\" title=\"下载Python\"></a>下载Python</h2><blockquote>\n<p><a href=\"https://www.python.org/downloads/source/\" target=\"_blank\" rel=\"noopener\">官网下载Python</a>，下载地址：<a href=\"https://www.python.org/downloads/source/，\" target=\"_blank\" rel=\"noopener\">https://www.python.org/downloads/source/，</a> 选择要下载的版本，这里选择Download Gzipped source tarball 下载，不同时期可能下载页面不一样，请自行寻找，good luck for you。<br>下载后将文件用ssh传到centos即可，存放目录放在opt/python（自建哈）下就可以，然后执行下术命令</p>\n</blockquote>\n<hr>\n<h2 id=\"Python安装\"><a href=\"#Python安装\" class=\"headerlink\" title=\"Python安装\"></a>Python安装</h2><blockquote>\n<p>Python安装过程很简单，执行下述命令即可，但是在 make 和 make install 过程中会遇到很多问题，请先看<strong>遇到问题</strong>章节，可以预先要开错误。</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 解压文件</span><br><span class=\"line\">$ tar -xvzf Python-3.7.0.tgz</span><br><span class=\"line\"># 进入解压后目录</span><br><span class=\"line\">cd Python-3.7.0</span><br><span class=\"line\">$ # 添加对应配置将要安装的目录  安装后就在/usr/python下</span><br><span class=\"line\">$ ./configure --prefix=/usr/python</span><br><span class=\"line\"># 执行安装</span><br><span class=\"line\">$ make</span><br><span class=\"line\"># 然后执行</span><br><span class=\"line\">$ make install</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>如果上述操作遇到问题参考下面<strong>遇到问题</strong>章节，如果成功install后即可发现在/usr目录下会有python文件夹，原有的在/usr/bin目录下。<br>系统中原来的python在/usr/bin/python，通过ls -l可以看到，python是一个软链接，链接到本目录下的python2.6。<br>我们可以把这个删除，也可以新建一个python3的软链接，只不过执行时python要改成python3，或者python脚本头部声明要改为#!/usr/bin/python3。<br>这里为了方便建议先重命名一下，然后建立个软链接就可以了，之前的程序头部也不用更改：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mv /usr/bin/python /usr/bin/python.bak</span><br><span class=\"line\">$ ln -s /usr/python/bin/python3 /usr/bin/python</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"遇到问题\"><a href=\"#遇到问题\" class=\"headerlink\" title=\"遇到问题\"></a>遇到问题</h2><blockquote>\n<p>在安装过程中遇到了几个错误，在此记录下，错误都是需要相关依赖导致安装失败，详细内容如下：</p>\n</blockquote>\n<h3 id=\"错误：-configure-error-no-acceptable-C-compiler-found-in-PATH\"><a href=\"#错误：-configure-error-no-acceptable-C-compiler-found-in-PATH\" class=\"headerlink\" title=\"错误： configure: error: no acceptable C compiler found in $PATH\"></a>错误： <strong>configure: error: no acceptable C compiler found in $PATH</strong></h3><blockquote>\n<p>此问题是执行./configure –prefix=/usr/python时编译缺少gcc环境，具体错误及解决如下：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 错误如下：</span><br><span class=\"line\">configure: error: in `/usr/local/src/pythonSoft/Python-3.7.0&apos;:</span><br><span class=\"line\">configure: error: no acceptable C compiler found in $PATH</span><br><span class=\"line\">See `config.log&apos; for more details</span><br><span class=\"line\"></span><br><span class=\"line\"># 解决办法，安装gcc环境</span><br><span class=\"line\">$ yum install -y gcc</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装成功后重新执行</span><br><span class=\"line\">$ ./configure --prefix=/usr/python</span><br></pre></td></tr></table></figure>\n<h3 id=\"错误：-can’t-decompress-data-zlib-not-available\"><a href=\"#错误：-can’t-decompress-data-zlib-not-available\" class=\"headerlink\" title=\"错误： can’t decompress data; zlib not available\"></a>错误： <strong>can’t decompress data; zlib not available</strong></h3><blockquote>\n<p>在执行make命令安装过程中会遇到错误can’t decompress data; zlib not available，是因为缺少zlib依赖导致，安装zlib即可，命令如下</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 安装zlib依赖</span><br><span class=\"line\">$ yum -y install zlib*</span><br><span class=\"line\"># 然后再执行</span><br><span class=\"line\">$ make</span><br><span class=\"line\">$ make install</span><br></pre></td></tr></table></figure>\n<h3 id=\"错误：-ModuleNotFoundError-No-module-named-‘-ctypes’\"><a href=\"#错误：-ModuleNotFoundError-No-module-named-‘-ctypes’\" class=\"headerlink\" title=\"错误： ModuleNotFoundError: No module named ‘_ctypes’\"></a>错误： <strong>ModuleNotFoundError: No module named ‘_ctypes’</strong></h3><blockquote>\n<p>make install安装遇到ModuleNotFoundError: No module named ‘_ctypes’问题，执行如下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Python3.7中缺少libffi-devel依赖</span><br><span class=\"line\">$ yum install libffi-devel -y</span><br><span class=\"line\"># 然后再执行即可</span><br><span class=\"line\">$ make install</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><blockquote>\n<p><strong>锣鼓喧天鞭炮齐鸣红旗招展人山人海</strong>，到此Python终于安装结束了，互联网拯救了我，再次感谢如下博主资料：<br><a href=\"https://www.cnblogs.com/jellydong/p/7724169.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/jellydong/p/7724169.html</a><br><a href=\"https://blog.csdn.net/qq_31306973/article/details/78538601\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/qq_31306973/article/details/78538601</a><br><a href=\"https://blog.csdn.net/qq_36416904/article/details/79316972\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/qq_36416904/article/details/79316972</a><br><a href=\"https://blog.csdn.net/blueheart20/article/details/72827666\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/blueheart20/article/details/72827666</a></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>全新Centos7系统安装 Python3.7，虽然在Centos7已经预先存在了python2.7版本，但是不要慌，编译安装Python3.7是和原先的旧版本没有任何冲突的，原有的Python是在/usr/bin目录下，是可以共存的。<br>下面介绍了安装步骤以及安装过程中遇到各种坑在此记录一下。T-T</p>","more":"<blockquote>\n<p>全新Centos7系统安装 Python3.7，虽然在Centos7已经预先存在了python2.7版本，但是不要慌，编译安装Python3.7是和原先的旧版本没有任何冲突的，原有的Python是在/usr/bin目录下，是可以共存的。<br>下面介绍了安装步骤以及安装过程中遇到各种坑在此记录一下。T-T</p>\n</blockquote>\n<hr>\n<h2 id=\"下载Python\"><a href=\"#下载Python\" class=\"headerlink\" title=\"下载Python\"></a>下载Python</h2><blockquote>\n<p><a href=\"https://www.python.org/downloads/source/\" target=\"_blank\" rel=\"noopener\">官网下载Python</a>，下载地址：<a href=\"https://www.python.org/downloads/source/，\" target=\"_blank\" rel=\"noopener\">https://www.python.org/downloads/source/，</a> 选择要下载的版本，这里选择Download Gzipped source tarball 下载，不同时期可能下载页面不一样，请自行寻找，good luck for you。<br>下载后将文件用ssh传到centos即可，存放目录放在opt/python（自建哈）下就可以，然后执行下术命令</p>\n</blockquote>\n<hr>\n<h2 id=\"Python安装\"><a href=\"#Python安装\" class=\"headerlink\" title=\"Python安装\"></a>Python安装</h2><blockquote>\n<p>Python安装过程很简单，执行下述命令即可，但是在 make 和 make install 过程中会遇到很多问题，请先看<strong>遇到问题</strong>章节，可以预先要开错误。</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 解压文件</span><br><span class=\"line\">$ tar -xvzf Python-3.7.0.tgz</span><br><span class=\"line\"># 进入解压后目录</span><br><span class=\"line\">cd Python-3.7.0</span><br><span class=\"line\">$ # 添加对应配置将要安装的目录  安装后就在/usr/python下</span><br><span class=\"line\">$ ./configure --prefix=/usr/python</span><br><span class=\"line\"># 执行安装</span><br><span class=\"line\">$ make</span><br><span class=\"line\"># 然后执行</span><br><span class=\"line\">$ make install</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>如果上述操作遇到问题参考下面<strong>遇到问题</strong>章节，如果成功install后即可发现在/usr目录下会有python文件夹，原有的在/usr/bin目录下。<br>系统中原来的python在/usr/bin/python，通过ls -l可以看到，python是一个软链接，链接到本目录下的python2.6。<br>我们可以把这个删除，也可以新建一个python3的软链接，只不过执行时python要改成python3，或者python脚本头部声明要改为#!/usr/bin/python3。<br>这里为了方便建议先重命名一下，然后建立个软链接就可以了，之前的程序头部也不用更改：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mv /usr/bin/python /usr/bin/python.bak</span><br><span class=\"line\">$ ln -s /usr/python/bin/python3 /usr/bin/python</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"遇到问题\"><a href=\"#遇到问题\" class=\"headerlink\" title=\"遇到问题\"></a>遇到问题</h2><blockquote>\n<p>在安装过程中遇到了几个错误，在此记录下，错误都是需要相关依赖导致安装失败，详细内容如下：</p>\n</blockquote>\n<h3 id=\"错误：-configure-error-no-acceptable-C-compiler-found-in-PATH\"><a href=\"#错误：-configure-error-no-acceptable-C-compiler-found-in-PATH\" class=\"headerlink\" title=\"错误： configure: error: no acceptable C compiler found in $PATH\"></a>错误： <strong>configure: error: no acceptable C compiler found in $PATH</strong></h3><blockquote>\n<p>此问题是执行./configure –prefix=/usr/python时编译缺少gcc环境，具体错误及解决如下：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 错误如下：</span><br><span class=\"line\">configure: error: in `/usr/local/src/pythonSoft/Python-3.7.0&apos;:</span><br><span class=\"line\">configure: error: no acceptable C compiler found in $PATH</span><br><span class=\"line\">See `config.log&apos; for more details</span><br><span class=\"line\"></span><br><span class=\"line\"># 解决办法，安装gcc环境</span><br><span class=\"line\">$ yum install -y gcc</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装成功后重新执行</span><br><span class=\"line\">$ ./configure --prefix=/usr/python</span><br></pre></td></tr></table></figure>\n<h3 id=\"错误：-can’t-decompress-data-zlib-not-available\"><a href=\"#错误：-can’t-decompress-data-zlib-not-available\" class=\"headerlink\" title=\"错误： can’t decompress data; zlib not available\"></a>错误： <strong>can’t decompress data; zlib not available</strong></h3><blockquote>\n<p>在执行make命令安装过程中会遇到错误can’t decompress data; zlib not available，是因为缺少zlib依赖导致，安装zlib即可，命令如下</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 安装zlib依赖</span><br><span class=\"line\">$ yum -y install zlib*</span><br><span class=\"line\"># 然后再执行</span><br><span class=\"line\">$ make</span><br><span class=\"line\">$ make install</span><br></pre></td></tr></table></figure>\n<h3 id=\"错误：-ModuleNotFoundError-No-module-named-‘-ctypes’\"><a href=\"#错误：-ModuleNotFoundError-No-module-named-‘-ctypes’\" class=\"headerlink\" title=\"错误： ModuleNotFoundError: No module named ‘_ctypes’\"></a>错误： <strong>ModuleNotFoundError: No module named ‘_ctypes’</strong></h3><blockquote>\n<p>make install安装遇到ModuleNotFoundError: No module named ‘_ctypes’问题，执行如下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Python3.7中缺少libffi-devel依赖</span><br><span class=\"line\">$ yum install libffi-devel -y</span><br><span class=\"line\"># 然后再执行即可</span><br><span class=\"line\">$ make install</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><blockquote>\n<p><strong>锣鼓喧天鞭炮齐鸣红旗招展人山人海</strong>，到此Python终于安装结束了，互联网拯救了我，再次感谢如下博主资料：<br><a href=\"https://www.cnblogs.com/jellydong/p/7724169.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/jellydong/p/7724169.html</a><br><a href=\"https://blog.csdn.net/qq_31306973/article/details/78538601\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/qq_31306973/article/details/78538601</a><br><a href=\"https://blog.csdn.net/qq_36416904/article/details/79316972\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/qq_36416904/article/details/79316972</a><br><a href=\"https://blog.csdn.net/blueheart20/article/details/72827666\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/blueheart20/article/details/72827666</a></p>\n</blockquote>"},{"title":"Linux下安装JDK","date":"2018-12-13T14:31:56.000Z","_content":"\nLinux安装JDK是开发中部署中必要知识，在此做下记录。\n\n<!--more-->\n\nLinux安装JDK是开发中部署中必要知识，在此做下记录。\n\n## 卸载JDK\n    查看Linux是否安装了其他版本的JDK，如果安装了卸载原有JDK。\n\n## 解压JDK安装\n- 去官网下载需要版本的JDk；\n- 解压JDK文件；\n- 配置JDK环境变量；\n- 重启Linux；\n\n> 本文下载的是 jdk-7u79-linux-x64.tar.gz 包，上传到Linux的任意路径下，比如我上传到/opt/java/路径下\n\n```linux\n#cd ../opt/java\n#tar xvf  jdk-7u79-linux-x64.tar.gz\n```\n> 解压后修改环境变量，修改 /etc/ 下的profile文件，在文件最后添加如下内容\n\n    #vi /etc/profile\n    #添加内容如下，环境变量路径为安装JDK的路径\n    export JAVA_HOME=/opt/java/jdk1.7.0_79\n    export JRE_HOME=/opt/java/jdk1.7.0_79/jre  \n    export PATH=$PATH:/opt/java/jdk1.7.0_79/bin  \n    export CLASSPATH=./:/opt/java/jdk1.7.0_79/lib:/opt/java/jdk1.7.0_79/jre/lib  \n\n> 重启Linux系统，然后java -verson查看JDK版本\n\n    [root@localhost java]# java -version\n    java version \"1.7.0_79\"\n    Java(TM) SE Runtime Environment (build 1.7.0_79-b15)\n    Java HotSpot(TM) 64-Bit Server VM (build 24.79-b02, mixed mode)\n\n\n","source":"_posts/Linux下安装JDK.md","raw":"---\ntitle: Linux下安装JDK\ndate: 2018-12-13 22:31:56\ntags: JDk\ncategories: Linux\n---\n\nLinux安装JDK是开发中部署中必要知识，在此做下记录。\n\n<!--more-->\n\nLinux安装JDK是开发中部署中必要知识，在此做下记录。\n\n## 卸载JDK\n    查看Linux是否安装了其他版本的JDK，如果安装了卸载原有JDK。\n\n## 解压JDK安装\n- 去官网下载需要版本的JDk；\n- 解压JDK文件；\n- 配置JDK环境变量；\n- 重启Linux；\n\n> 本文下载的是 jdk-7u79-linux-x64.tar.gz 包，上传到Linux的任意路径下，比如我上传到/opt/java/路径下\n\n```linux\n#cd ../opt/java\n#tar xvf  jdk-7u79-linux-x64.tar.gz\n```\n> 解压后修改环境变量，修改 /etc/ 下的profile文件，在文件最后添加如下内容\n\n    #vi /etc/profile\n    #添加内容如下，环境变量路径为安装JDK的路径\n    export JAVA_HOME=/opt/java/jdk1.7.0_79\n    export JRE_HOME=/opt/java/jdk1.7.0_79/jre  \n    export PATH=$PATH:/opt/java/jdk1.7.0_79/bin  \n    export CLASSPATH=./:/opt/java/jdk1.7.0_79/lib:/opt/java/jdk1.7.0_79/jre/lib  \n\n> 重启Linux系统，然后java -verson查看JDK版本\n\n    [root@localhost java]# java -version\n    java version \"1.7.0_79\"\n    Java(TM) SE Runtime Environment (build 1.7.0_79-b15)\n    Java HotSpot(TM) 64-Bit Server VM (build 24.79-b02, mixed mode)\n\n\n","slug":"Linux下安装JDK","published":1,"updated":"2018-12-13T14:50:24.486Z","_id":"cjpmpmfrf0006cguiqctethi8","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Linux安装JDK是开发中部署中必要知识，在此做下记录。</p>\n<a id=\"more\"></a>\n<p>Linux安装JDK是开发中部署中必要知识，在此做下记录。</p>\n<h2 id=\"卸载JDK\"><a href=\"#卸载JDK\" class=\"headerlink\" title=\"卸载JDK\"></a>卸载JDK</h2><pre><code>查看Linux是否安装了其他版本的JDK，如果安装了卸载原有JDK。\n</code></pre><h2 id=\"解压JDK安装\"><a href=\"#解压JDK安装\" class=\"headerlink\" title=\"解压JDK安装\"></a>解压JDK安装</h2><ul>\n<li>去官网下载需要版本的JDk；</li>\n<li>解压JDK文件；</li>\n<li>配置JDK环境变量；</li>\n<li>重启Linux；</li>\n</ul>\n<blockquote>\n<p>本文下载的是 jdk-7u79-linux-x64.tar.gz 包，上传到Linux的任意路径下，比如我上传到/opt/java/路径下</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#cd ../opt/java</span><br><span class=\"line\">#tar xvf  jdk-7u79-linux-x64.tar.gz</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>解压后修改环境变量，修改 /etc/ 下的profile文件，在文件最后添加如下内容</p>\n</blockquote>\n<pre><code>#vi /etc/profile\n#添加内容如下，环境变量路径为安装JDK的路径\nexport JAVA_HOME=/opt/java/jdk1.7.0_79\nexport JRE_HOME=/opt/java/jdk1.7.0_79/jre  \nexport PATH=$PATH:/opt/java/jdk1.7.0_79/bin  \nexport CLASSPATH=./:/opt/java/jdk1.7.0_79/lib:/opt/java/jdk1.7.0_79/jre/lib  \n</code></pre><blockquote>\n<p>重启Linux系统，然后java -verson查看JDK版本</p>\n</blockquote>\n<pre><code>[root@localhost java]# java -version\njava version &quot;1.7.0_79&quot;\nJava(TM) SE Runtime Environment (build 1.7.0_79-b15)\nJava HotSpot(TM) 64-Bit Server VM (build 24.79-b02, mixed mode)\n</code></pre>","site":{"data":{}},"excerpt":"<p>Linux安装JDK是开发中部署中必要知识，在此做下记录。</p>","more":"<p>Linux安装JDK是开发中部署中必要知识，在此做下记录。</p>\n<h2 id=\"卸载JDK\"><a href=\"#卸载JDK\" class=\"headerlink\" title=\"卸载JDK\"></a>卸载JDK</h2><pre><code>查看Linux是否安装了其他版本的JDK，如果安装了卸载原有JDK。\n</code></pre><h2 id=\"解压JDK安装\"><a href=\"#解压JDK安装\" class=\"headerlink\" title=\"解压JDK安装\"></a>解压JDK安装</h2><ul>\n<li>去官网下载需要版本的JDk；</li>\n<li>解压JDK文件；</li>\n<li>配置JDK环境变量；</li>\n<li>重启Linux；</li>\n</ul>\n<blockquote>\n<p>本文下载的是 jdk-7u79-linux-x64.tar.gz 包，上传到Linux的任意路径下，比如我上传到/opt/java/路径下</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#cd ../opt/java</span><br><span class=\"line\">#tar xvf  jdk-7u79-linux-x64.tar.gz</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>解压后修改环境变量，修改 /etc/ 下的profile文件，在文件最后添加如下内容</p>\n</blockquote>\n<pre><code>#vi /etc/profile\n#添加内容如下，环境变量路径为安装JDK的路径\nexport JAVA_HOME=/opt/java/jdk1.7.0_79\nexport JRE_HOME=/opt/java/jdk1.7.0_79/jre  \nexport PATH=$PATH:/opt/java/jdk1.7.0_79/bin  \nexport CLASSPATH=./:/opt/java/jdk1.7.0_79/lib:/opt/java/jdk1.7.0_79/jre/lib  \n</code></pre><blockquote>\n<p>重启Linux系统，然后java -verson查看JDK版本</p>\n</blockquote>\n<pre><code>[root@localhost java]# java -version\njava version &quot;1.7.0_79&quot;\nJava(TM) SE Runtime Environment (build 1.7.0_79-b15)\nJava HotSpot(TM) 64-Bit Server VM (build 24.79-b02, mixed mode)\n</code></pre>"},{"title":"我的第一个博客","date":"2018-12-12T07:24:06.000Z","_content":"\n“吾生也有涯，而知也无涯。”\n\n2018年12月12日搭建了此博客，记录一下这一天。此博客用Hexo + Netlify 搭建的静态网站。\n\n之前一直用阿里的Leanote来记录笔记，也用Leanote搭建过个人博客，但是总感觉和太过庞杂，想要简洁一些可操作性强一点的个人博客，偶然看到netlify托管网站，然后看到了Hexo + Netlify 搭建的静态网站突然感觉这就是我想要的方式，于是乎搭建了此博客。\n\n<!-- more -->\n## 记录第一篇博客\n\n“吾生也有涯，而知也无涯。”\n\n2018年12月12日搭建了此博客，记录一下这一天。此博客用Hexo + Netlify 搭建的静态网站。\n\n之前一直用阿里的Leanote来记录笔记，也用Leanote搭建过个人博客，但是总感觉和太过庞杂，想要简洁一些可操作性强一点的个人博客，偶然看到netlify托管网站，然后看到了Hexo + Netlify 搭建的静态网站突然感觉这就是我想要的方式，于是乎搭建了此博客。\n\n原本只是简单的写了点作为记录，但是今天（2018年12月13日）还是想需要正式一下这篇文章，昨天的博客主题还是Hexo默认主题，今天看到了[hexo-theme-bmw](https://godbmw.com/)主题很清爽（98年诞生的小姐姐，想想自己™白活了）然后就借鉴来了，于是乎对原有内容重新构建一下，为了不给以后的自己有可乘之机。\n\n“每一个技术的学习，都是从模仿开始。” 这句话是朋友博客上拷贝来的，记录一下。\n\n## 目前状况\n\n混迹于二线城市，目前从事于一家创业公司。\n15年毕业到18年5月份从事Java技术栈相关工作，之后现在主要Nodejs、Python等技术栈。\n\n创建博客的主要原因是想提升一下自己，并对自己有一个长远的规划。现在总感觉自己的记忆在衰退，很多已经做过的事情再次接手时总想起人生的终极问题：我是谁？我从哪里来？我要到哪里去？\n我想还是需要将生活和学习的点滴记录下来，无论是踩过的还是坑爬过的山，记录的过程中都是对过往进行总结和思考，也是对自己的成长的总结。\n\n## 规划和期望\n\n做博客当然要给自己一个规划和要求，希望自己能坚持每周分享一篇博，至于内容还没有硬性要求，只要自己满意就好，养成良好的记录和总结的习惯。\n记录生活、也记录工作和学习，也希望在记录的时候认识更多志同道合的人，一起分享。\n\n## 总结\n\n此博客刚刚创建，那么总有不断完善的过程，目前规划是现将博客基本结构搭建起来，然后分享一下搭建和改善的过程，这是一个大的工作量，但是是一个长期任务，希望不要是这样就草草结束，不希望一切都是最初的样子，那样又有什么意义呢？\n","source":"_posts/我的第一个博客.md","raw":"---\ntitle: 我的第一个博客\ndate: 2018-12-12 15:24:06\ntags: 随笔\ncategories: 随笔\n---\n\n“吾生也有涯，而知也无涯。”\n\n2018年12月12日搭建了此博客，记录一下这一天。此博客用Hexo + Netlify 搭建的静态网站。\n\n之前一直用阿里的Leanote来记录笔记，也用Leanote搭建过个人博客，但是总感觉和太过庞杂，想要简洁一些可操作性强一点的个人博客，偶然看到netlify托管网站，然后看到了Hexo + Netlify 搭建的静态网站突然感觉这就是我想要的方式，于是乎搭建了此博客。\n\n<!-- more -->\n## 记录第一篇博客\n\n“吾生也有涯，而知也无涯。”\n\n2018年12月12日搭建了此博客，记录一下这一天。此博客用Hexo + Netlify 搭建的静态网站。\n\n之前一直用阿里的Leanote来记录笔记，也用Leanote搭建过个人博客，但是总感觉和太过庞杂，想要简洁一些可操作性强一点的个人博客，偶然看到netlify托管网站，然后看到了Hexo + Netlify 搭建的静态网站突然感觉这就是我想要的方式，于是乎搭建了此博客。\n\n原本只是简单的写了点作为记录，但是今天（2018年12月13日）还是想需要正式一下这篇文章，昨天的博客主题还是Hexo默认主题，今天看到了[hexo-theme-bmw](https://godbmw.com/)主题很清爽（98年诞生的小姐姐，想想自己™白活了）然后就借鉴来了，于是乎对原有内容重新构建一下，为了不给以后的自己有可乘之机。\n\n“每一个技术的学习，都是从模仿开始。” 这句话是朋友博客上拷贝来的，记录一下。\n\n## 目前状况\n\n混迹于二线城市，目前从事于一家创业公司。\n15年毕业到18年5月份从事Java技术栈相关工作，之后现在主要Nodejs、Python等技术栈。\n\n创建博客的主要原因是想提升一下自己，并对自己有一个长远的规划。现在总感觉自己的记忆在衰退，很多已经做过的事情再次接手时总想起人生的终极问题：我是谁？我从哪里来？我要到哪里去？\n我想还是需要将生活和学习的点滴记录下来，无论是踩过的还是坑爬过的山，记录的过程中都是对过往进行总结和思考，也是对自己的成长的总结。\n\n## 规划和期望\n\n做博客当然要给自己一个规划和要求，希望自己能坚持每周分享一篇博，至于内容还没有硬性要求，只要自己满意就好，养成良好的记录和总结的习惯。\n记录生活、也记录工作和学习，也希望在记录的时候认识更多志同道合的人，一起分享。\n\n## 总结\n\n此博客刚刚创建，那么总有不断完善的过程，目前规划是现将博客基本结构搭建起来，然后分享一下搭建和改善的过程，这是一个大的工作量，但是是一个长期任务，希望不要是这样就草草结束，不希望一切都是最初的样子，那样又有什么意义呢？\n","slug":"我的第一个博客","published":1,"updated":"2018-12-13T12:47:16.110Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjpmpmfrh0008cguig564mk05","content":"<p>“吾生也有涯，而知也无涯。”</p>\n<p>2018年12月12日搭建了此博客，记录一下这一天。此博客用Hexo + Netlify 搭建的静态网站。</p>\n<p>之前一直用阿里的Leanote来记录笔记，也用Leanote搭建过个人博客，但是总感觉和太过庞杂，想要简洁一些可操作性强一点的个人博客，偶然看到netlify托管网站，然后看到了Hexo + Netlify 搭建的静态网站突然感觉这就是我想要的方式，于是乎搭建了此博客。</p>\n<a id=\"more\"></a>\n<h2 id=\"记录第一篇博客\"><a href=\"#记录第一篇博客\" class=\"headerlink\" title=\"记录第一篇博客\"></a>记录第一篇博客</h2><p>“吾生也有涯，而知也无涯。”</p>\n<p>2018年12月12日搭建了此博客，记录一下这一天。此博客用Hexo + Netlify 搭建的静态网站。</p>\n<p>之前一直用阿里的Leanote来记录笔记，也用Leanote搭建过个人博客，但是总感觉和太过庞杂，想要简洁一些可操作性强一点的个人博客，偶然看到netlify托管网站，然后看到了Hexo + Netlify 搭建的静态网站突然感觉这就是我想要的方式，于是乎搭建了此博客。</p>\n<p>原本只是简单的写了点作为记录，但是今天（2018年12月13日）还是想需要正式一下这篇文章，昨天的博客主题还是Hexo默认主题，今天看到了<a href=\"https://godbmw.com/\" target=\"_blank\" rel=\"noopener\">hexo-theme-bmw</a>主题很清爽（98年诞生的小姐姐，想想自己™白活了）然后就借鉴来了，于是乎对原有内容重新构建一下，为了不给以后的自己有可乘之机。</p>\n<p>“每一个技术的学习，都是从模仿开始。” 这句话是朋友博客上拷贝来的，记录一下。</p>\n<h2 id=\"目前状况\"><a href=\"#目前状况\" class=\"headerlink\" title=\"目前状况\"></a>目前状况</h2><p>混迹于二线城市，目前从事于一家创业公司。<br>15年毕业到18年5月份从事Java技术栈相关工作，之后现在主要Nodejs、Python等技术栈。</p>\n<p>创建博客的主要原因是想提升一下自己，并对自己有一个长远的规划。现在总感觉自己的记忆在衰退，很多已经做过的事情再次接手时总想起人生的终极问题：我是谁？我从哪里来？我要到哪里去？<br>我想还是需要将生活和学习的点滴记录下来，无论是踩过的还是坑爬过的山，记录的过程中都是对过往进行总结和思考，也是对自己的成长的总结。</p>\n<h2 id=\"规划和期望\"><a href=\"#规划和期望\" class=\"headerlink\" title=\"规划和期望\"></a>规划和期望</h2><p>做博客当然要给自己一个规划和要求，希望自己能坚持每周分享一篇博，至于内容还没有硬性要求，只要自己满意就好，养成良好的记录和总结的习惯。<br>记录生活、也记录工作和学习，也希望在记录的时候认识更多志同道合的人，一起分享。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>此博客刚刚创建，那么总有不断完善的过程，目前规划是现将博客基本结构搭建起来，然后分享一下搭建和改善的过程，这是一个大的工作量，但是是一个长期任务，希望不要是这样就草草结束，不希望一切都是最初的样子，那样又有什么意义呢？</p>\n","site":{"data":{}},"excerpt":"<p>“吾生也有涯，而知也无涯。”</p>\n<p>2018年12月12日搭建了此博客，记录一下这一天。此博客用Hexo + Netlify 搭建的静态网站。</p>\n<p>之前一直用阿里的Leanote来记录笔记，也用Leanote搭建过个人博客，但是总感觉和太过庞杂，想要简洁一些可操作性强一点的个人博客，偶然看到netlify托管网站，然后看到了Hexo + Netlify 搭建的静态网站突然感觉这就是我想要的方式，于是乎搭建了此博客。</p>","more":"<h2 id=\"记录第一篇博客\"><a href=\"#记录第一篇博客\" class=\"headerlink\" title=\"记录第一篇博客\"></a>记录第一篇博客</h2><p>“吾生也有涯，而知也无涯。”</p>\n<p>2018年12月12日搭建了此博客，记录一下这一天。此博客用Hexo + Netlify 搭建的静态网站。</p>\n<p>之前一直用阿里的Leanote来记录笔记，也用Leanote搭建过个人博客，但是总感觉和太过庞杂，想要简洁一些可操作性强一点的个人博客，偶然看到netlify托管网站，然后看到了Hexo + Netlify 搭建的静态网站突然感觉这就是我想要的方式，于是乎搭建了此博客。</p>\n<p>原本只是简单的写了点作为记录，但是今天（2018年12月13日）还是想需要正式一下这篇文章，昨天的博客主题还是Hexo默认主题，今天看到了<a href=\"https://godbmw.com/\" target=\"_blank\" rel=\"noopener\">hexo-theme-bmw</a>主题很清爽（98年诞生的小姐姐，想想自己™白活了）然后就借鉴来了，于是乎对原有内容重新构建一下，为了不给以后的自己有可乘之机。</p>\n<p>“每一个技术的学习，都是从模仿开始。” 这句话是朋友博客上拷贝来的，记录一下。</p>\n<h2 id=\"目前状况\"><a href=\"#目前状况\" class=\"headerlink\" title=\"目前状况\"></a>目前状况</h2><p>混迹于二线城市，目前从事于一家创业公司。<br>15年毕业到18年5月份从事Java技术栈相关工作，之后现在主要Nodejs、Python等技术栈。</p>\n<p>创建博客的主要原因是想提升一下自己，并对自己有一个长远的规划。现在总感觉自己的记忆在衰退，很多已经做过的事情再次接手时总想起人生的终极问题：我是谁？我从哪里来？我要到哪里去？<br>我想还是需要将生活和学习的点滴记录下来，无论是踩过的还是坑爬过的山，记录的过程中都是对过往进行总结和思考，也是对自己的成长的总结。</p>\n<h2 id=\"规划和期望\"><a href=\"#规划和期望\" class=\"headerlink\" title=\"规划和期望\"></a>规划和期望</h2><p>做博客当然要给自己一个规划和要求，希望自己能坚持每周分享一篇博，至于内容还没有硬性要求，只要自己满意就好，养成良好的记录和总结的习惯。<br>记录生活、也记录工作和学习，也希望在记录的时候认识更多志同道合的人，一起分享。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>此博客刚刚创建，那么总有不断完善的过程，目前规划是现将博客基本结构搭建起来，然后分享一下搭建和改善的过程，这是一个大的工作量，但是是一个长期任务，希望不要是这样就草草结束，不希望一切都是最初的样子，那样又有什么意义呢？</p>"},{"title":"Maven将jar倒入本地maven仓库","date":"2018-12-13T14:31:37.000Z","_content":"\n在Java项目开发过程中总会遇到自定义jar包或其他jar不存在maven仓库中，但是因为网络等原因无法更新maven仓库或者无法加载此jar包，那么可以通过下面方法将jar包引入到本地maven仓库中。\n\n<!--more-->\n\n在Java项目开发过程中总会遇到自定义jar包或其他jar不存在maven仓库中，但是因为网络等原因无法更新maven仓库或者无法加载此jar包，那么可以通过下面方法将jar包引入到本地maven仓库中。\n\n## 环境变量配置maven\n\n``` bash\n    # 新建系统变量，保存maven所在位置\n    key=MAVEN_PATH\n    value=E:\\ProgramFiles\\apache-maven-3.2.3\n    # Path 添加上面的 MAVEN_PATH 并指定到bin目录\n    %MAVEN_PATH%\\bin\n    \n    # 验证是否配置成功，cmd中执行 mvn -version\n    C:\\Users\\Administrator>mvn -vesion\n    Apache Maven 3.2.3 (xxxxxxxxxxxxxx; 2014-08-12T04:58:10+08:00)\n    Maven home: E:\\xxxx\\xxxxx\\apache-maven-3.2.3\\bin\\..\n    Java version: 1.8.0_144, vendor: Oracle Corporation\n    Java home: D:\\xxxx\\xxxxx\\Java\\jdk1.8.0_144\\jre\n    Default locale: zh_CN, platform encoding: GBK\n    OS name: \"windows 10\", version: \"10.0\", arch: \"amd64\", family: \"dos\"\n```\n    \n\n## 执行一下命令即可\n\n``` bash\n    # -Dfile 为本地jar包所在的地址\n    # -DgroupId 为pom文件中引的groupId\n    # -DartifactId 为pom文件中引的artifactId\n    # -Dversion 为pom文件中引的version\n    # 引入后pom配置需要和上述的名一致即可\n    mvn install:install-file -Dfile=D:\\myDoc\\private\\private_jars\\javailp-1.2a\\javailp-1.2a.jar -DgroupId=net.sf.javailp -DartifactId=javailp -Dversion=1.2a -Dpackaging=jar\n```\n","source":"_posts/Maven将jar倒入本地maven仓库.md","raw":"---\ntitle: Maven将jar倒入本地maven仓库\ndate: 2018-12-13 22:31:37\ntags: Maven, jar\ncategories: Java\n---\n\n在Java项目开发过程中总会遇到自定义jar包或其他jar不存在maven仓库中，但是因为网络等原因无法更新maven仓库或者无法加载此jar包，那么可以通过下面方法将jar包引入到本地maven仓库中。\n\n<!--more-->\n\n在Java项目开发过程中总会遇到自定义jar包或其他jar不存在maven仓库中，但是因为网络等原因无法更新maven仓库或者无法加载此jar包，那么可以通过下面方法将jar包引入到本地maven仓库中。\n\n## 环境变量配置maven\n\n``` bash\n    # 新建系统变量，保存maven所在位置\n    key=MAVEN_PATH\n    value=E:\\ProgramFiles\\apache-maven-3.2.3\n    # Path 添加上面的 MAVEN_PATH 并指定到bin目录\n    %MAVEN_PATH%\\bin\n    \n    # 验证是否配置成功，cmd中执行 mvn -version\n    C:\\Users\\Administrator>mvn -vesion\n    Apache Maven 3.2.3 (xxxxxxxxxxxxxx; 2014-08-12T04:58:10+08:00)\n    Maven home: E:\\xxxx\\xxxxx\\apache-maven-3.2.3\\bin\\..\n    Java version: 1.8.0_144, vendor: Oracle Corporation\n    Java home: D:\\xxxx\\xxxxx\\Java\\jdk1.8.0_144\\jre\n    Default locale: zh_CN, platform encoding: GBK\n    OS name: \"windows 10\", version: \"10.0\", arch: \"amd64\", family: \"dos\"\n```\n    \n\n## 执行一下命令即可\n\n``` bash\n    # -Dfile 为本地jar包所在的地址\n    # -DgroupId 为pom文件中引的groupId\n    # -DartifactId 为pom文件中引的artifactId\n    # -Dversion 为pom文件中引的version\n    # 引入后pom配置需要和上述的名一致即可\n    mvn install:install-file -Dfile=D:\\myDoc\\private\\private_jars\\javailp-1.2a\\javailp-1.2a.jar -DgroupId=net.sf.javailp -DartifactId=javailp -Dversion=1.2a -Dpackaging=jar\n```\n","slug":"Maven将jar倒入本地maven仓库","published":1,"updated":"2018-12-13T14:45:16.413Z","_id":"cjpmpmfri0009cguiw03ssh3a","comments":1,"layout":"post","photos":[],"link":"","content":"<p>在Java项目开发过程中总会遇到自定义jar包或其他jar不存在maven仓库中，但是因为网络等原因无法更新maven仓库或者无法加载此jar包，那么可以通过下面方法将jar包引入到本地maven仓库中。</p>\n<a id=\"more\"></a>\n<p>在Java项目开发过程中总会遇到自定义jar包或其他jar不存在maven仓库中，但是因为网络等原因无法更新maven仓库或者无法加载此jar包，那么可以通过下面方法将jar包引入到本地maven仓库中。</p>\n<h2 id=\"环境变量配置maven\"><a href=\"#环境变量配置maven\" class=\"headerlink\" title=\"环境变量配置maven\"></a>环境变量配置maven</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 新建系统变量，保存maven所在位置</span></span><br><span class=\"line\">key=MAVEN_PATH</span><br><span class=\"line\">value=E:\\ProgramFiles\\apache-maven-3.2.3</span><br><span class=\"line\"><span class=\"comment\"># Path 添加上面的 MAVEN_PATH 并指定到bin目录</span></span><br><span class=\"line\">%MAVEN_PATH%\\bin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 验证是否配置成功，cmd中执行 mvn -version</span></span><br><span class=\"line\">C:\\Users\\Administrator&gt;mvn -vesion</span><br><span class=\"line\">Apache Maven 3.2.3 (xxxxxxxxxxxxxx; 2014-08-12T04:58:10+08:00)</span><br><span class=\"line\">Maven home: E:\\xxxx\\xxxxx\\apache-maven-3.2.3\\bin\\..</span><br><span class=\"line\">Java version: 1.8.0_144, vendor: Oracle Corporation</span><br><span class=\"line\">Java home: D:\\xxxx\\xxxxx\\Java\\jdk1.8.0_144\\jre</span><br><span class=\"line\">Default locale: zh_CN, platform encoding: GBK</span><br><span class=\"line\">OS name: <span class=\"string\">\"windows 10\"</span>, version: <span class=\"string\">\"10.0\"</span>, arch: <span class=\"string\">\"amd64\"</span>, family: <span class=\"string\">\"dos\"</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"执行一下命令即可\"><a href=\"#执行一下命令即可\" class=\"headerlink\" title=\"执行一下命令即可\"></a>执行一下命令即可</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -Dfile 为本地jar包所在的地址</span></span><br><span class=\"line\"><span class=\"comment\"># -DgroupId 为pom文件中引的groupId</span></span><br><span class=\"line\"><span class=\"comment\"># -DartifactId 为pom文件中引的artifactId</span></span><br><span class=\"line\"><span class=\"comment\"># -Dversion 为pom文件中引的version</span></span><br><span class=\"line\"><span class=\"comment\"># 引入后pom配置需要和上述的名一致即可</span></span><br><span class=\"line\">mvn install:install-file -Dfile=D:\\myDoc\\private\\private_jars\\javailp-1.2a\\javailp-1.2a.jar -DgroupId=net.sf.javailp -DartifactId=javailp -Dversion=1.2a -Dpackaging=jar</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>在Java项目开发过程中总会遇到自定义jar包或其他jar不存在maven仓库中，但是因为网络等原因无法更新maven仓库或者无法加载此jar包，那么可以通过下面方法将jar包引入到本地maven仓库中。</p>","more":"<p>在Java项目开发过程中总会遇到自定义jar包或其他jar不存在maven仓库中，但是因为网络等原因无法更新maven仓库或者无法加载此jar包，那么可以通过下面方法将jar包引入到本地maven仓库中。</p>\n<h2 id=\"环境变量配置maven\"><a href=\"#环境变量配置maven\" class=\"headerlink\" title=\"环境变量配置maven\"></a>环境变量配置maven</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 新建系统变量，保存maven所在位置</span></span><br><span class=\"line\">key=MAVEN_PATH</span><br><span class=\"line\">value=E:\\ProgramFiles\\apache-maven-3.2.3</span><br><span class=\"line\"><span class=\"comment\"># Path 添加上面的 MAVEN_PATH 并指定到bin目录</span></span><br><span class=\"line\">%MAVEN_PATH%\\bin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 验证是否配置成功，cmd中执行 mvn -version</span></span><br><span class=\"line\">C:\\Users\\Administrator&gt;mvn -vesion</span><br><span class=\"line\">Apache Maven 3.2.3 (xxxxxxxxxxxxxx; 2014-08-12T04:58:10+08:00)</span><br><span class=\"line\">Maven home: E:\\xxxx\\xxxxx\\apache-maven-3.2.3\\bin\\..</span><br><span class=\"line\">Java version: 1.8.0_144, vendor: Oracle Corporation</span><br><span class=\"line\">Java home: D:\\xxxx\\xxxxx\\Java\\jdk1.8.0_144\\jre</span><br><span class=\"line\">Default locale: zh_CN, platform encoding: GBK</span><br><span class=\"line\">OS name: <span class=\"string\">\"windows 10\"</span>, version: <span class=\"string\">\"10.0\"</span>, arch: <span class=\"string\">\"amd64\"</span>, family: <span class=\"string\">\"dos\"</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"执行一下命令即可\"><a href=\"#执行一下命令即可\" class=\"headerlink\" title=\"执行一下命令即可\"></a>执行一下命令即可</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -Dfile 为本地jar包所在的地址</span></span><br><span class=\"line\"><span class=\"comment\"># -DgroupId 为pom文件中引的groupId</span></span><br><span class=\"line\"><span class=\"comment\"># -DartifactId 为pom文件中引的artifactId</span></span><br><span class=\"line\"><span class=\"comment\"># -Dversion 为pom文件中引的version</span></span><br><span class=\"line\"><span class=\"comment\"># 引入后pom配置需要和上述的名一致即可</span></span><br><span class=\"line\">mvn install:install-file -Dfile=D:\\myDoc\\private\\private_jars\\javailp-1.2a\\javailp-1.2a.jar -DgroupId=net.sf.javailp -DartifactId=javailp -Dversion=1.2a -Dpackaging=jar</span><br></pre></td></tr></table></figure>"},{"title":"Hello World","date":"2018-12-12T04:24:06.000Z","top":null,"_content":"\nWelcome to [hhongwen](https://hhongwen.cn/) person blog! This is my very first post...\n修改于搭建博客的hello word，记得第一次写Hello World还是上大一的时候，匆匆那年一去复返。\n\n``` code\n    printf(\"Hello Word\")\n    System.out.println(\"Hello Word\")\n    print('Hello Word')\n    console.log('Hello Word')\n    ...\n```\n\n<!--more-->\n\nWelcome to [hhongwen](https://hhongwen.cn/)! This is my very first post...\n修改于搭建博客的hello word，记得第一次写Hello World还是上大一的时候，匆匆那年一去复返。\n\n``` code\n    printf(\"Hello Word\")\n    System.out.println(\"Hello Word\")\n    print('Hello Word')\n    console.log('Hello Word')\n```\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ndate: 2018-12-12 12:24:06\ntags: 随笔\ncategories: 随笔\ntop: \n---\n\nWelcome to [hhongwen](https://hhongwen.cn/) person blog! This is my very first post...\n修改于搭建博客的hello word，记得第一次写Hello World还是上大一的时候，匆匆那年一去复返。\n\n``` code\n    printf(\"Hello Word\")\n    System.out.println(\"Hello Word\")\n    print('Hello Word')\n    console.log('Hello Word')\n    ...\n```\n\n<!--more-->\n\nWelcome to [hhongwen](https://hhongwen.cn/)! This is my very first post...\n修改于搭建博客的hello word，记得第一次写Hello World还是上大一的时候，匆匆那年一去复返。\n\n``` code\n    printf(\"Hello Word\")\n    System.out.println(\"Hello Word\")\n    print('Hello Word')\n    console.log('Hello Word')\n```\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"updated":"2018-12-13T13:52:49.524Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjpmpmfrn000ccguimxof32d6","content":"<p>Welcome to <a href=\"https://hhongwen.cn/\">hhongwen</a> person blog! This is my very first post…<br>修改于搭建博客的hello word，记得第一次写Hello World还是上大一的时候，匆匆那年一去复返。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">printf(&quot;Hello Word&quot;)</span><br><span class=\"line\">System.out.println(&quot;Hello Word&quot;)</span><br><span class=\"line\">print(&apos;Hello Word&apos;)</span><br><span class=\"line\">console.log(&apos;Hello Word&apos;)</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p>Welcome to <a href=\"https://hhongwen.cn/\">hhongwen</a>! This is my very first post…<br>修改于搭建博客的hello word，记得第一次写Hello World还是上大一的时候，匆匆那年一去复返。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">printf(&quot;Hello Word&quot;)</span><br><span class=\"line\">System.out.println(&quot;Hello Word&quot;)</span><br><span class=\"line\">print(&apos;Hello Word&apos;)</span><br><span class=\"line\">console.log(&apos;Hello Word&apos;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"<p>Welcome to <a href=\"https://hhongwen.cn/\">hhongwen</a> person blog! This is my very first post…<br>修改于搭建博客的hello word，记得第一次写Hello World还是上大一的时候，匆匆那年一去复返。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">printf(&quot;Hello Word&quot;)</span><br><span class=\"line\">System.out.println(&quot;Hello Word&quot;)</span><br><span class=\"line\">print(&apos;Hello Word&apos;)</span><br><span class=\"line\">console.log(&apos;Hello Word&apos;)</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>","more":"<p>Welcome to <a href=\"https://hhongwen.cn/\">hhongwen</a>! This is my very first post…<br>修改于搭建博客的hello word，记得第一次写Hello World还是上大一的时候，匆匆那年一去复返。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">printf(&quot;Hello Word&quot;)</span><br><span class=\"line\">System.out.println(&quot;Hello Word&quot;)</span><br><span class=\"line\">print(&apos;Hello Word&apos;)</span><br><span class=\"line\">console.log(&apos;Hello Word&apos;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjpmpmfrh0008cguig564mk05","category_id":"cjpmpmfrj000acguiibd5v3mf","_id":"cjpmpmfrq000gcguicqtzx9vu"},{"post_id":"cjpmpmfri0009cguiw03ssh3a","category_id":"cjpmpmfro000dcguif68ky0sx","_id":"cjpmpmfrs000kcguivm2ir1os"},{"post_id":"cjpmpmfrn000ccguimxof32d6","category_id":"cjpmpmfrj000acguiibd5v3mf","_id":"cjpmpmfrs000mcguiulfllju3"},{"post_id":"cjpmpmfrf0006cguiqctethi8","category_id":"cjpmpnn0g000ncgui15l9ns6t","_id":"cjpmpnn0l000qcguie7hnvztn"},{"post_id":"cjpmpmfrc0002cguizjc6xmte","category_id":"cjpmpnn0g000ncgui15l9ns6t","_id":"cjpmprlfv000scguiuhoe0x7m"},{"post_id":"cjpmpmfre0004cgui76fu8jm0","category_id":"cjpmpnn0g000ncgui15l9ns6t","_id":"cjpmq1lvk000vcguicodqd69a"},{"post_id":"cjpmpmfr60000cgui5py6kffu","category_id":"cjpmpnn0g000ncgui15l9ns6t","_id":"cjpmq8d8h000ycgui4xqzbw22"}],"PostTag":[{"post_id":"cjpmpmfrh0008cguig564mk05","tag_id":"cjpmpmfrm000bcgui921b4ihd","_id":"cjpmpmfrp000fcgui0e5lsvn2"},{"post_id":"cjpmpmfri0009cguiw03ssh3a","tag_id":"cjpmpmfro000ecguip9fhmm32","_id":"cjpmpmfrr000jcguiprpgoktw"},{"post_id":"cjpmpmfrn000ccguimxof32d6","tag_id":"cjpmpmfrm000bcgui921b4ihd","_id":"cjpmpmfrs000lcguivx4oo29k"},{"post_id":"cjpmpmfrf0006cguiqctethi8","tag_id":"cjpmpnn0i000ocgui8rd2nqhr","_id":"cjpmpnn0j000pcguidyael2lx"},{"post_id":"cjpmpmfrc0002cguizjc6xmte","tag_id":"cjpmprlft000rcguictyosam2","_id":"cjpmprlfx000tcgui4n4df1v0"},{"post_id":"cjpmpmfre0004cgui76fu8jm0","tag_id":"cjpmq1lvi000ucguitxbpvsgb","_id":"cjpmq1lvl000wcguiuscztw0l"},{"post_id":"cjpmpmfr60000cgui5py6kffu","tag_id":"cjpmq8d8f000xcguinq5q0i2a","_id":"cjpmq8d8i000zcguibdteo74p"}],"Tag":[{"name":"随笔","_id":"cjpmpmfrm000bcgui921b4ihd"},{"name":"Maven, jar","_id":"cjpmpmfro000ecguip9fhmm32"},{"name":"JDk","_id":"cjpmpnn0i000ocgui8rd2nqhr"},{"name":"网络","_id":"cjpmprlft000rcguictyosam2"},{"name":"Python","_id":"cjpmq1lvi000ucguitxbpvsgb"},{"name":"MongoDB","_id":"cjpmq8d8f000xcguinq5q0i2a"}]}}